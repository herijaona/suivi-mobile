{"version":3,"sources":["webpack:///src/app/pages/patient/profile/profile.page.html","webpack:///src/app/pages/patient/profile/profile-routing.module.ts","webpack:///src/app/pages/patient/profile/profile.module.ts","webpack:///src/app/pages/patient/profile/profile.page.scss","webpack:///src/app/pages/patient/profile/profile.page.ts"],"names":["routes","path","component","ProfilePageRoutingModule","imports","forChild","exports","ProfilePageModule","declarations","ProfilePage","patienSrvc","_id","validation_msg","getProfile","data","patientRegisterForm","birthday","required","country","city","gender","address","email","type_patient","addControl","valid","Object","keys","value","forEach","key","console","log","e1","e2","id","subscribe","profile","buildForm","selector","template"],"mappings":"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","file":"profile-profile-module-es5.js","sourcesContent":["export default \"<ion-header translucent=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons *ngIf=\\\"!ios\\\" slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n      <ion-title slot=\\\"start\\\">Profile</ion-title>\\n    </ion-buttons>\\n\\n    <ion-menu-button *ngIf=\\\"ios\\\"></ion-menu-button>\\n\\n    <ion-title slot=\\\"end\\\" color=\\\"tertiary\\\" class=\\\"identifiant\\\" *ngIf=\\\"profile\\\"\\n      >{{profile.username}}</ion-title\\n    >\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <div class=\\\"card\\\">\\n    <div class=\\\"header\\\">\\n      <div class=\\\"avatar\\\">\\n        <img src=\\\"./../../../../assets/images/praticien.jpg\\\" alt=\\\"\\\" />\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"card-body\\\" *ngIf=\\\"profile\\\">\\n    <div class=\\\"user-meta ion-text-center\\\">\\n      <h3 class=\\\"playername\\\">\\n        {{profile.first_name}} {{profile.last_name}} ({{type_patient}})\\n      </h3>\\n      <h6 class=\\\"ranking\\\">\\n        Date de création:\\n        <ion-chip>\\n          <ion-label>{{profile.created_at}}</ion-label>\\n        </ion-chip>\\n      </h6>\\n    </div>\\n    <div>\\n      <form [formGroup]=\\\"patientRegisterForm\\\">\\n        <ion-item lines=\\\"full\\\" disabled>\\n          <ion-label position=\\\"stacked\\\">Date de naissance</ion-label>\\n          <ion-datetime\\n            display-format=\\\"MMM DD, YYYY\\\"\\n            picker-format=\\\"MMM DD, YYYY\\\"\\n            [ngModel]=\\\"profile.date_on_born\\\"\\n            formControlName=\\\"birthday\\\"\\n            required\\n          ></ion-datetime>\\n        </ion-item>\\n        <ion-item lines=\\\"full\\\">\\n          <ion-label position=\\\"stacked\\\">Pays</ion-label>\\n          <ion-select\\n            placeholder=\\\"Select\\\"\\n            formControlName=\\\"country\\\"\\n            [(ngModel)]=\\\"profile.state\\\"\\n            [compareWith]=\\\"compareFn\\\"\\n            required\\n          >\\n            <ion-select-option value=\\\"1\\\">Madagascar</ion-select-option>\\n            <ion-select-option value=\\\"196\\\">France</ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n\\n        <ion-item lines=\\\"full\\\">\\n          <ion-label position=\\\"stacked\\\">Ville</ion-label>\\n          <ion-select\\n            placeholder=\\\"Select\\\"\\n            formControlName=\\\"city\\\"\\n            required\\n            [(ngModel)]=\\\"profile.city\\\"\\n            [compareWith]=\\\"compareFn\\\"\\n          >\\n            <ion-select-option value=\\\"196\\\"> Madagascar</ion-select-option>\\n            <ion-select-option value=\\\"1\\\">France</ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n\\n        <ion-item lines=\\\"full\\\" disabled>\\n          <ion-label position=\\\"stacked\\\">Sexe</ion-label>\\n          <ion-select\\n            placeholder=\\\"Select\\\"\\n            formControlName=\\\"gender\\\"\\n            required\\n            [ngModel]=\\\"profile.sexe\\\"\\n          >\\n            <ion-select-option>Masculin</ion-select-option>\\n            <ion-select-option>Feminin</ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n\\n        <ion-item lines=\\\"full\\\">\\n          <ion-label position=\\\"stacked\\\">Adresse</ion-label>\\n          <ion-textarea\\n            required\\n            formControlName=\\\"address\\\"\\n            [ngModel]=\\\"profile.address\\\"\\n          ></ion-textarea>\\n        </ion-item>\\n\\n        <ion-item lines=\\\"full\\\">\\n          <ion-label position=\\\"stacked\\\">Email</ion-label>\\n          <ion-input\\n            type=\\\"text\\\"\\n            required\\n            formControlName=\\\"email\\\"\\n            [ngModel]=\\\"profile.email\\\"\\n          ></ion-input>\\n          <!-- <div\\n            style=\\\"color: red; padding-top: 0.2rem\\\"\\n            *ngIf=\\\"patientRegisterForm.hasError('required', 'email')\\\"\\n          ></div> -->\\n          <!-- <div\\n            *ngIf=\\\"!patientRegisterForm.controls.email.valid &&\\n            patientRegisterForm.controls.email.dirty\\\"\\n            class=\\\"validator-error\\\"\\n          >\\n            Please enter a valid email.\\n          </div> -->\\n        </ion-item>\\n\\n        <ion-item lines=\\\"full\\\" *ngIf=\\\"profile.father_name\\\">\\n          <ion-label position=\\\"stacked\\\"\\n            >Nom du père{{profile.father_name}}</ion-label\\n          >\\n          <ion-input\\n            type=\\\"text\\\"\\n            required\\n            formControlName=\\\"father_name\\\"\\n            [ngModel]=\\\"this.profile.father_name\\\"\\n          ></ion-input>\\n        </ion-item>\\n        <ion-item lines=\\\"full\\\" *ngIf=\\\"profile.mother_name\\\">\\n          <ion-label position=\\\"stacked\\\">Nom de la mère</ion-label>\\n          <ion-input\\n            type=\\\"text\\\"\\n            required\\n            formControlName=\\\"mother_name\\\"\\n            [ngModel]=\\\"this.profile.mother_name\\\"\\n          ></ion-input>\\n        </ion-item>\\n\\n        <ion-row>\\n          <ion-col>\\n            <ion-button\\n              type=\\\"submit\\\"\\n              color=\\\"sgreen \\\"\\n              expand=\\\"full\\\"\\n              (click)=\\\"update()\\\"\\n              >Modifier</ion-button\\n            >\\n          </ion-col>\\n        </ion-row>\\n      </form>\\n    </div>\\n  </div>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfilePage } from './profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfilePageRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { ProfilePageRoutingModule } from \"./profile-routing.module\";\n\nimport { ProfilePage } from \"./profile.page\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProfilePageRoutingModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [ProfilePage],\n})\nexport class ProfilePageModule {}\n","export default \"@charset \\\"UTF-8\\\";\\nion-content {\\n  position: relative;\\n  height: 100%;\\n  width: 100%;\\n}\\nion-toolbar {\\n  background: transparent;\\n}\\n.card {\\n  background: url('doctor.jpg') no-repeat top center/cover fixed, #fff;\\n  margin: 0 auto;\\n}\\n.card .header {\\n  height: 200px;\\n}\\n.card .header .avatar {\\n  width: 160px;\\n  height: 160px;\\n  position: relative;\\n  margin: 0 auto;\\n}\\n.card .header .avatar img {\\n  display: block;\\n  border-radius: 50%;\\n  position: absolute;\\n  bottom: calc(-1 * (80px + 4px));\\n  border: 8px solid var(--ion-color-sgreen);\\n  background-color: #fff;\\n}\\n.card-body {\\n  background-color: #ffffff;\\n  padding: 30px;\\n  height: calc(100vh – (200px + 56px));\\n  overflow: hidden;\\n}\\n.card-body .user-meta {\\n  padding-top: 40px;\\n}\\n.card-body .user-meta .playername {\\n  font-size: 24px;\\n  font-weight: 600;\\n  color: #303940;\\n}\\n.card-body .user-meta .country {\\n  font-size: 90%;\\n  color: #949ea6;\\n  text-transform: uppercase;\\n  margin: 0 auto;\\n}\\n.identifiant {\\n  font-style: italic;\\n  font-size: medium;\\n  color: var(--ion-color-sred);\\n  padding-right: 30px;\\n  font-size: 18px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcGF0aWVudC9wcm9maWxlL3Byb2ZpbGUucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQjtBQUFoQjtFQUNFLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7QUFFRjtBQUFBO0VBQ0UsdUJBQUE7QUFHRjtBQUFBO0VBQ0Usb0VBQUE7RUFHQSxjQUFBO0FBQ0Y7QUFDRTtFQUNFLGFBQUE7QUFDSjtBQUNJO0VBQ0UsWUFBQTtFQUNBLGFBQUE7RUFDQSxrQkFBQTtFQUNBLGNBQUE7QUFDTjtBQUNNO0VBQ0UsY0FBQTtFQUNBLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSwrQkFBQTtFQUNBLHlDQUFBO0VBQ0Esc0JBQUE7QUFDUjtBQUtBO0VBQ0UseUJBQUE7RUFDQSxhQUFBO0VBQ0Esb0NBQUE7RUFDQSxnQkFBQTtBQUZGO0FBSUU7RUFDRSxpQkFBQTtBQUZKO0FBSUk7RUFDRSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxjQUFBO0FBRk47QUFLSTtFQUNFLGNBQUE7RUFDQSxjQUFBO0VBQ0EseUJBQUE7RUFDQSxjQUFBO0FBSE47QUFPQTtFQUNFLGtCQUFBO0VBQ0EsaUJBQUE7RUFDQSw0QkFBQTtFQUNBLG1CQUFBO0VBQ0EsZUFBQTtBQUpGIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvcGF0aWVudC9wcm9maWxlL3Byb2ZpbGUucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGNoYXJzZXQgXCJVVEYtOFwiO1xuaW9uLWNvbnRlbnQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbmlvbi10b29sYmFyIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG59XG5cbi5jYXJkIHtcbiAgYmFja2dyb3VuZDogdXJsKC4vLi4vLi4vLi4vLi4vYXNzZXRzL2ltYWdlcy9kb2N0b3IuanBnKSBuby1yZXBlYXQgdG9wIGNlbnRlci9jb3ZlciBmaXhlZCwgI2ZmZjtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG4uY2FyZCAuaGVhZGVyIHtcbiAgaGVpZ2h0OiAyMDBweDtcbn1cbi5jYXJkIC5oZWFkZXIgLmF2YXRhciB7XG4gIHdpZHRoOiAxNjBweDtcbiAgaGVpZ2h0OiAxNjBweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXJnaW46IDAgYXV0bztcbn1cbi5jYXJkIC5oZWFkZXIgLmF2YXRhciBpbWcge1xuICBkaXNwbGF5OiBibG9jaztcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogY2FsYygtMSAqICg4MHB4ICsgNHB4KSk7XG4gIGJvcmRlcjogOHB4IHNvbGlkIHZhcigtLWlvbi1jb2xvci1zZ3JlZW4pO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xufVxuXG4uY2FyZC1ib2R5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgcGFkZGluZzogMzBweDtcbiAgaGVpZ2h0OiBjYWxjKDEwMHZoIOKAkyAoMjAwcHggKyA1NnB4KSk7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG4uY2FyZC1ib2R5IC51c2VyLW1ldGEge1xuICBwYWRkaW5nLXRvcDogNDBweDtcbn1cbi5jYXJkLWJvZHkgLnVzZXItbWV0YSAucGxheWVybmFtZSB7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgY29sb3I6ICMzMDM5NDA7XG59XG4uY2FyZC1ib2R5IC51c2VyLW1ldGEgLmNvdW50cnkge1xuICBmb250LXNpemU6IDkwJTtcbiAgY29sb3I6ICM5NDllYTY7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4uaWRlbnRpZmlhbnQge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIGZvbnQtc2l6ZTogbWVkaXVtO1xuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXNyZWQpO1xuICBwYWRkaW5nLXJpZ2h0OiAzMHB4O1xuICBmb250LXNpemU6IDE4cHg7XG59Il19 */\";","import { Component, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { IProfilePatient } from \"src/app/Interfaces/patient.interface\";\nimport { PatientService } from \"src/app/services/patient.service\";\n\n@Component({\n  selector: \"app-profile\",\n  templateUrl: \"./profile.page.html\",\n  styleUrls: [\"./profile.page.scss\"],\n})\nexport class ProfilePage implements OnInit {\n  ios: boolean;\n  showSearchbar: boolean;\n  public patientRegisterForm: FormGroup;\n  public _id = \"Identifiant\";\n  public profile: IProfilePatient;\n  validation_msg = {};\n  public type_patient;\n  constructor(private patienSrvc: PatientService) {\n    this.getProfile();\n  }\n\n  ngOnInit() {}\n\n  buildForm(data: IProfilePatient) {\n    this.patientRegisterForm = new FormGroup({\n      // lastName: new FormControl(\"\", [Validators.required]),\n      // firstName: new FormControl(\"\", [Validators.required]),\n      birthday: new FormControl(\"\", [Validators.required]),\n      // description: new FormControl(\"\", [Validators.required]),\n      country: new FormControl(\"\", [Validators.required]),\n      city: new FormControl(\"\", [Validators.required]),\n      gender: new FormControl(\"\", [Validators.required]),\n      function: new FormControl(\"\", [Validators.required]),\n      address: new FormControl(\"\", [Validators.required]),\n      email: new FormControl(\"\", [Validators.required]),\n      // password: new FormControl(\"\", [Validators.required]),\n    });\n\n    if (data.type_patient == 1) {\n      this.patientRegisterForm.addControl(\n        \"father_name\",\n        new FormControl(\"\", [Validators.required])\n      );\n      this.patientRegisterForm.addControl(\n        \"mother_name\",\n        new FormControl(\"\", [Validators.required])\n      );\n    }\n  }\n\n  async update() {\n    if (this.patientRegisterForm.valid) {\n      Object.keys(this.patientRegisterForm.value).forEach((key) => {\n        console.log(\"valid\", this.patientRegisterForm.value[key]);\n      });\n    } else {\n      console.log(\"NOT valid\", this.patientRegisterForm);\n\n      Object.keys(this.patientRegisterForm.value).forEach((key) => {\n        console.log(\"NOT valid\", this.patientRegisterForm.value[key]);\n      });\n    }\n  }\n  //Comparaison select\n  compareFn(e1: any, e2: any): boolean {\n    return e1 && e2 ? e1.id == e2.id : e1 == e2;\n  }\n\n  getProfile() {\n    this.patienSrvc.getProfile().subscribe((data: IProfilePatient) => {\n      console.log(data);\n      this.profile = data;\n      // this.profile.date_on_born = new Date(data.date_on_born);\n      this.buildForm(data);\n      this.type_patient = data.type_patient == 1 ? \"Enfant\" : \"Adult\";\n    });\n  }\n}\n"]}