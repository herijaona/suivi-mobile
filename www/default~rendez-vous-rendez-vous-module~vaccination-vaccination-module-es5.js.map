{"version":3,"sources":["webpack:///src/app/pages/global.interaction.ts","webpack:///src/app/services/data-transformer.service.ts","webpack:///src/app/services/global-data.service.ts","webpack:///src/app/services/patient.service.ts"],"names":["GlobalInteraction","toastCtrl","loadingCtrl","alertCtrl","isLoading","msg","create","message","duration","position","toast","present","cssClass","spinner","translucent","then","a","dismiss","id","parent","callback","defaultCallback","_header","array","header","buttons","text","role","handler","console","log","warn","alert","presentToast","providedIn","DataTransformerService","list","string_date","dataShow","forEach","element","dataToPush","Object","assign","show","push","listByDate","regroupDataByDate","res","data","dataByDate","groups","reduce","eachData","date","groupArrays","keys","map","sortedActivities","slice","sort","b","Date","getTime","query","keysOnFilter","keysStatus","segment","dataToFilter","subKeyParent","subkeysOnFilter","OkStatus","newData","item","goOnSecondFilter","toLowerCase","includes","exculed","key","acceptedString","status","GlobalDataService","http","url","url_dev","url_api","url_dev_api","get","subscribe","_idPractitionerFunction","post","id_fonction","_idCountry","id_country","_idCity","id_city","_idCenter","PatientService","url_apip","excludeTracks","MOCK_DATA_JSON","pipe","nomGroupe","designation","_idFamily","_idPraticien","praticien"],"mappings":"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","file":"default~rendez-vous-rendez-vous-module~vaccination-vaccination-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { LoadingController, ToastController, AlertController } from '@ionic/angular';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class GlobalInteraction {\r\n    isLoading = false;\r\n    constructor(public toastCtrl: ToastController, public loadingCtrl: LoadingController, public alertCtrl: AlertController) { }\r\n\r\n    async presentToast(msg) {\r\n        const toast = await this.toastCtrl.create({\r\n            message: msg,\r\n            duration: 1800,\r\n            position: \"top\",\r\n        });\r\n        toast.present();\r\n    }\r\n\r\n    async presentLoading() {\r\n        this.isLoading = true;\r\n        return await this.loadingCtrl.create({\r\n            cssClass: \"my-loading-class\",\r\n            spinner: \"bubbles\",\r\n            translucent: true,\r\n            duration: 100000,\r\n        }).then(a => {\r\n            a.present().then(() => {\r\n                if (!this.isLoading) {\r\n                    a.dismiss();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    async dismissLoading() {\r\n        if (this.isLoading) {\r\n            this.isLoading = false;\r\n            return await this.loadingCtrl.dismiss();\r\n        }\r\n        return null;\r\n    }\r\n\r\n    async alertDelete(\r\n        id,\r\n        parent,\r\n        msg = \"Tu veux vraiment supprimé cette element ? \",\r\n        callback = this.defaultCallback,\r\n        _header = \"Suppression\",\r\n        array = []\r\n    ) {\r\n        const alert = await this.alertCtrl.create({\r\n            cssClass: \"my-custom-class\",\r\n            header: _header,\r\n            message: msg,\r\n            buttons: [\r\n                {\r\n                    text: \"Cancel\",\r\n                    role: \"cancel\",\r\n                    cssClass: \"secondary\",\r\n                    handler: () => {\r\n                        console.log(\"Confirm Cancel: blah\");\r\n                    },\r\n                },\r\n                {\r\n                    text: \"OK\",\r\n                    handler: () => {\r\n                        console.warn(\"data deleted \" + id);\r\n                        // this.remove(id, array, keyStatus, RefuseStatus);\r\n                        callback(id, parent)\r\n                    },\r\n                },\r\n            ],\r\n        });\r\n        await alert.present();\r\n    }\r\n\r\n    defaultCallback(id, parent) {\r\n        this.presentToast(`this is a default callback ${id} `);\r\n    }\r\n}\r\n","import { Injectable } from \"@angular/core\";\nimport { AlertController } from \"@ionic/angular\";\nimport { from, Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DataTransformerService {\n  constructor() { }\n\n  allData(list, string_date = \"date\"): { data: any[]; dataByDate: { date: string; groups: any }[] } {\n    let dataShow: any[] = [];\n    list.forEach((element) => {\n      const dataToPush = Object.assign(element, { show: true });\n      dataShow.push(dataToPush);\n    });\n    const listByDate = this.regroupDataByDate([...dataShow], string_date);\n    const res = {\n      data: dataShow,\n      dataByDate: listByDate,\n    };\n    return res;\n  }\n  // Regrouper les données en fonction de la date\n  regroupDataByDate(data, string_date) {\n    const groups = data.reduce((groups, eachData) => {\n      console.log(\"regroupDataByDate -> eachData\", eachData)\n      // const date = eachData.date_prise.split(\"T\")[0];\n      const date = eachData[string_date].date;\n      // const date = eachData.date;\n      if (!groups[date]) {\n        groups[date] = [];\n      }\n      groups[date].push(eachData);\n      return groups;\n    }, {});\n\n    const groupArrays = Object.keys(groups).map((date) => {\n      return {\n        date,\n        groups: groups[date],\n      };\n    });\n    const sortedActivities = groupArrays.slice().sort(function (a, b) {\n      return new Date(a.date).getTime() - new Date(b.date).getTime();\n    });\n    return sortedActivities;\n  }\n\n  filterItems(\n    query: any,\n    keysOnFilter: any = [],\n    keysStatus: string = \"status\",\n    segment: String = \"all\",\n    dataToFilter: any = [],\n    subKeyParent = null,\n    subkeysOnFilter?: any,\n    OkStatus: string = \"Accepted\"\n  ) {\n    const newData = [...dataToFilter];\n    newData.forEach((item) => {\n      item.groups.forEach((res) => {\n        let goOnSecondFilter = false;\n        if (segment == \"all\") {\n          if (subKeyParent != null) {\n            for (let element of subkeysOnFilter) {\n              if (\n                res[`${subKeyParent}`][`${element}`]\n                  .toLowerCase()\n                  .includes(query)\n              ) {\n                console.log(\n                  \"regroupDataByDate -> subKeyParent true ==========> \",\n                  res\n                );\n                res.show = true;\n                goOnSecondFilter = true;\n                break;\n              } else {\n                res.show = false;\n              }\n            }\n          }\n          if (goOnSecondFilter == false) {\n            for (let element of keysOnFilter) {\n              if (res[`${element}`].toLowerCase().includes(query)) {\n                res.show = true;\n                break;\n              } else {\n                res.show = false;\n              }\n            }\n          }\n        } else {\n          if (res[`${keysStatus}`] === OkStatus) {\n            if (subKeyParent) {\n              for (let element of subkeysOnFilter) {\n                if (\n                  res[`${subKeyParent}`][`${element}`]\n                    .toLowerCase()\n                    .includes(query)\n                ) {\n                  res.show = true;\n                  goOnSecondFilter = true;\n                  break;\n                } else {\n                  res.show = false;\n                }\n              }\n            }\n          }\n          if (goOnSecondFilter == false) {\n            for (let element of keysOnFilter) {\n              if (res[`${element}`].toLowerCase().includes(query)) {\n                res.show = true;\n                break;\n              } else {\n                res.show = false;\n              }\n            }\n          }\n        }\n      });\n    });\n    console.log(\"newData\", newData);\n    return newData;\n  }\n\n  hideOnexclude(\n    exculed: any[] = [],\n    keysOnFilter: any = [],\n    segment: String = \"all\",\n    dataToFilter: any = [],\n    keysStatus: String = \"status\"\n  ) {\n    const newData = [...dataToFilter];\n    newData.forEach((item) => {\n      item.groups.forEach((element) => {\n        if (segment == \"all\") {\n          for (let key of keysOnFilter) {\n            console.log(\n              \"key\",\n              key,\n              \"exculeded\",\n              exculed,\n              \"//////////////////////////\",\n              element[`${key}`].toLowerCase()\n            );\n            if (exculed.includes(element[`${key}`].toLowerCase())) {\n              element.show = false;\n              console.log(\"element.show ---------------- \", element.show);\n              break;\n            } else {\n              element.show = true;\n            }\n          }\n        } else {\n          if (element[`${keysStatus}`] === \"Accepted\") {\n            for (let key of keysOnFilter) {\n              if (exculed.includes(element[`${key}`].toLowerCase())) {\n                element.show = false;\n                break;\n              } else {\n                element.show = true;\n              }\n            }\n          }\n        }\n      });\n    });\n    console.log(\"newData\", newData);\n    return newData;\n  }\n\n  onlyAccepted(\n    dataToFilter: any = [],\n    keysStatus,\n    acceptedString = \"Accepted\",\n    segment = \"all\"\n  ) {\n    const newData = [...dataToFilter];\n\n    if (segment === \"all\") {\n      newData.forEach((item) => {\n        item.groups.forEach((res) => {\n          res.show = true;\n        });\n      });\n      return newData;\n    }\n    newData.forEach((item) => {\n      item.groups.forEach((res) => {\n        const status = res[`${keysStatus}`];\n        if (status === acceptedString) {\n          res.show = true;\n        } else {\n          res.show = false;\n        }\n      });\n    });\n    return newData;\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { IUserPraticien } from '../Interfaces/praticien.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalDataService {\n  private url = environment.url_dev;\n  private url_api = environment.url_dev_api;\n  constructor(public http: HttpClient) { }\n\n  getCountry(): Observable<any> {\n    const res = this.http.get<any>(this.url_api + \"country\");\n    res.subscribe(data => {\n      console.log(\"GlobalDataService -> getCountry -> data\", data)\n    })\n    return res;\n  }\n\n  getCity(id): Observable<any> {\n    const res = this.http.get<any>(this.url_api + `city?id=${id}`);\n    console.log(\"GlobalDataService -> constructor -> this.url_api + `city?id=${id}`\", this.url_api + `city?id=${id}`)\n    res.subscribe(data => {\n      console.log(\"GlobalDataService -> getCity -> data\", data)\n    })\n    return res;\n  }\n\n  getCountryByPratictitionerFunction(_idPractitionerFunction) {\n    const res = this.http.post(`${this.url_api}country/fonction`, { id_fonction: _idPractitionerFunction });\n    return res;\n  }\n\n  getCityByPractitionerFunctionAndCountry(_idPractitionerFunction, _idCountry) {\n    const res = this.http.post(`${this.url_api}city/fonction`, { id_fonction: _idPractitionerFunction, id_country: _idCountry });\n    return res;\n  }\n\n  getPractitionerByFunctionCountryAndCity(_idPractitionerFunction, _idCountry, _idCity) {\n    const res = this.http.post(`${this.url_api}praticien/fonction`, { id_fonction: _idPractitionerFunction, id_country: _idCountry, id_city: _idCity });\n    return res;\n  }\n\n  getCenterHealthByCity(_idCity) {\n    const res = this.http.post(`${this.url_api}praticien/centre`, { id: _idCity });\n    return res;\n  }\n\n  getPraticienByCenter(_idCenter) {\n    const res = this.http.post(`${this.url_api}centre/praticien`, { id: _idCenter });\n    return res;\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { IPatient, IRegisterPatient, IVaccinPatient, IProfilePatient, IPatientFamilyGroup } from \"../Interfaces/patient.interface\";\n\nimport { from } from \"rxjs\";\nimport { CONSTANT } from \"src/constant\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { map } from \"rxjs/operators\";\nimport { environment } from \"src/environments/environment\";\nimport { IUserPraticien } from '../Interfaces/praticien.interface';\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class PatientService {\n  private url = environment.url_dev;\n  private url_api = environment.url_dev_api;\n  private url_apip = environment.url_dev;\n  private rdvData;\n  constructor(public http: HttpClient) { }\n\n  // TODO Get Patients\n  getPatients(): Observable<IPatient[]> {\n    return this.http.get<IPatient[]>(this.url + \"patients\");\n    // return this.http.get(CONSTANT.MOCK_DATA_JSON).pipe(\n    //   map((data: any) => {\n    //     return data.mockPatient;\n    //   })\n    // );\n  }\n\n  getAllRdv() {\n    return this.http.get(`${this.url_apip}patients/rdv`);\n    // return this.http.get(CONSTANT.MOCK_DATA_JSON).pipe(\n    //   map((data: any) => {\n    //     return data.mockRdvListPatient;\n    //   })\n    // );\n  }\n\n  getTracksRdv(excludeTracks?) {\n    return this.http.get(CONSTANT.MOCK_DATA_JSON).pipe(\n      map((data: any) => {\n        console.log(\"PatientService -> getTracksRdv -> data\", excludeTracks);\n        return data;\n      })\n    );\n  }\n\n  //TODO : Get Vaccin by patient\n  getVaccinByPatient() {\n    return this.http.get<IVaccinPatient[]>(`${this.url_apip}patients/vaccination`);\n\n    // return this.http.get(CONSTANT.MOCK_DATA_JSON).pipe(\n    //   map((data: any) => {\n    //     return data.mockVaccinPatient;\n    //   })\n    // );\n  }\n\n  registerPatient(data: IRegisterPatient) {\n    return this.http.post<IRegisterPatient>(`${this.url_api}users`, data);\n    Object.keys(data).forEach((element) => {\n      console.log(\"PatientService -> registerPatient -> element\", element);\n      console.log(\"register => \", data[element]);\n    });\n  }\n\n  getProfile() {\n    return this.http.get<IProfilePatient[]>(`${this.url_apip}patient/profile`);\n\n    // return this.http.get(CONSTANT.MOCK_DATA_JSON).pipe(\n    //   map((data: any) => {\n    //     return data.mockPatientProfile;\n    //   })\n    // );\n  }\n\n  updateProfile(data) {\n    return this.http.post(`${this.url_apip}patient/profile/edit`, data);\n  }\n\n  getAssociatedPraticians(): Observable<IUserPraticien[]> {\n    const res = this.http.get<IUserPraticien[]>(`${this.url_apip}patients/praticien`);\n    res.subscribe(data => {\n      console.log(\"PatientService -> constructor -> res\", data);\n    })\n    return res;\n  }\n\n  getFamily() {\n    const res = this.http.get(`${this.url_apip}patients/family`);\n    res.subscribe(data => console.log(\"PatientService -> getFamily -> res\", data))\n    return res;\n  }\n\n  addGroupFamily(nomGroupe) {\n    const data = {\n      designation: nomGroupe,\n    }\n    console.log(\"LL: PatientService -> addGroupFamily -> data\", data)\n    const res = this.http.post(`${this.url_apip}register/group`, data);\n    return res;\n  }\n\n  addGroupFamilyMember(data) {\n    console.log(\"PatientService -> addGroupFamilyMember -> data\", data)\n    const res = this.http.post(`${this.url_api}add/membres`, data);\n    return res;\n  }\n\n  deleteFamilyMember(_idFamily) {\n    const res = this.http.delete(`${this.url_api}family/${_idFamily}`);\n    return res;\n  }\n\n  interventionPraticien(data) {\n    console.log(\"####################LL: PatientService -> interventionPraticien -> data\", data)\n    const res = this.http.post(`${this.url_apip}intervention`, data);\n    return res;\n  }\n\n  chekIfPractitionerIsAssociated(_idPraticien) {\n    const res = this.http.get(`${this.url_apip}patients/check-association/${_idPraticien}`);\n    return res;\n  }\n\n  proposeRdv(data) {\n    const res = this.http.post(`${this.url_apip}add/rdv`, data);\n    return res;\n  }\n\n  cancelRdvProposition(data) {\n    const res = this.http.post(`${this.url_api}cancel/rdv`, data);\n    return res;\n  }\n\n  postVaccinGeneration(_idPraticien) {\n    const res = this.http.post(`${this.url_apip}patient/generation`, { praticien: _idPraticien });\n    return res;\n  }\n\n}\n"]}