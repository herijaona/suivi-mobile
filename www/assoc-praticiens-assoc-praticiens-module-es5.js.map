{"version":3,"sources":["webpack:///src/app/pages/patient/assoc-praticiens/assoc-praticiens.page.html","webpack:///src/app/pages/global.interaction.ts","webpack:///src/app/pages/patient/assoc-praticiens/assoc-praticiens-routing.module.ts","webpack:///src/app/pages/patient/assoc-praticiens/assoc-praticiens.module.ts","webpack:///src/app/pages/patient/assoc-praticiens/assoc-praticiens.page.scss","webpack:///src/app/pages/patient/assoc-praticiens/assoc-praticiens.page.ts"],"names":["GlobalInteraction","toastCtrl","loadingCtrl","alertCtrl","isLoading","msg","create","message","duration","position","toast","present","cssClass","spinner","translucent","then","a","dismiss","id","parent","callback","defaultCallback","_header","array","header","buttons","text","role","handler","console","log","warn","alert","presentToast","providedIn","routes","path","component","AssocPraticiensPageRoutingModule","imports","forChild","exports","AssocPraticiensPageModule","declarations","AssocPraticiensPage","patientSrvc","globalItem","queryText","assoc_praticiens","presentLoading","getAllMyPraticians","List","closeSlidingItems","getAssociatedPraticians","subscribe","data","dismissLoading","selector","template"],"mappings":"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","file":"assoc-praticiens-assoc-praticiens-module-es5.js","sourcesContent":["export default \"<ion-header translucent=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons *ngIf=\\\"!ios && !showSearchbar\\\" slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-menu-button *ngIf=\\\"ios\\\"></ion-menu-button>\\n    <ion-title *ngIf=\\\"!ios && !showSearchbar\\\">Mes Praticiens </ion-title>\\n    <!-- <ion-searchbar\\n      *ngIf=\\\"showSearchbar\\\"\\n      showCancelButton=\\\"always\\\"\\n      [(ngModel)]=\\\"queryText\\\"\\n      (ionChange)=\\\"updateRdvList()\\\"\\n      (ionCancel)=\\\"showSearchbar= false\\\"\\n      placeholder=\\\"Rechercher\\\"></ion-searchbar> -->\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button *ngIf=\\\"!ios && !showSearchbar\\\" (click)=\\\"showSearchbar= true\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"search\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list #scheduleList>\\n    <ion-item-group>\\n      <ion-item-sliding #slidingItem>\\n        <ion-item lines=\\\"none\\\" *ngFor=\\\"let praticien of this.assoc_praticiens\\\">\\n          <ion-card>\\n            <ion-card-content\\n              ><ion-grid>\\n                <ion-row>\\n                  <ion-col size=\\\"4\\\">\\n                    <ion-label>\\n                      <img src=\\\"../../../assets/images/praticien.jpg\\\" />\\n                    </ion-label>\\n                  </ion-col>\\n                  <ion-col size=\\\"8\\\" class=\\\"information\\\">\\n                    <h2 class=\\\"name\\\">\\n                      Dr. {{praticien.firstName}} {{praticien.lastName}}\\n                    </h2>\\n                    <ion-label class=\\\"fonction\\\"\\n                      >{{praticien.fonction}}\\n                    </ion-label>\\n\\n                    <ion-label> </ion-label>\\n                    <ion-label> Pays : {{praticien.state}} </ion-label>\\n                    <ion-label> Ville : {{praticien.city}} </ion-label>\\n                  </ion-col>\\n                </ion-row>\\n                <ion-row> </ion-row>\\n              </ion-grid>\\n            </ion-card-content>\\n          </ion-card>\\n        </ion-item>\\n      </ion-item-sliding>\\n    </ion-item-group>\\n  </ion-list>\\n</ion-content>\\n\";","import { Injectable } from '@angular/core';\r\nimport { LoadingController, ToastController, AlertController } from '@ionic/angular';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class GlobalInteraction {\r\n    isLoading = false;\r\n    constructor(public toastCtrl: ToastController, public loadingCtrl: LoadingController, public alertCtrl: AlertController) { }\r\n\r\n    async presentToast(msg) {\r\n        const toast = await this.toastCtrl.create({\r\n            message: msg,\r\n            duration: 1800,\r\n            position: \"top\",\r\n        });\r\n        toast.present();\r\n    }\r\n\r\n    async presentLoading() {\r\n        this.isLoading = true;\r\n        return await this.loadingCtrl.create({\r\n            cssClass: \"my-loading-class\",\r\n            spinner: \"bubbles\",\r\n            translucent: true,\r\n            duration: 100000,\r\n        }).then(a => {\r\n            a.present().then(() => {\r\n                if (!this.isLoading) {\r\n                    a.dismiss();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    async dismissLoading() {\r\n        if (this.isLoading) {\r\n            this.isLoading = false;\r\n            return await this.loadingCtrl.dismiss();\r\n        }\r\n        return null;\r\n    }\r\n\r\n    async alertDelete(\r\n        id,\r\n        parent,\r\n        msg = \"Tu veux vraiment supprimÃ© cette element ? \",\r\n        callback = this.defaultCallback,\r\n        _header = \"Suppression\",\r\n        array = []\r\n    ) {\r\n        const alert = await this.alertCtrl.create({\r\n            cssClass: \"my-custom-class\",\r\n            header: _header,\r\n            message: msg,\r\n            buttons: [\r\n                {\r\n                    text: \"Cancel\",\r\n                    role: \"cancel\",\r\n                    cssClass: \"secondary\",\r\n                    handler: () => {\r\n                        console.log(\"Confirm Cancel: blah\");\r\n                    },\r\n                },\r\n                {\r\n                    text: \"OK\",\r\n                    handler: () => {\r\n                        console.warn(\"data deleted \" + id);\r\n                        // this.remove(id, array, keyStatus, RefuseStatus);\r\n                        callback(id, parent)\r\n                    },\r\n                },\r\n            ],\r\n        });\r\n        await alert.present();\r\n    }\r\n\r\n    defaultCallback(id, parent) {\r\n        this.presentToast(`this is a default callback ${id} `);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AssocPraticiensPage } from './assoc-praticiens.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AssocPraticiensPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AssocPraticiensPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AssocPraticiensPageRoutingModule } from './assoc-praticiens-routing.module';\n\nimport { AssocPraticiensPage } from './assoc-praticiens.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AssocPraticiensPageRoutingModule\n  ],\n  declarations: [AssocPraticiensPage]\n})\nexport class AssocPraticiensPageModule {}\n","export default \"ion-card {\\n  flex-basis: 100%;\\n}\\n\\n.profile_praticien {\\n  width: 50%;\\n  height: 50%;\\n}\\n\\n.fonction {\\n  color: var(--ion-color-primary);\\n}\\n\\n.name {\\n  font-weight: bold;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcGF0aWVudC9hc3NvYy1wcmF0aWNpZW5zL2Fzc29jLXByYXRpY2llbnMucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsZ0JBQUE7QUFDRjs7QUFFQTtFQUNFLFVBQUE7RUFDQSxXQUFBO0FBQ0Y7O0FBRUE7RUFDRSwrQkFBQTtBQUNGOztBQUNBO0VBQ0UsaUJBQUE7QUFFRiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3BhdGllbnQvYXNzb2MtcHJhdGljaWVucy9hc3NvYy1wcmF0aWNpZW5zLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1jYXJkIHtcclxuICBmbGV4LWJhc2lzOiAxMDAlO1xyXG59XHJcblxyXG4ucHJvZmlsZV9wcmF0aWNpZW4ge1xyXG4gIHdpZHRoOiA1MCU7XHJcbiAgaGVpZ2h0OiA1MCU7XHJcbn1cclxuXHJcbi5mb25jdGlvbiB7XHJcbiAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1wcmltYXJ5KTtcclxufVxyXG4ubmFtZSB7XHJcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbn1cclxuIl19 */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { IonList } from '@ionic/angular';\nimport { IUserPraticien } from 'src/app/Interfaces/praticien.interface';\nimport { PatientService } from 'src/app/services/patient.service';\nimport { GlobalInteraction } from '../../global.interaction';\n\n@Component({\n  selector: 'app-assoc-praticiens',\n  templateUrl: './assoc-praticiens.page.html',\n  styleUrls: ['./assoc-praticiens.page.scss'],\n})\nexport class AssocPraticiensPage implements OnInit {\n  @ViewChild(\"List\", { static: true }) List: IonList; // TODO : get all consultation list\n  queryText = \"\";\n  ios: boolean;\n  showSearchbar: boolean;\n  assoc_praticiens: IUserPraticien[] = [];\n  constructor(public patientSrvc: PatientService, private globalItem: GlobalInteraction) { }\n\n  ngOnInit() {\n    this.globalItem.presentLoading();\n    this.getAllMyPraticians();\n  }\n  updateRdvList() {\n    if (this.List) {\n      this.List.closeSlidingItems();\n    }\n  }\n\n  getAllMyPraticians() {\n    this.patientSrvc.getAssociatedPraticians().subscribe(data => {\n      this.assoc_praticiens = data;\n      this.globalItem.dismissLoading();\n    })\n  }\n}\n"]}