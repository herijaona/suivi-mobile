{"version":3,"sources":["webpack:///src/app/pages/patient/vaccination/generate/generate.component.html","webpack:///src/app/pages/patient/vaccination/intervention/intervention.component.html","webpack:///src/app/pages/patient/vaccination/vaccination.page.html","webpack:///src/app/pages/praticien/vaccination/details/details.component.html","webpack:///src/app/pages/praticien/vaccination/organize/organize.component.html","webpack:///src/app/pages/praticien/vaccination/realize/realize.component.html","webpack:///src/app/pages/praticien/vaccination/vaccination.page.html","webpack:///src/app/pages/patient/vaccination/generate/generate.component.scss","webpack:///src/app/pages/patient/vaccination/generate/generate.component.ts","webpack:///src/app/pages/patient/vaccination/intervention/intervention.component.scss","webpack:///src/app/pages/patient/vaccination/intervention/intervention.component.ts","webpack:///src/app/pages/patient/vaccination/vaccination-routing.module.ts","webpack:///src/app/pages/patient/vaccination/vaccination.module.ts","webpack:///src/app/pages/patient/vaccination/vaccination.page.scss","webpack:///src/app/pages/patient/vaccination/vaccination.page.ts","webpack:///src/app/pages/praticien/vaccination/details/details.component.scss","webpack:///src/app/pages/praticien/vaccination/details/details.component.ts","webpack:///src/app/pages/praticien/vaccination/organize/organize.component.scss","webpack:///src/app/pages/praticien/vaccination/organize/organize.component.ts","webpack:///src/app/pages/praticien/vaccination/realize/realize.component.scss","webpack:///src/app/pages/praticien/vaccination/realize/realize.component.ts","webpack:///src/app/pages/praticien/vaccination/vaccination-routing.module.ts","webpack:///src/app/pages/praticien/vaccination/vaccination.module.ts","webpack:///src/app/pages/praticien/vaccination/vaccination.page.scss","webpack:///src/app/pages/praticien/vaccination/vaccination.page.ts"],"names":["GenerateComponent","praticienSrv","patientServc","navCtrl","navParms","modalCtrl","globalDataSrvc","globalInt","showCheckBoxAssoc","after_praticien_choice","get","undefined","countries","getAllCountries","propositionForm","praticien","value","praticiens","disabled","required","center_health","functions","country","city","cities","typeRdv","description","chekcboxAssoc","dismiss","navigateRoot","console","log","backToList","dismissed","id","getCity","subscribe","data","getCountry","_idCity","getCenterHealthByCity","_idCenter","getPraticienByCenter","_idPractitioner","postVaccinGeneration","selector","template","InterventionComponent","globalItem","patientSrvc","getAllPraticiens","carnet","dateVaccin","data_send","date_prise","date","vaccin","id_carnet","error","interventionPraticien","presentToast","closeModal","getAllPraticien","routes","path","component","VaccinationPageRoutingModule","imports","forChild","exports","VaccinationPageModule","forRoot","declarations","VaccinationPage","patientSrv","dataTransformer","loadingCtrl","globalSrvc","dayIndex","queryText","segment","excludeTracksStates","excludeTracksTypes","shownSessions","vaccins","vaccinsShow","allBrute","vaccinsFiltered","OKSTATUS","PENDINGSTATUS","PLANIFIED","STRING_DATE","status","etat","initializeItems","ev","query","target","toLowerCase","requestAnimationFrame","keys","filterItems","presentLoading","getAllVaccin","getVaccinByPatient","allData","dataByDate","create","cssClass","spinner","translucent","duration","loading","present","warn","swipeToClose","componentProps","newRdvModal","onDidDismiss","then","DetailsComponent","vaccinations","isWithNoteBook","OrganizeComponent","praticienSrvc","transform_date","Date","dateT","getFullYear","getMonth","getDate","toString","hoursT","getHours","getMinutes","organizeForm","dateRdv","heureRdv","dataToSend","idCarnet","heure","organiseVaccin","dismissLoading","RealizeComponent","realizeForm","lot","realizeVaccin","config","alertCtrl","router","routerOutlet","toastCtrl","user","vaccinationsShow","filteredVaccinations","OPERATION_VACCIN_CALENDAR","OPERATION_INT_VACCINATION","GENERATE","PENDING","REJECTED","SCHEDULED","REALIZED","ACTION_VOIR","ACTION_GENERATE_REJECT","ACTION_ORGANIZED_REJECT","ACTION_REALIZED","ACTION_NULL","ios","getListVaccinations","List","closeSlidingItems","getListsVaccinations","regroupDataByPatient","asignOperation","network","fab","message","Math","random","onWillDismiss","close","_data","_isWithNoteBook","statusVaccin","Object","assign","_status","_action","operation","result","forEach","element","groups","checkOperation","watchVaccin","patient","seeVaccination","openDetailModal","generateVaccin","rejectVaccin","watchVaccinWithNotebook","rejectVaccinithNotebook","datePriseVaccin","openOrganizeModal"],"mappings":"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","file":"vaccination-vaccination-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Planification de vaccination</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-grid fixed>\\n  <ion-row>\\n    <ion-col size-md=\\\"6\\\" offset-md=\\\"3\\\">\\n      <ion-card>\\n        <ion-card-header>\\n          <ion-card-title> </ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <form\\n            [formGroup]=\\\"propositionForm\\\"\\n            method=\\\"post\\\"\\n            (ngSubmit)=\\\"\\n              postVaccinGeneration(this.propositionForm.value['praticien'])\\n            \\\"\\n          >\\n            <div class=\\\"mb-14\\\">\\n              <label>Choisir pays</label>\\n              <ion-select\\n                placeholder=\\\"Select\\\"\\n                formControlName=\\\"country\\\"\\n                required\\n                [disabled]=\\\"!this.countries\\\"\\n                (ionChange)=\\\"\\n                  getCityByCountry(this.propositionForm.value['country'])\\n                \\\"\\n              >\\n                <ion-select-option\\n                  *ngFor=\\\"let item of countries\\\"\\n                  [value]=\\\"item.id\\\"\\n                  >{{ item.nameState }}</ion-select-option\\n                >\\n              </ion-select>\\n            </div>\\n\\n            <div class=\\\"mb-14\\\">\\n              <label>Choisir ville</label>\\n              <ion-select\\n                placeholder=\\\"Select\\\"\\n                formControlName=\\\"city\\\"\\n                required\\n                [disabled]=\\\"!this.cities\\\"\\n                (ionChange)=\\\"\\n                  getCenterByCity(this.propositionForm.value['city'])\\n                \\\"\\n              >\\n                <ion-select-option\\n                  *ngFor=\\\"let item of cities\\\"\\n                  [value]=\\\"item.id\\\"\\n                  >{{ item.nameCity }}</ion-select-option\\n                >\\n              </ion-select>\\n            </div>\\n\\n            <div class=\\\"mb-14\\\">\\n              <label>Centre</label>\\n              <ion-select\\n                placeholder=\\\"Select\\\"\\n                formControlName=\\\"center_health\\\"\\n                required\\n                (ionChange)=\\\"\\n                  getPraticienByCenter(\\n                    this.propositionForm.value['center_health']\\n                  )\\n                \\\"\\n              >\\n                <ion-select-option\\n                  *ngFor=\\\"let item of center_health\\\"\\n                  [value]=\\\"item.id\\\"\\n                  >{{ item.centreName }}</ion-select-option\\n                >\\n              </ion-select>\\n            </div>\\n\\n            <div class=\\\"mb-14\\\">\\n              <label>Choisir praticien</label>\\n              <ion-select\\n                placeholder=\\\"Select\\\"\\n                formControlName=\\\"praticien\\\"\\n                [disabled]=\\\"!this.praticiens\\\"\\n                required\\n              >\\n                <ion-select-option\\n                  *ngFor=\\\"let item of praticiens\\\"\\n                  [value]=\\\"item.id\\\"\\n                  >{{\\n                    item.firstName.toString() + ' ' + item.lastName.toString()\\n                  }}</ion-select-option\\n                >\\n              </ion-select>\\n            </div>\\n            <!-- <div class=\\\"mb-14\\\">\\n              <label>Type de rendez-vous</label>\\n              <ion-select formControlName=\\\"typeRdv\\\" required>\\n                <ion-select-option value=\\\"consultation\\\"\\n                  >Consultation</ion-select-option\\n                >\\n                <ion-select-option value=\\\"intervention\\\"\\n                  >Intervention</ion-select-option\\n                >\\n              </ion-select>\\n            </div>\\n            <div class=\\\"mb-14\\\">\\n              <label>Objet </label>\\n              <ion-input\\n                type=\\\"text\\\"\\n                required\\n                formControlName=\\\"description\\\"\\n              ></ion-input>\\n            </div> -->\\n            <!-- <div *ngIf=\\\"after_praticien_choice\\\" class=\\\"checkBox\\\"> -->\\n            <div *ngIf=\\\"after_praticien_choice\\\" class=\\\"checkBox\\\">\\n              <div class=\\\"mb-14\\\" *ngIf=\\\"showCheckBoxAssoc == false\\\">\\n                <ion-item class=\\\"status\\\" fill=\\\"outline\\\" lines=\\\"none\\\">\\n                  <ion-checkbox\\n                    formControlName=\\\"chekcboxAssoc\\\"\\n                    value\\n                  ></ion-checkbox>\\n                  &nbsp;&nbsp;\\n                  <label>choisir comme associé ?</label>\\n                </ion-item>\\n              </div>\\n              <div *ngIf=\\\"showCheckBoxAssoc == true\\\">\\n                <ion-button\\n                  class=\\\"status\\\"\\n                  color=\\\"sgreen\\\"\\n                  fill=\\\"outline\\\"\\n                  expand=\\\"block\\\"\\n                  slot=\\\"end\\\"\\n                >\\n                  Praticien associé\\n                </ion-button>\\n              </div>\\n            </div>\\n\\n            <!-- <div class=\\\"mb-14\\\">\\n              <label>Propose une date </label>\\n              <ion-datetime\\n                display-format=\\\"MMM DD, YYYY\\\"\\n                formControlName=\\\"dateRdv\\\"\\n                required\\n              ></ion-datetime>\\n            </div>\\n\\n            <div class=\\\"mb-14\\\">\\n              <label>Propose un horaire</label>\\n              <ion-datetime\\n                display-format=\\\"h:mm A\\\"\\n                picker-format=\\\"h:mm A\\\"\\n                formControlName=\\\"heureRdv\\\"\\n                required\\n              ></ion-datetime>\\n            </div> -->\\n\\n            <ion-row>\\n              <ion-col>\\n                <ion-button color=\\\"sred\\\" expand=\\\"block\\\" (click)=\\\"dismiss()\\\">\\n                  <ion-icon slot=\\\"start\\\" name=\\\"\\\"> x </ion-icon\\n                  >Cancel</ion-button\\n                >\\n                <legend class=\\\"ion-text-center\\\"></legend>\\n                <ion-button type=\\\"submit\\\" color=\\\"sgreen\\\" expand=\\\"block\\\"\\n                  ><ion-icon slot=\\\"start\\\" name=\\\"save-outline\\\"></ion-icon>\\n                  Save\\n                </ion-button>\\n              </ion-col>\\n            </ion-row>\\n          </form>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-col>\\n  </ion-row>\\n</ion-grid>\\n\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title\\n      >Intervention pour le vaccin {{ this.carnet.nomVaccin }}</ion-title\\n    >\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-grid fixed>\\n  <ion-row>\\n    <ion-col size-md=\\\"6\\\" offset-md=\\\"3\\\">\\n      <ion-card>\\n        <ion-card-header>\\n          <ion-card-title\\n            ><ion-text color=\\\"sred\\\">\\n              {{ this.carnet.date_prise.date | date: 'MMM dd, yyyy' }}\\n            </ion-text>\\n          </ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <form\\n            [formGroup]=\\\"propositionForm\\\"\\n            (ngSubmit)=\\\"intervention(this.propositionForm.value['praticien'])\\\"\\n            method=\\\"post\\\"\\n          >\\n            <div class=\\\"mb-14\\\">\\n              <label>choisi un praticien</label>\\n              <ion-select\\n                placeholder=\\\"Select\\\"\\n                formControlName=\\\"praticien\\\"\\n                required\\n              >\\n                <ion-select-option\\n                  *ngFor=\\\"let item of praticiens\\\"\\n                  [value]=\\\"item.id\\\"\\n                  >{{\\n                    item.firstName.toString() + ' ' + item.lastName.toString()\\n                  }}</ion-select-option\\n                >\\n              </ion-select>\\n            </div>\\n\\n            <ion-row>\\n              <ion-col>\\n                <ion-button color=\\\"sred\\\" expand=\\\"block\\\" (click)=\\\"closeModal()\\\">\\n                  <ion-icon slot=\\\"start\\\" name=\\\"\\\"> x </ion-icon\\n                  >Cancel</ion-button\\n                >\\n                <legend class=\\\"ion-text-center\\\"></legend>\\n                <ion-button type=\\\"submit\\\" color=\\\"sgreen\\\" expand=\\\"block\\\"\\n                  ><ion-icon slot=\\\"start\\\" name=\\\"save-outline\\\"></ion-icon>\\n                  Save\\n                </ion-button>\\n              </ion-col>\\n            </ion-row>\\n          </form>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-col>\\n  </ion-row>\\n</ion-grid>\\n\";","export default \"<ion-header translutient=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons *ngIf=\\\"!ios && !showSearchbar\\\" slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n      <ion-title *ngIf=\\\"!ios && !showSearchbar\\\">Vaccination</ion-title>\\n    </ion-buttons>\\n    <ion-menu-button *ngIf=\\\"ios\\\" slot=\\\"start\\\"></ion-menu-button>\\n    <ion-title *ngIf=\\\"ios\\\">Vaccination</ion-title>\\n\\n    <ion-searchbar\\n      (ionInput)=\\\"filterItems($event)\\\"\\n      debounce=\\\"500\\\"\\n      placeholder=\\\"Rechercher\\\"\\n      type=\\\"text\\\"\\n      showCancelButton=\\\"always\\\"\\n      *ngIf=\\\"showSearchbar\\\"\\n      (ionCancel)=\\\"showSearchbar= false\\\"\\n    ></ion-searchbar>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button *ngIf=\\\"!ios && !showSearchbar\\\" (click)=\\\"showSearchbar= true\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"search\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n  <ion-toolbar *ngIf=\\\"ios\\\">\\n    <ion-searchbar\\n      (ionInput)=\\\"filterItems($event)\\\"\\n      debounce=\\\"500\\\"\\n      placeholder=\\\"Rechercher\\\"\\n      type=\\\"text\\\"\\n      (ionCancel)=\\\"showSearchbar= false\\\"\\n    ></ion-searchbar>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <div *ngIf=\\\"vaccinsFiltered.length==0\\\">\\n    <ion-button\\n      (click)=\\\"openGenerateVaccModal()\\\"\\n      expand=\\\"block\\\"\\n      fill=\\\"clear\\\"\\n      shape=\\\"round\\\"\\n    >\\n      Generate Carnet\\n    </ion-button>\\n  </div>\\n\\n  <ion-list #VaccinList>\\n    <ion-item-group *ngFor=\\\"let vacc of vaccinsFiltered\\\">\\n      <ion-item-divider sticky>\\n        <ion-label slot=\\\"start\\\">\\n          {{ vacc.date | date:\\\"MMM dd, yyyy\\\"}}\\n        </ion-label>\\n      </ion-item-divider>\\n\\n      <ion-item-sliding\\n        *ngFor=\\\"let eachVaccination of vacc.groups\\\"\\n        [attr.track]=\\\"this.checkStatus(eachVaccination.status,\\n        eachVaccination.etat) | lowercase\\\"\\n        #slidingItem\\n      >\\n        <ion-item *ngIf=\\\"eachVaccination.show === true\\\">\\n          <ion-grid>\\n            <ion-row>\\n              <ion-col size=\\\"12\\\">\\n                <ion-label class=\\\"information\\\">\\n                  <ion-row>\\n                    <ion-col size=\\\"7\\\">\\n                      <h2 class=\\\"makeBoldAndLarge\\\">\\n                        {{eachVaccination.vaccinName}}\\n                      </h2>\\n                      <!-- <h3>\\n                        {{eachVaccination.date_prise.date | date:\\\"MMM dd yyyy\\\"}}\\n                      </h3> -->\\n                      <h3 *ngIf=\\\"eachVaccination.Lot == null\\\">\\n                        Lot :\\n                        <span> Lot {{eachVaccination.Lot}}</span>\\n                      </h3>\\n                    </ion-col>\\n                    <ion-col class=\\\"middle\\\" size=\\\"2\\\" offset-md=\\\"2\\\">\\n                      <ion-button\\n                        *ngIf=\\\"this.checkStatus(eachVaccination.status,\\n                        eachVaccination.etat) === this.OKSTATUS\\\"\\n                        class=\\\"status\\\"\\n                        color=\\\"sgreen\\\"\\n                        expand=\\\"block\\\"\\n                        fill=\\\"outline\\\"\\n                      >\\n                        REALISE\\n                      </ion-button>\\n\\n                      <ion-button\\n                        *ngIf=\\\"this.checkStatus(eachVaccination.status,\\n                        eachVaccination.etat) === this.PENDINGSTATUS\\\"\\n                        class=\\\"status\\\"\\n                        color=\\\"sorange\\\"\\n                        expand=\\\"block\\\"\\n                        fill=\\\"outline\\\"\\n                      >\\n                        EN ATTENTE\\n                      </ion-button>\\n\\n                      <ion-button\\n                        *ngIf=\\\"this.checkStatus(eachVaccination.status,\\n                        eachVaccination.etat) === this.PLANIFIED\\\"\\n                        class=\\\"status\\\"\\n                        color=\\\"tertiary\\\"\\n                        expand=\\\"block\\\"\\n                        fill=\\\"outline\\\"\\n                      >\\n                        PLANIFIER\\n                      </ion-button>\\n                    </ion-col>\\n                  </ion-row>\\n                  <!-- Vaccinateur -->\\n                  <ion-row\\n                    *ngIf=\\\"eachVaccination.vaccinateur_nom == null &&\\n                    eachVaccination.vaccinateur_prenom == null\\\"\\n                  >\\n                    <br />\\n\\n                    <ion-col size=\\\"12\\\">\\n                      Vaccinateur :\\n                      <p>\\n                        Nom\\n                        <span class=\\\"vaccinateur\\\">\\n                          {{eachVaccination.vaccinateur_nom}} nom\\n                        </span>\\n                      </p>\\n                      <p>\\n                        Prenom :\\n                        <span class=\\\"vaccinateur\\\">\\n                          {{eachVaccination.vaccinateur_prenom}} prenom</span\\n                        >\\n                      </p>\\n\\n                      <p>\\n                        Numero proféssionnel :\\n                        <span class=\\\"vaccinateur\\\">\\n                          {{eachVaccination.NumeroProfessionnel}}\\n                          +33030039289</span\\n                        >\\n                      </p>\\n                    </ion-col>\\n                  </ion-row>\\n                  <ion-row>\\n                    <ion-col size=\\\"12\\\">\\n                      <p *ngIf=\\\"eachVaccination.identification == null\\\">\\n                        Type de vaccin :\\n                        <span>\\n                          {{eachVaccination.identification}}IDENTIFICATION</span\\n                        >\\n                      </p>\\n                      <p *ngIf=\\\"eachVaccination.identifiant_vaccin== null\\\">\\n                        Identifiant vaccin :\\n                        <span>\\n                          {{eachVaccination.identifiant_vaccin}}VACC_TYPE</span\\n                        >\\n                      </p>\\n                      <p>\\n                        Date de prise :\\n                        <span class=\\\"dateRapelle\\\">\\n                          {{eachVaccination.date_prise.date|date:\\\"MMM-dd-yyyy\\\"\\n                          }}</span\\n                        >\\n                      </p>\\n                    </ion-col>\\n                  </ion-row>\\n                </ion-label>\\n              </ion-col>\\n            </ion-row>\\n            <ion-row\\n              *ngIf=\\\"this.checkStatus(eachVaccination.status,\\n              eachVaccination.etat) ===this.PENDINGSTATUS\\\"\\n            >\\n              <ion-col class=\\\"btn-cnfrm\\\">\\n                <ion-button\\n                  expand=\\\"block\\\"\\n                  color=\\\"sgreen\\\"\\n                  (click)=\\\"openNewRdvModal(eachVaccination)\\\"\\n                >\\n                  <ion-icon\\n                    slot=\\\"start\\\"\\n                    name=\\\"checkmark-circle-outline\\\"\\n                  ></ion-icon>\\n                  <ion-label>INTERVENTION</ion-label>\\n                </ion-button>\\n              </ion-col>\\n            </ion-row>\\n          </ion-grid>\\n        </ion-item>\\n      </ion-item-sliding>\\n    </ion-item-group>\\n  </ion-list>\\n</ion-content>\\n\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-button (click)=\\\"dismiss()\\\" fill=\\\"clear\\\" slot=\\\"start\\\">\\n      <ion-icon slot=\\\"start\\\" name=\\\"chevron-back-outline\\\"></ion-icon>\\n    </ion-button>\\n    <ion-title>Details </ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content padding>\\n  <ion-card *ngFor=\\\"let item of vaccinations\\\">\\n    <ion-card-header>\\n      {{ vaccinations[0].firstName }} {{ vaccinations[0].lastName }}\\n    </ion-card-header>\\n\\n    <ion-card-content *ngIf=\\\"this.isWithNoteBook == false\\\">\\n      <ion-item lines=\\\"none\\\">\\n        <ion-text color=\\\"primary\\\">\\n          <h3>Vaccin : {{ item.vaccinName }}</h3>\\n        </ion-text>\\n\\n        <ion-text color=\\\"sgreen\\\" slot=\\\"end\\\">\\n          <h5 *ngIf=\\\"item.identification != null\\\">\\n            &nbsp;( {{ item.identification }} )\\n          </h5>\\n        </ion-text>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        <ion-text color=\\\"sred\\\">\\n          <h5 *ngIf=\\\"item.identification != null\\\">\\n            &nbsp; {{ item.identifiant_vaccin }}\\n          </h5>\\n        </ion-text>\\n      </ion-item>\\n      <ion-item lines=\\\"none\\\">\\n        date de prise : {{ item.date_prise.date | date: 'MMM-dd-yyyy' }}\\n      </ion-item>\\n    </ion-card-content>\\n\\n    <ion-card-content *ngIf=\\\"this.isWithNoteBook == true\\\">\\n      <ion-item lines=\\\"none\\\">\\n        <ion-text color=\\\"primary\\\">\\n          <h3>Vaccin : {{ item.vaccinName }}</h3>\\n        </ion-text>\\n\\n        <ion-text color=\\\"sgreen\\\" slot=\\\"end\\\">\\n          <h5 *ngIf=\\\"item.identification != null\\\">\\n            &nbsp;( {{ item.identification }} )\\n          </h5>\\n        </ion-text>\\n      </ion-item>\\n\\n      <ion-item lines=\\\"none\\\">\\n        date de prise : {{ item.datePriseVaccin.date | date: 'MMM-dd-yyyy' }}\\n      </ion-item>\\n    </ion-card-content>\\n    <!-- <ion-row>\\n      <ion-col>\\n        <button>\\n          <ion-icon name=\\\"open\\\"></ion-icon>\\n          <div>Open Link</div>\\n        </button>\\n      </ion-col>\\n    </ion-row> -->\\n  </ion-card>\\n</ion-content>\\n\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Intervention</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-grid fixed>\\n  <ion-row>\\n    <ion-col size-md=\\\"6\\\" offset-md=\\\"3\\\">\\n      <ion-card>\\n        <ion-card-header>\\n          <ion-card-title><ion-text color=\\\"sred\\\"> </ion-text> </ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <form\\n            [formGroup]=\\\"organizeForm\\\"\\n            method=\\\"post\\\"\\n            (ngSubmit)=\\\"organise()\\\"\\n          >\\n            <div class=\\\"mb-14\\\" *ngIf=\\\"this.dateT\\\">\\n              <label>Propose une date </label>\\n              <ion-datetime\\n                display-format=\\\"MMM DD, YYYY\\\"\\n                formControlName=\\\"dateRdv\\\"\\n                required\\n                [(ngModel)]=\\\"this.dateT\\\"\\n              ></ion-datetime>\\n            </div>\\n\\n            <div class=\\\"mb-14\\\">\\n              <label>Propose un horaire</label>\\n              <ion-datetime\\n                display-format=\\\"h:mm A\\\"\\n                picker-format=\\\"h:mm A\\\"\\n                formControlName=\\\"heureRdv\\\"\\n                required\\n                [(ngModel)]=\\\"this.hoursT\\\"\\n              ></ion-datetime>\\n            </div>\\n            {{ this.hoursT }}\\n            <ion-row>\\n              <ion-col>\\n                <ion-button color=\\\"sred\\\" expand=\\\"block\\\">\\n                  <ion-icon slot=\\\"start\\\" name=\\\"\\\"> x </ion-icon\\n                  >Cancel</ion-button\\n                >\\n                <legend class=\\\"ion-text-center\\\"></legend>\\n                <ion-button type=\\\"submit\\\" color=\\\"sgreen\\\" expand=\\\"block\\\"\\n                  ><ion-icon slot=\\\"start\\\" name=\\\"save-outline\\\"></ion-icon>\\n                  Save\\n                </ion-button>\\n              </ion-col>\\n            </ion-row>\\n          </form>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-col>\\n  </ion-row>\\n</ion-grid>\\n\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Intervention</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-grid fixed>\\n  <ion-row>\\n    <ion-col size-md=\\\"6\\\" offset-md=\\\"3\\\">\\n      <ion-card>\\n        <ion-card-header>\\n          <ion-card-title><ion-text color=\\\"sred\\\"> </ion-text> </ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <form [formGroup]=\\\"realizeForm\\\" method=\\\"post\\\" (ngSubmit)=\\\"realize()\\\">\\n            <div class=\\\"mb-14\\\">\\n              <label>Lot</label>\\n              <ion-input\\n                type=\\\"text\\\"\\n                placeholder=\\\"Awesome Input\\\"\\n                formControlName=\\\"lot\\\"\\n              ></ion-input>\\n            </div>\\n            <ion-row>\\n              <ion-col>\\n                <ion-button color=\\\"sred\\\" expand=\\\"block\\\">\\n                  <ion-icon slot=\\\"start\\\" name=\\\"\\\"> x </ion-icon\\n                  >Cancel</ion-button\\n                >\\n                <legend class=\\\"ion-text-center\\\"></legend>\\n                <ion-button type=\\\"submit\\\" color=\\\"sgreen\\\" expand=\\\"block\\\"\\n                  ><ion-icon slot=\\\"start\\\" name=\\\"save-outline\\\"></ion-icon>\\n                  Save\\n                </ion-button>\\n              </ion-col>\\n            </ion-row>\\n          </form>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-col>\\n  </ion-row>\\n</ion-grid>\\n\";","export default \"<ion-header translucent=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons *ngIf=\\\"!ios && !showSearchbar\\\" slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-menu-button *ngIf=\\\"ios\\\"></ion-menu-button>\\n\\n    <ion-title *ngIf=\\\"!ios && !showSearchbar\\\">Vaccination</ion-title>\\n    <ion-searchbar\\n      *ngIf=\\\"showSearchbar\\\"\\n      showCancelButton=\\\"always\\\"\\n      [(ngModel)]=\\\"queryText\\\"\\n      (ionChange)=\\\"filterItems($event)\\\"\\n      (ionCancel)=\\\"showSearchbar = false\\\"\\n      placeholder=\\\"Rechercher\\\"\\n    ></ion-searchbar>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button *ngIf=\\\"!ios && !showSearchbar\\\" (click)=\\\"showSearchbar = true\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"search\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen=\\\"true\\\">\\n  <ion-header collapse=\\\"condense\\\">\\n    <ion-toolbar>\\n      <ion-title size=\\\"large\\\">Vaccination</ion-title>\\n    </ion-toolbar>\\n    <ion-toolbar>\\n      <ion-searchbar\\n        [(ngModel)]=\\\"queryText\\\"\\n        (ionChange)=\\\"filterItems($event)\\\"\\n        placeholder=\\\"Search\\\"\\n      ></ion-searchbar>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n  <ion-list #scheduleList>\\n    <ion-item-group *ngFor=\\\"let consult of filteredVaccinations\\\">\\n      <ion-item-divider sticky>\\n        <ion-label class=\\\"ion-text-center\\\"> {{ consult.nomPatient}} </ion-label>\\n      </ion-item-divider>\\n\\n      <ion-item-sliding\\n        *ngFor=\\\"let eachVaccination of consult.groups\\\"\\n        #slidingItem\\n      >\\n        <ion-item>\\n          <ion-grid>\\n            <ion-row (click)=\\\"alert()\\\">\\n              <ion-col size=\\\"8\\\">\\n                <ion-label class=\\\"information\\\">\\n                  {{eachVaccination.operation}}\\n                </ion-label>\\n              </ion-col>\\n              <ion-col class=\\\"middle\\\" size=\\\"2\\\" offset-md=\\\"2\\\">\\n                <ion-button\\n                  *ngIf=\\\"eachVaccination._status.toString() === this.GENERATE\\\"\\n                  class=\\\"status\\\"\\n                  color=\\\"tertiary\\\"\\n                  expand=\\\"block\\\"\\n                  fill=\\\"outline\\\"\\n                >\\n                  {{eachVaccination._status}}\\n                </ion-button>\\n\\n                <ion-button\\n                  *ngIf=\\\"eachVaccination._status.toString() === this.PENDING\\\"\\n                  class=\\\"status\\\"\\n                  color=\\\"sorange\\\"\\n                  expand=\\\"block\\\"\\n                  fill=\\\"outline\\\"\\n                >\\n                  {{eachVaccination._status}}\\n                </ion-button>\\n\\n                <ion-button\\n                  *ngIf=\\\"eachVaccination._status.toString() === this.REJECTED\\\"\\n                  class=\\\"status\\\"\\n                  color=\\\"sred\\\"\\n                  expand=\\\"block\\\"\\n                  fill=\\\"outline\\\"\\n                >\\n                  {{eachVaccination._status}}\\n                </ion-button>\\n\\n                <ion-button\\n                  *ngIf=\\\"eachVaccination._status.toString() === this.SCHEDULED\\\"\\n                  class=\\\"status\\\"\\n                  color=\\\"warning\\\"\\n                  expand=\\\"block\\\"\\n                  fill=\\\"outline\\\"\\n                >\\n                  {{eachVaccination._status}}\\n                </ion-button>\\n\\n                <ion-button\\n                  *ngIf=\\\"eachVaccination._status.toString() === this.REALIZED\\\"\\n                  class=\\\"status\\\"\\n                  color=\\\"sgreen\\\"\\n                  expand=\\\"block\\\"\\n                  fill=\\\"outline\\\"\\n                >\\n                  {{eachVaccination._status}}\\n                </ion-button>\\n              </ion-col>\\n            </ion-row>\\n\\n            <ion-row>\\n              <ion-col class=\\\"btn-cnfrm\\\">\\n                <ion-button\\n                  *ngIf=\\\"eachVaccination._action.toString() === this.ACTION_VOIR\\\"\\n                  class=\\\"status\\\"\\n                  color=\\\"sgreen\\\"\\n                  (click)=\\\"watchVaccin(eachVaccination)\\\"\\n                  expand=\\\"block\\\"\\n                >\\n                  <ion-icon slot=\\\"start\\\" name=\\\"eye-outline\\\"></ion-icon>\\n                  <ion-label>voir</ion-label>\\n                </ion-button>\\n\\n                <ion-button\\n                  *ngIf=\\\"eachVaccination._action.toString() === this.ACTION_REALIZED && eachVaccination._status.toString() === this.SCHEDULED\\\"\\n                  class=\\\"status\\\"\\n                  color=\\\"tertiary\\\"\\n                  expand=\\\"block\\\"\\n                  (click)=\\\"openRealizeVaccModal(eachVaccination)\\\"\\n                >\\n                  <ion-icon\\n                    slot=\\\"start\\\"\\n                    name=\\\"checkmark-circle-outline\\\"\\n                  ></ion-icon>\\n                  <ion-label>réalisé</ion-label>\\n                </ion-button>\\n\\n                <!-- <ion-button\\n                  *ngIf=\\\"eachVaccination._action.toString() === this.ACTION_REALIZED && eachVaccination._status.toString() === this.REALIZED\\\"\\n                  class=\\\"status\\\"\\n                  color=\\\"sred\\\"\\n                  expand=\\\"block\\\"\\n                >\\n                  <ion-icon slot=\\\"start\\\" name=\\\"close-circle-outline\\\"></ion-icon>\\n                  <ion-label>rejeté</ion-label>\\n                </ion-button> -->\\n\\n                <ion-button\\n                  *ngIf=\\\"eachVaccination._action.toString() === this.ACTION_ORGANIZED_REJECT\\\"\\n                  class=\\\"status\\\"\\n                  color=\\\"sgreen\\\"\\n                  expand=\\\"block\\\"\\n                  (click)=\\\"organizeVaccinWithNotebook(eachVaccination)\\\"\\n                >\\n                  <ion-icon slot=\\\"start\\\" name=\\\"close-circle-outline\\\"></ion-icon>\\n                  <ion-label>organisé</ion-label>\\n                </ion-button>\\n\\n                <ion-button\\n                  *ngIf=\\\"eachVaccination._action.toString() === this.ACTION_ORGANIZED_REJECT\\\"\\n                  class=\\\"status\\\"\\n                  color=\\\"sred\\\"\\n                  expand=\\\"block\\\"\\n                  (click)=\\\"rejectVaccinWithNotebook(eachVaccination)\\\"\\n                >\\n                  <ion-icon slot=\\\"start\\\" name=\\\"close-circle-outline\\\"></ion-icon>\\n                  <ion-label>rejeté</ion-label>\\n                </ion-button>\\n\\n                <ion-button\\n                  *ngIf=\\\"eachVaccination._action.toString() === this.ACTION_GENERATE_REJECT\\\"\\n                  class=\\\"status\\\"\\n                  color=\\\"sgreen\\\"\\n                  expand=\\\"block\\\"\\n                  (click)=\\\"generateVaccin(eachVaccination)\\\"\\n                >\\n                  <ion-icon slot=\\\"start\\\" name=\\\"close-circle-outline\\\"></ion-icon>\\n                  <ion-label>généré</ion-label>\\n                </ion-button>\\n\\n                <ion-button\\n                  *ngIf=\\\"eachVaccination._action.toString() === this.ACTION_GENERATE_REJECT\\\"\\n                  class=\\\"status\\\"\\n                  color=\\\"sred\\\"\\n                  expand=\\\"block\\\"\\n                  (click)=\\\"rejectVaccin(eachVaccination)\\\"\\n                >\\n                  <ion-icon slot=\\\"start\\\" name=\\\"close-circle-outline\\\"></ion-icon>\\n                  <ion-label>rejeté</ion-label>\\n                </ion-button>\\n\\n                <ion-button\\n                  *ngIf=\\\"eachVaccination.operation.toString() === this.OPERATION_INT_VACCINATION\\\"\\n                  class=\\\"status\\\"\\n                  color=\\\"sgreen\\\"\\n                  expand=\\\"block\\\"\\n                  (click)=\\\"watchVaccinWithNotebook(eachVaccination)\\\"\\n                >\\n                  <ion-icon slot=\\\"start\\\" name=\\\"eye-outline\\\"></ion-icon>\\n                  <ion-label>Voir</ion-label>\\n                </ion-button>\\n              </ion-col>\\n            </ion-row>\\n          </ion-grid>\\n        </ion-item>\\n      </ion-item-sliding>\\n    </ion-item-group>\\n  </ion-list>\\n\\n  <ion-list-header [hidden]=\\\"vaccinations.length != 0\\\">\\n    No Sessions Found\\n  </ion-list-header>\\n\\n  <ion-fab slot=\\\"fixed\\\" vertical=\\\"bottom\\\" horizontal=\\\"end\\\" #fab>\\n    <ion-fab-button color=\\\"primary\\\" (click)=\\\"alert()\\\">\\n      <ion-icon name=\\\"add-outline\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n</ion-content>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3BhdGllbnQvdmFjY2luYXRpb24vZ2VuZXJhdGUvZ2VuZXJhdGUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ModalController, NavController, NavParams } from '@ionic/angular';\nimport { IUserPraticien } from 'src/app/Interfaces/praticien.interface';\nimport { GlobalInteraction } from 'src/app/pages/global.interaction';\nimport { GlobalDataService } from 'src/app/services/global-data.service';\nimport { PatientService } from 'src/app/services/patient.service';\nimport { PraticienService } from 'src/app/services/praticien.service';\n\n@Component({\n  selector: 'app-generate',\n  templateUrl: './generate.component.html',\n  styleUrls: ['./generate.component.scss'],\n})\nexport class GenerateComponent implements OnInit {\n  @Input() test: String;\n  @Input() functions;\n\n  public countries;\n  public cities;\n  public center_health;\n  // praticiens: IUserPraticien[];\n  praticiens: {};\n  public propositionForm: FormGroup;\n  showCheckBoxAssoc = false;\n  after_praticien_choice = false;\n\n  selected: any;\n  constructor(\n    private praticienSrv: PraticienService,\n    private patientServc: PatientService,\n    private navCtrl: NavController,\n    private navParms: NavParams,\n    private modalCtrl: ModalController,\n    private globalDataSrvc: GlobalDataService,\n    private globalInt: GlobalInteraction,\n  ) { }\n\n  async ngOnInit() {\n    this.after_praticien_choice = false;\n\n    this.navParms.get('country') != undefined\n      ? (this.countries = this.navParms.get('country'))\n      : this.getAllCountries();\n\n    this.propositionForm = new FormGroup({\n      praticien: new FormControl({ value: this.praticiens, disabled: false }, [\n        Validators.required,\n      ]),\n      center_health: new FormControl({ value: this.functions, disabled: false }, [\n        Validators.required,\n      ]),\n      country: new FormControl({ value: this.countries, disabled: false }, [\n        Validators.required,\n      ]),\n      city: new FormControl({ value: this.cities, disabled: false }, [\n        Validators.required,\n      ]),\n      typeRdv: new FormControl('', [Validators.required]),\n      // dateRdv: new FormControl('', [Validators.required]),\n      // heureRdv: new FormControl('', [Validators.required]),\n      description: new FormControl(),\n      chekcboxAssoc: new FormControl(),\n    });\n  }\n  backToList() {\n    this.dismiss();\n    this.navCtrl.navigateRoot('/patient/rendez-vous');\n  }\n\n  async cancel() {\n    console.log(' cancel ');\n    this.backToList();\n  }\n\n  dismiss() {\n    // using the injected ModalController this page\n    // can \"dismiss\" itself and optionally pass back data\n    this.modalCtrl.dismiss({\n      dismissed: true,\n    });\n  }\n\n  getCityByCountry(id) {\n    this.globalDataSrvc.getCity(id).subscribe((data) => this.cities = data);\n  }\n\n  getAllCountries() {\n    this.globalDataSrvc.getCountry().subscribe((data) => this.countries = data);\n  }\n\n  getCenterByCity(_idCity) {\n    this.globalDataSrvc.getCenterHealthByCity(_idCity).subscribe((data) => { console.log(\"LL: GenerateComponent -> getCenterByCity -> this.center_health\", data); this.center_health = data });\n  }\n  getPraticienByCenter(_idCenter) {\n    this.globalDataSrvc.getPraticienByCenter(_idCenter).subscribe((data) => { console.log(\"LL: GenerateComponent -> getCenterByCity -> this.center_health\", data); this.praticiens = data });\n  }\n  postVaccinGeneration(_idPractitioner) {\n    this.patientServc.postVaccinGeneration(_idPractitioner).subscribe((data) => console.log(\"LL: GenerateComponent -> postVaccinGeneration -> data\", data));\n\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3BhdGllbnQvdmFjY2luYXRpb24vaW50ZXJ2ZW50aW9uL2ludGVydmVudGlvbi5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ModalController, NavParams } from '@ionic/angular';\nimport { IUserPraticien } from 'src/app/Interfaces/praticien.interface';\nimport { GlobalInteraction } from 'src/app/pages/global.interaction';\nimport { PatientService } from 'src/app/services/patient.service';\nimport { PraticienService } from 'src/app/services/praticien.service';\n\n@Component({\n  selector: 'app-intervention',\n  templateUrl: './intervention.component.html',\n  styleUrls: ['./intervention.component.scss'],\n})\nexport class InterventionComponent implements OnInit {\n  @Input() carnet: any;\n  public propositionForm: FormGroup;\n  @Input() praticiens: IUserPraticien[];\n  @Input() dateVaccin: any;\n  constructor(private globalItem: GlobalInteraction, private navParms: NavParams, private modalCtrl: ModalController, private patientSrvc: PatientService, private praticienSrv: PraticienService) { }\n\n  ngOnInit() {\n    // TODO: reserche bar\n    this.navParms.get(\"praticiens\") !== undefined ? this.praticiens = this.navParms.get(\"praticiens\") : this.getAllPraticiens();\n    console.log(\"LL: InterventionComponent -> ngOnInit -> this.navParms.get()\", this.navParms.get(\"praticiens\"))\n    this.carnet = this.navParms.get(\"vaccin\"); this.dateVaccin = this.navParms.get(\"dateVaccin\");\n    console.log(\"InterventionComponent -> ngOnInit -> this.praticiens\", this.praticiens);\n    this.propositionForm = new FormGroup({\n      praticien: new FormControl(\"\", [Validators.required]),\n    });\n  }\n\n  closeModal() {\n    this.modalCtrl.dismiss();\n  }\n\n  intervention(data) {\n    const data_send = {\n      date_prise: this.carnet.date_prise.date,\n      praticien: data,\n      vaccin: this.carnet.vaccin,\n      id_carnet: this.carnet.id,\n    }\n    console.error(\"***************************LL: InterventionComponent -> ngOnInit -> vaccin\", data_send);\n    this.patientSrvc.interventionPraticien(data_send).subscribe((data) => {\n      console.log(\"LL: InterventionComponent -> intervention -> data\", data);\n      this.globalItem.presentToast(data);\n      this.closeModal()\n    });\n\n\n  }\n\n  getAllPraticiens() {\n    this.praticienSrv.getAllPraticien().subscribe(data => {\n      this.praticiens = data;\n    });\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { VaccinationPage } from './vaccination.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: VaccinationPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class VaccinationPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { VaccinationPageRoutingModule } from './vaccination-routing.module';\n\nimport { VaccinationPage } from './vaccination.page';\nimport { InterventionComponent } from './intervention/intervention.component';\nimport { GenerateComponent } from './generate/generate.component';\nimport { RealizeComponent } from '../../praticien/vaccination/realize/realize.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule.forRoot(),\n    VaccinationPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [VaccinationPage, InterventionComponent, GenerateComponent, RealizeComponent]\n})\nexport class VaccinationPageModule { }\n","export default \"ion-fab-button {\\n  --background: var(--ion-color-step-150, #fff);\\n  --background-hover: var(--ion-color-step-200, #f2f2f2);\\n  --background-focused: var(--ion-color-step-250, #d9d9d9);\\n  --color: var(--ion-color-primary, #3880ff);\\n}\\n\\n/*\\n       * Material Design uses the ripple for activated\\n       * so only style the iOS activated background\\n       */\\n\\n.ios ion-fab-button {\\n  --background-activated: var(--ion-color-step-250, #d9d9d9);\\n}\\n\\nion-item-sliding[track=realised] ion-label.information {\\n  border-left: 2px solid var(--ion-color-primary);\\n  padding-left: 3px;\\n}\\n\\nion-item-sliding[track=planified] ion-label.information {\\n  border-left: 2px solid #8e8d93;\\n  padding-left: 3px;\\n}\\n\\nion-item-sliding[track=pending] ion-label.information {\\n  border-left: 2px solid #6600cc;\\n  padding-left: 3px;\\n}\\n\\n.status {\\n  text-align: right;\\n  width: 120px;\\n}\\n\\n.middle {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.btn-cnfrm {\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n.dateRapelle {\\n  color: var(--ion-color-sred);\\n}\\n\\n.vaccinateur {\\n  color: var(--ion-color-sgreen);\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcGF0aWVudC92YWNjaW5hdGlvbi92YWNjaW5hdGlvbi5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSw2Q0FBQTtFQUNBLHNEQUFBO0VBQ0Esd0RBQUE7RUFFQSwwQ0FBQTtBQUFGOztBQUdBOzs7UUFBQTs7QUFJQTtFQUNFLDBEQUFBO0FBQUY7O0FBV0k7RUFDRSwrQ0FBQTtFQUNBLGlCQUFBO0FBUk47O0FBTUk7RUFDRSw4QkFBQTtFQUNBLGlCQUFBO0FBSE47O0FBQ0k7RUFDRSw4QkFBQTtFQUNBLGlCQUFBO0FBRU47O0FBR0E7RUFDRSxpQkFBQTtFQUNBLFlBQUE7QUFBRjs7QUFHQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtBQUFGOztBQUdBO0VBQ0UsYUFBQTtFQUNBLHVCQUFBO0FBQUY7O0FBR0E7RUFDRSw0QkFBQTtBQUFGOztBQUdBO0VBQ0UsOEJBQUE7QUFBRiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3BhdGllbnQvdmFjY2luYXRpb24vdmFjY2luYXRpb24ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWZhYi1idXR0b24ge1xyXG4gIC0tYmFja2dyb3VuZDogdmFyKC0taW9uLWNvbG9yLXN0ZXAtMTUwLCAjZmZmKTtcclxuICAtLWJhY2tncm91bmQtaG92ZXI6IHZhcigtLWlvbi1jb2xvci1zdGVwLTIwMCwgI2YyZjJmMik7XHJcbiAgLS1iYWNrZ3JvdW5kLWZvY3VzZWQ6IHZhcigtLWlvbi1jb2xvci1zdGVwLTI1MCwgI2Q5ZDlkOSk7XHJcblxyXG4gIC0tY29sb3I6IHZhcigtLWlvbi1jb2xvci1wcmltYXJ5LCAjMzg4MGZmKTtcclxufVxyXG5cclxuLypcclxuICAgICAgICogTWF0ZXJpYWwgRGVzaWduIHVzZXMgdGhlIHJpcHBsZSBmb3IgYWN0aXZhdGVkXHJcbiAgICAgICAqIHNvIG9ubHkgc3R5bGUgdGhlIGlPUyBhY3RpdmF0ZWQgYmFja2dyb3VuZFxyXG4gICAgICAgKi9cclxuLmlvcyBpb24tZmFiLWJ1dHRvbiB7XHJcbiAgLS1iYWNrZ3JvdW5kLWFjdGl2YXRlZDogdmFyKC0taW9uLWNvbG9yLXN0ZXAtMjUwLCAjZDlkOWQ5KTtcclxufVxyXG5cclxuJGNhdGVnb3JpZXM6IChcclxuICByZWFsaXNlZDogdmFyKC0taW9uLWNvbG9yLXByaW1hcnkpLFxyXG4gIHBsYW5pZmllZDogIzhlOGQ5MyxcclxuICBwZW5kaW5nOiAjNjYwMGNjLFxyXG4pO1xyXG5cclxuQGVhY2ggJHRyYWNrLCAkdmFsdWUgaW4gbWFwLXJlbW92ZSgkY2F0ZWdvcmllcykge1xyXG4gIGlvbi1pdGVtLXNsaWRpbmdbdHJhY2s9XCIjeyR0cmFja31cIl0gaW9uLWxhYmVsIHtcclxuICAgICYuaW5mb3JtYXRpb24ge1xyXG4gICAgICBib3JkZXItbGVmdDogMnB4IHNvbGlkICR2YWx1ZTtcclxuICAgICAgcGFkZGluZy1sZWZ0OiAzcHg7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4uc3RhdHVzIHtcclxuICB0ZXh0LWFsaWduOiByaWdodDtcclxuICB3aWR0aDogMTIwcHg7XHJcbn1cclxuXHJcbi5taWRkbGUge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLmJ0bi1jbmZybSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG5cclxuLmRhdGVSYXBlbGxlIHtcclxuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXNyZWQpO1xyXG59XHJcblxyXG4udmFjY2luYXRldXIge1xyXG4gIGNvbG9yOiB2YXIoLS1pb24tY29sb3Itc2dyZWVuKTtcclxufVxyXG4iXX0= */\";","import { PatientService } from \"src/app/services/patient.service\";\nimport { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { IUserPraticien } from \"src/app/Interfaces/praticien.interface\";\nimport {\n  IRdvPatient,\n  IVaccinPatient,\n} from \"src/app/Interfaces/patient.interface\";\nimport { IonList, LoadingController, ModalController } from \"@ionic/angular\";\nimport { DataTransformerService } from \"src/app/services/data-transformer.service\";\nimport { InterventionComponent } from './intervention/intervention.component';\nimport { PraticienService } from 'src/app/services/praticien.service';\nimport { GenerateComponent } from './generate/generate.component';\nimport { GlobalDataService } from 'src/app/services/global-data.service';\n\n@Component({\n  selector: \"app-vaccination\",\n  templateUrl: \"./vaccination.page.html\",\n  styleUrls: [\"./vaccination.page.scss\"],\n})\nexport class VaccinationPage implements OnInit {\n  @ViewChild(\"VaccinList\", { static: true }) VaccinList: IonList;\n\n  ios: boolean;\n  dayIndex = 0;\n  queryText = \"\";\n  segment = \"all\";\n  excludeTracksStates: any = [];\n  excludeTracksTypes: any = [];\n  shownSessions: any = [];\n  vaccins: IVaccinPatient[] = [];\n  vaccinsShow: any = [];\n  allBrute: any = [];\n  confDate: string;\n  showSearchbar: boolean;\n  vaccinsFiltered: any = [];\n  praticiens: IUserPraticien[];\n  public OKSTATUS = \"REALISED\";\n  public PENDINGSTATUS = \"PENDING\";\n  public PLANIFIED = \"PLANIFIED\";\n  private STRING_DATE = \"date_prise\";\n\n  public STATUS;\n  constructor(\n    private patientSrv: PatientService,\n    private dataTransformer: DataTransformerService,\n    private loadingCtrl: LoadingController,\n    private modalCtrl: ModalController,\n    private praticienSrv: PraticienService,\n    private globalSrvc: GlobalDataService\n  ) {\n    console.log(\"VaccinationPage -> constructor\");\n  }\n\n  checkStatus(status, etat) {\n    if (status == 1) {\n      return this.OKSTATUS;\n    } else {\n      if (etat == false) {\n        return this.PENDINGSTATUS;\n      } else {\n        return this.PLANIFIED;\n      }\n    }\n  }\n\n  ngOnInit() {\n    console.log(\"VaccinationPage -> ngOnInit -> ngOnInit\");\n    this.initializeItems();\n\n  }\n  filterItems(ev) {\n    const query = ev.target.value.toLowerCase();\n    requestAnimationFrame(() => {\n      if (!query || query === \"\") {\n        return;\n      }\n      const keys = [\"vaccin\"];\n      this.vaccinsFiltered = this.dataTransformer.filterItems(\n        query,\n        keys,\n        \"status\",\n        this.segment,\n        this.vaccinsFiltered\n      );\n    });\n  }\n\n  initializeItems() {\n    // this.patientSrv.getCarnetVaccinationId(3);\n    this.presentLoading();\n\n    this.getAllVaccin();\n    this.praticienSrv.getAllPraticien().subscribe(data => {\n      console.log(\"VaccinationPage -> initializeItems -> data\", data)\n      this.praticiens = data;\n    });\n  }\n\n  getAllVaccin() {\n    this.patientSrv.getVaccinByPatient().subscribe((data) => {\n      console.log(\"VaccinationPage -> getAllVaccin -> data\", data);\n      this.vaccins = data;\n      console.log(\" \");\n      this.vaccinsShow = this.dataTransformer.allData(data, this.STRING_DATE).data;\n      this.vaccinsFiltered = this.dataTransformer.allData(data, this.STRING_DATE).dataByDate;\n      this.loadingCtrl.dismiss();\n    });\n  }\n\n  async presentLoading() {\n    const loading = await this.loadingCtrl.create({\n      cssClass: \"my-loading-class\",\n      spinner: \"bubbles\",\n      translucent: true,\n      duration: 10000,\n    });\n\n    await loading.present();\n  }\n\n  async openNewRdvModal(vaccin) {\n    console.warn(\"VaccinationPage -> openNewRdvModal -> nom_vaccin\", vaccin, \"/\")\n    const newRdvModal = await this.modalCtrl.create({\n      component: InterventionComponent,\n      cssClass: \"test-class\",\n      swipeToClose: true,\n      componentProps: {\n        praticiens: this.praticiens,\n        vaccin: vaccin,\n      },\n    });\n    newRdvModal.onDidDismiss().then(() => {\n      this.initializeItems();\n    });\n    return await newRdvModal.present();\n  }\n\n  async openGenerateVaccModal(vaccin) {\n    console.warn(\"VaccinationPage -> openNewRdvModal -> nom_vaccin\", vaccin, \"/\")\n    const newRdvModal = await this.modalCtrl.create({\n      component: GenerateComponent,\n      cssClass: \"test-class\",\n      swipeToClose: true,\n      componentProps: {\n        praticiens: this.praticiens,\n        countries: this.countries,\n        vaccin: vaccin,\n      },\n    });\n    newRdvModal.onDidDismiss().then(() => {\n      this.initializeItems();\n    });\n    return await newRdvModal.present();\n  }\n  countries;\n  getAllCountries() {\n    this.countries = this.globalSrvc.getCountry().subscribe((data) => { return data; })\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3ByYXRpY2llbi92YWNjaW5hdGlvbi9kZXRhaWxzL2RldGFpbHMuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, OnInit, Input } from \"@angular/core\";\nimport { ModalController, NavParams } from \"@ionic/angular\";\nimport { IVaccination } from \"src/app/Interfaces/praticien.interface\";\nimport { CommonModule } from \"@angular/common\";\n\n@Component({\n  selector: \"app-details\",\n  templateUrl: \"./details.component.html\",\n  styleUrls: [\"./details.component.scss\"],\n})\nexport class DetailsComponent implements OnInit {\n  @Input() vaccinations: { date_prise: { date }, firstName, lastName, vaccinName, id, identifiant_vaccin, identification, datePriseVaccin: { date } }[];\n  @Input() isWithNoteBook;\n  constructor(private modalCtrl: ModalController, private navParms: NavParams) {\n    this.vaccinations = this.navParms.get(\"data\");\n    this.isWithNoteBook = this.navParms.get(\"isWithNoteBook\");\n    console.log(this.vaccinations);\n  }\n\n  ngOnInit() { }\n\n  dismiss() {\n    this.modalCtrl.dismiss({\n      dismissed: true,\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3ByYXRpY2llbi92YWNjaW5hdGlvbi9vcmdhbml6ZS9vcmdhbml6ZS5jb21wb25lbnQuc2NzcyJ9 */\";","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ModalController, NavParams } from '@ionic/angular';\nimport { GlobalInteraction } from 'src/app/pages/global.interaction';\nimport { PraticienService } from 'src/app/services/praticien.service';\n\n@Component({\n  selector: 'app-organize',\n  templateUrl: './organize.component.html',\n  styleUrls: ['./organize.component.scss'],\n})\nexport class OrganizeComponent implements OnInit {\n\n  @Input() test: String;\n  @Input() data: { date, idCarnet, id, };\n  dateT;\n  hoursT;\n\n  public organizeForm: FormGroup;\n  selected: any;\n  constructor(\n    private navParms: NavParams,\n    private modalCtrl: ModalController,\n    private praticienSrvc: PraticienService,\n    private globalItem: GlobalInteraction\n  ) {\n\n  }\n\n  async ngOnInit() {\n    this.data = this.navParms.get(\"data\");\n    const transform_date = new Date(this.data.date);\n    this.dateT = (transform_date.getFullYear() + \"-\" + transform_date.getMonth() + \"-\" + transform_date.getDate()).toString();\n    this.hoursT = (new Date(this.dateT).getHours() + \"\" + new Date(this.dateT).getMinutes()).toString();\n    console.log(\"LL: OrganizeComponent -> ngOnInit -> hoursT\", this.hoursT)\n    this.organizeForm = new FormGroup({\n      dateRdv: new FormControl(\"\", [Validators.required]),\n      heureRdv: new FormControl(\"\", [Validators.required]),\n    });\n    console.log(\n      \"NewRdvComponent -> patients -> test\",\n      this.navParms.get(\"patients\")\n    );\n  }\n\n  organise() {\n    this.globalItem.presentLoading();\n    const dataToSend = {\n      id: this.data.id,\n      carnet: this.data.idCarnet,\n      date: this.dateT,\n      heure: this.hoursT,\n    };\n    console.log(dataToSend, this.organizeForm.value.dateRdv, this.organizeForm.value.heureRdv);\n    this.praticienSrvc.organiseVaccin(dataToSend).subscribe(() => {\n      this.globalItem.dismissLoading();\n      this.modalCtrl.dismiss();\n    });\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3ByYXRpY2llbi92YWNjaW5hdGlvbi9yZWFsaXplL3JlYWxpemUuY29tcG9uZW50LnNjc3MifQ== */\";","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ModalController, NavParams } from '@ionic/angular';\nimport { GlobalInteraction } from 'src/app/pages/global.interaction';\nimport { PraticienService } from 'src/app/services/praticien.service';\n\n@Component({\n  selector: 'app-realize',\n  templateUrl: './realize.component.html',\n  styleUrls: ['./realize.component.scss'],\n})\nexport class RealizeComponent implements OnInit {\n\n  @Input() data: { lot, carnet, id, };\n\n  public realizeForm: FormGroup;\n  selected: any;\n  constructor(\n    private navParms: NavParams,\n    private modalCtrl: ModalController,\n    private praticienSrvc: PraticienService,\n    private globalItem: GlobalInteraction\n  ) {\n\n  }\n\n  async ngOnInit() {\n    this.data = this.navParms.get(\"data\");\n    console.log(\"LL>>>: RealizeComponent -> ngOnInit -> data\", this.data)\n    this.realizeForm = new FormGroup({\n      lot: new FormControl(\"\", [Validators.required]),\n    });\n    console.log(\n      \"NewRdvComponent -> patients -> test\",\n      this.navParms.get(\"patients\")\n    );\n  }\n\n  realize() {\n    this.globalItem.presentLoading();\n    const dataToSend = {\n      id: this.data.id,\n      carnet: this.data.carnet,\n      lot: this.realizeForm.value.lot,\n    };\n    console.log(\"LL: RealizeComponent -> realize -> dataToSend\", dataToSend)\n    this.praticienSrvc.realizeVaccin(dataToSend).subscribe(() => {\n      this.globalItem.dismissLoading();\n      this.modalCtrl.dismiss();\n    });\n  }\n}","import { NgModule } from \"@angular/core\";\r\nimport { Routes, RouterModule } from \"@angular/router\";\r\n\r\nimport { VaccinationPage } from \"./vaccination.page\";\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: \"\",\r\n    component: VaccinationPage,\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class VaccinationPageRoutingModule {}\r\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { VaccinationPageRoutingModule } from \"./vaccination-routing.module\";\n\nimport { VaccinationPage } from \"./vaccination.page\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { DetailsComponent } from \"./details/details.component\";\nimport { OrganizeComponent } from './organize/organize.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    VaccinationPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [VaccinationPage, DetailsComponent, OrganizeComponent],\n})\nexport class VaccinationPageModule { }\n","export default \".status {\\n  text-align: right;\\n  width: 90px;\\n}\\n\\n.middle {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.btn-cnfrm {\\n  display: flex;\\n  justify-content: center;\\n}\\n\\nion-col > ion-button {\\n  min-width: 110px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcHJhdGljaWVuL3ZhY2NpbmF0aW9uL3ZhY2NpbmF0aW9uLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGlCQUFBO0VBQ0EsV0FBQTtBQUNGOztBQUVBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0FBQ0Y7O0FBRUE7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7QUFDRjs7QUFFQTtFQUNFLGdCQUFBO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9wcmF0aWNpZW4vdmFjY2luYXRpb24vdmFjY2luYXRpb24ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnN0YXR1cyB7XHJcbiAgdGV4dC1hbGlnbjogcmlnaHQ7XHJcbiAgd2lkdGg6IDkwcHg7XHJcbn1cclxuXHJcbi5taWRkbGUge1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcclxufVxyXG5cclxuLmJ0bi1jbmZybSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG5cclxuaW9uLWNvbCA+IGlvbi1idXR0b24ge1xyXG4gIG1pbi13aWR0aDogMTEwcHg7XHJcbn1cclxuIl19 */\";","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport {\n  IonList,\n  Config,\n  AlertController,\n  LoadingController,\n  ModalController,\n  IonRouterOutlet,\n  ToastController,\n} from \"@ionic/angular\";\nimport { PraticienService } from \"src/app/services/praticien.service\";\nimport { IVaccination } from \"src/app/Interfaces/praticien.interface\";\nimport { Router } from \"@angular/router\";\nimport { DetailsComponent } from \"./details/details.component\";\nimport { GlobalInteraction } from '../../global.interaction';\nimport { OrganizeComponent } from './organize/organize.component';\nimport { RealizeComponent } from './realize/realize.component';\n\n@Component({\n  selector: \"app-vaccination\",\n  templateUrl: \"./vaccination.page.html\",\n  styleUrls: [\"./vaccination.page.scss\"],\n})\nexport class VaccinationPage implements OnInit {\n  @ViewChild(\"List\", { static: true }) List: IonList; // TODO : get all consultation list\n  ios: boolean;\n  vaccinations: IVaccination[] = [];\n  vaccinationsShow: { patient: String, nomPatient: String; groups: IVaccination[] }[] = [];\n  filteredVaccinations: { patient: String, nomPatient: String; groups: IVaccination[] }[] = [];\n  showSearchbar: boolean;\n  segment = \"all\";\n  queryText = \"\";\n  seeVaccination;\n  // public OKSTATUS = \"Accepted\";\n  // public NOPSTATUS = \"Refused\";\n  // public PENDSTATUS = \"Pending\";\n\n  constructor(\n    private config: Config,\n    private praticienSrvc: PraticienService,\n    public alertCtrl: AlertController,\n    public loadingCtrl: LoadingController,\n    public modalCtrl: ModalController,\n    public router: Router,\n    public routerOutlet: IonRouterOutlet,\n    public toastCtrl: ToastController,\n    public user: PraticienService,\n    public globalItem: GlobalInteraction\n  ) { }\n\n  alert() {\n    console.log(\"ok ++++ \");\n  }\n\n  ngOnInit() {\n    this.ios = this.config.get(\"mode\") === \"ios\";\n    this.getListVaccinations();\n  }\n\n  getListVaccinations() {\n    // Close any open sliding items when the  updates\n    if (this.List) {\n      console.log(\"ConsultationPage -> update -> this.List\", this.List);\n      this.List.closeSlidingItems();\n    }\n    //TODO: get timeline\n    this.praticienSrvc.getListsVaccinations().subscribe((data: any) => {\n      console.log(\"LL: VaccinationPage -> getListVaccinations -> data\", data)\n      this.vaccinations = data;\n      // this.vaccinationsShow = this.praticienSrvc.regroupDataByDate(data);\n      this.vaccinationsShow = this.praticienSrvc.regroupDataByPatient(data);\n      this.filteredVaccinations = this.asignOperation([...this.vaccinationsShow]);\n      console.log(\"LL: VaccinationPage -> getListVaccinations -> this.filteredVaccinations\", this.filteredVaccinations)\n    });\n  }\n\n  async openSocial(network: string, fab: HTMLIonFabElement) {\n    const loading = await this.loadingCtrl.create({\n      message: `Posting to ${network}`,\n      duration: Math.random() * 1000 + 500,\n    });\n    await loading.present();\n    await loading.onWillDismiss();\n    fab.close();\n  }\n\n  async openDetailModal(_data, _isWithNoteBook = false) {\n    const newRdvModal = await this.modalCtrl.create({\n      component: DetailsComponent,\n      cssClass: \"test-class\",\n      swipeToClose: true,\n      componentProps: {\n        // test: \"test\",\n        // data: this.findVaccinationRelated(id).res,\n        data: _data,\n        isWithNoteBook: _isWithNoteBook\n      },\n    });\n    newRdvModal.onDidDismiss().then(() => {\n      // this.initializeItems(); //event on dismiss\n    });\n    return await newRdvModal.present();\n  }\n\n  async openOrganizeModal(_data) {\n    const newRdvModal = await this.modalCtrl.create({\n      component: OrganizeComponent,\n      cssClass: \"test-class\",\n      swipeToClose: true,\n      componentProps: {\n        data: _data,\n      },\n    });\n    newRdvModal.onDidDismiss().then(() => {\n      this.getListVaccinations(); //event on dismiss\n    });\n    return await newRdvModal.present();\n  }\n\n  async openRealizeVaccModal(_data) {\n    const newRdvModal = await this.modalCtrl.create({\n      component: RealizeComponent,\n      cssClass: \"test-class\",\n      swipeToClose: true,\n      componentProps: {\n        data: _data\n      },\n    });\n    newRdvModal.onDidDismiss().then(() => {\n      this.getListVaccinations();\n    });\n    return await newRdvModal.present();\n  }\n\n\n  showAccepted() {\n    // if (this.segment == \"all\") {\n    //   this.filteredVaccinations = [...this.vaccinationsShow];\n    //   return;\n    // }\n    // let temp: any = [];\n    // this.filteredVaccinations = temp;\n\n    // [...this.vaccinationsShow].forEach((item) => {\n    //   console.log(\"ConsultationPage -> filterItems -> item\", item.groups);\n    //   let data: any = [];\n    //   item.groups.forEach((res) => {\n    //     console.log(\"ConsultationPage  *** -> filterItems -> res\", res);\n    //     if (res.status.includes(\"Accepted\")) {\n    //       data.push(res);\n    //     }\n    //   });\n    //   const a = {\n    //     date: item.date,\n    //     groups: data,\n    //   };\n\n    //   temp.push(a);\n    // })\n    ;\n  }\n\n  // TODO : à Optimiser\n  filterItems(ev: any) {\n    // const query = ev.target.value.toLowerCase();\n    // requestAnimationFrame(() => {\n    //   if (!query || query === \"\") {\n    //     this.showAccepted();\n    //     return;\n    //   }\n    //   let temp: any = [];\n    //   this.filteredVaccinations = temp;\n\n    //   [...this.vaccinationsShow].forEach((item) => {\n    //     let data: any = [];\n    //     item.groups.forEach((res) => {\n    //       if (query && this.segment == \"all\") {\n    //         if (res.patient.includes(query)) {\n    //           data.push(res);\n    //         }\n    //       } else {\n    //         if (res.status === \"Accepted\" && res.patient.includes(query)) {\n    //           data.push(res);\n    //         }\n    //       }\n    //     });\n    //     const a = {\n    //       date: item.date,\n    //       groups: data,\n    //     };\n\n    //     temp.push(a);\n    //   });\n    // });\n  }\n\n  // OPERATION\n  public OPERATION_VACCIN_CALENDAR = \"Vaccine Callendar\";\n  public OPERATION_INT_VACCINATION = \"Intervention Vaccination\";\n\n  // _STATUS\n  public GENERATE = \"Généré\"\n  public PENDING = \"En attente\"\n  public REJECTED = \"Rejeté\"\n\n  public SCHEDULED = \"Planifié\"\n  public REALIZED = \"Réalisé\"\n\n  //_ACTION\n  public ACTION_VOIR = \"Voir\"\n  public ACTION_GENERATE_REJECT = \"Generate_reject\"\n  public ACTION_ORGANIZED_REJECT = \"Organized_reject\"\n  public ACTION_REALIZED = \"Réalisé\"\n  public ACTION_NULL = \"\"\n\n\n  checkOperation(data) {\n    if (data.carnet != undefined && data.carnet != null) {\n      if (data.statusVaccin == 1) {\n        if (data.etat == 0) {\n          Object.assign(data, { _status: this.SCHEDULED, _action: this.ACTION_REALIZED });\n        } else if (data.etat == 1) {\n          Object.assign(data, { _status: this.REALIZED, _action: this.ACTION_REALIZED });\n        }\n      } else if (data.statusVaccin == 0) {\n        Object.assign(data, { _status: this.PENDING, _action: this.ACTION_ORGANIZED_REJECT });\n      } else if (data.statusVaccin == 2) {\n        Object.assign(data, { _status: this.REJECTED, _action: this.ACTION_NULL });\n      }\n      console.warn(\">>>>>>>>>>>>>>>>>>>>>LL: VaccinationPage -> checkOperation -> data\", data)\n\n      return Object.assign(data, { operation: this.OPERATION_INT_VACCINATION });\n    } else {\n      if (data.statusVaccin == 1) {\n        Object.assign(data, { _status: this.GENERATE, _action: this.ACTION_VOIR });\n      } else if (data.statusVaccin == 0) {\n        Object.assign(data, { _status: this.PENDING, _action: this.ACTION_GENERATE_REJECT });\n      } else if (data.statusVaccin == 2) {\n        Object.assign(data, { _status: this.REJECTED, _action: this.ACTION_NULL });\n      }\n      const result = Object.assign(data, { operation: this.OPERATION_VACCIN_CALENDAR })\n      console.warn(\"LL: VaccinationPage -> checkOperation -> data\", result)\n\n      return result;\n    }\n\n  }\n\n  asignOperation(filteredVaccinations): { patient: String, nomPatient: String; groups: IVaccination[] }[] {\n    filteredVaccinations.forEach(element => {\n      element.groups.forEach(data => {\n        this.checkOperation(data);\n      });\n    });\n\n    return filteredVaccinations;\n  }\n\n  watchVaccin(_data) {\n    this.praticienSrvc.watchVaccin(_data.patient).subscribe((data) => {\n      console.log(\"LL: watchVaccin -> _data\", data);\n      this.seeVaccination = data;\n      this.openDetailModal(data);\n    });\n  }\n\n\n  generateVaccin(_data) {\n    this.globalItem.presentLoading();\n    console.log(\"LL: generateVaccin -> _data\", _data)\n    this.praticienSrvc.generateVaccin(_data.id, _data.patient).subscribe((data) => {\n      console.log(\"LL: generateVaccin -> data\", data)\n      this.getListVaccinations();\n      this.globalItem.dismissLoading();\n    })\n  }\n\n  rejectVaccin(_data) {\n    this.globalItem.presentLoading();\n    console.log(\"LL: generateVaccin -> _data\", _data.id)\n    this.praticienSrvc.rejectVaccin(_data.id).subscribe((data) => {\n      console.log(\"LL: generateVaccin -> data\", data);\n      this.getListVaccinations();\n      this.globalItem.dismissLoading();\n    });\n  }\n\n\n  watchVaccinWithNotebook(_data) {\n    console.log(\"LL: watchVaccinWithNotebook -> _data\", _data)\n    this.praticienSrvc.watchVaccinWithNotebook(_data.carnet).subscribe((data) => {\n      console.log(\"LL: watchVaccin -> _data\", data);\n      this.seeVaccination = data;\n      this.openDetailModal(data, true);\n    });\n\n  }\n\n  rejectVaccinWithNotebook(_data) {\n    console.log(\"LL: rejectVaccinWithNotebook -> _data\", _data.id)\n    this.globalItem.presentLoading();\n    this.praticienSrvc.rejectVaccinithNotebook(_data.id).subscribe((data) => {\n      console.log(\"LL: rejectVaccinWithNotebook -> data\", data)\n      this.getListVaccinations();\n      this.globalItem.dismissLoading();\n    });\n  }\n\n  async organizeVaccinWithNotebook(_data) {\n    console.log(\"LL: organizeVaccinWithNotebook -> _data\", _data)\n    await this.praticienSrvc.watchVaccinWithNotebook(_data.carnet).subscribe(async (data: any) => {\n      const dataToSend = {\n        date: data[0].datePriseVaccin.date,\n        idCarnet: _data.carnet,\n        id: _data.id,\n      }\n      console.log(\"LL: organizeVaccinWithNotebook -> dataToSend\", dataToSend)\n      await this.openOrganizeModal(dataToSend);\n    });\n  }\n\n}\n"]}