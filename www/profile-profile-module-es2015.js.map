{"version":3,"sources":["./src/app/pages/patient/profile/profile.page.html","./src/app/pages/praticien/profile/profile.page.html","./src/app/pages/global.interaction.ts","./src/app/pages/patient/profile/profile-routing.module.ts","./src/app/pages/patient/profile/profile.module.ts","./src/app/pages/patient/profile/profile.page.scss","./src/app/pages/patient/profile/profile.page.ts","./src/app/pages/praticien/profile/profile-routing.module.ts","./src/app/pages/praticien/profile/profile.module.ts","./src/app/pages/praticien/profile/profile.page.scss","./src/app/pages/praticien/profile/profile.page.ts","./src/app/services/global-data.service.ts","./src/app/services/patient.service.ts"],"names":[],"mappings":"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","file":"profile-profile-module-es2015.js","sourcesContent":["export default \"<ion-header translucent=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons *ngIf=\\\"!ios\\\" slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n      <ion-title slot=\\\"start\\\">Profile</ion-title>\\n    </ion-buttons>\\n\\n    <ion-menu-button *ngIf=\\\"ios\\\"></ion-menu-button>\\n\\n    <ion-title slot=\\\"end\\\" color=\\\"tertiary\\\" class=\\\"identifiant\\\" *ngIf=\\\"profile\\\">{{profile.username}}</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <div class=\\\"card\\\">\\n    <div class=\\\"header\\\">\\n      <div class=\\\"avatar\\\">\\n        <img src=\\\"./../../../../assets/images/praticien.jpg\\\" alt=\\\"\\\" />\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"card-body\\\" *ngIf=\\\"profile\\\">\\n    <div class=\\\"user-meta ion-text-center\\\">\\n      <h3 class=\\\"playername\\\">\\n        {{profile.firstName}} {{profile.lastName}} ({{type_patient}})\\n      </h3>\\n      <h6 class=\\\"ranking\\\">\\n        Date de création:\\n        <ion-chip>\\n          <ion-label>{{profile.createdAt | date:\\\"MMM dd, yyyy\\\"}}</ion-label>\\n        </ion-chip>\\n      </h6>\\n    </div>\\n    <div>\\n      <form [formGroup]=\\\"patientRegisterForm\\\">\\n        <!-- Date de naissance -->\\n        <ion-item lines=\\\"full\\\" disabled>\\n          <ion-label position=\\\"stacked\\\">Date de naissance</ion-label>\\n          <ion-datetime\\n            display-format=\\\"MMM DD, YYYY\\\"\\n            picker-format=\\\"MMM DD, YYYY\\\"\\n            [ngModel]=\\\"profile.dateOnBorn\\\"\\n            formControlName=\\\"birthday\\\"\\n            required></ion-datetime>\\n        </ion-item>\\n        <!-- Pays -->\\n        <ion-item\\n          lines=\\\"full\\\"\\n          [disabled]=\\\"!this.profile.nameState &&!this.countries\\\">\\n          <ion-label position=\\\"stacked\\\">Pays</ion-label>\\n          <ion-select\\n            formControlName=\\\"state\\\"\\n            required\\n            (ionChange)=\\\"getCityByCountry(this.patientRegisterForm.value['state'])\\\"\\n            [compareWith]=\\\"compareFnInv\\\"\\n            [ngModel]=\\\"profile.nameState\\\">\\n            <ng-container *ngFor=\\\"let item of this.countries\\\">\\n              <ion-select-option value=\\\"{{item.id}}\\\">{{item.nameState}}</ion-select-option>\\n            </ng-container>\\n          </ion-select>\\n        </ion-item>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validation_msg.state\\\">\\n            <div\\n              class=\\\"error-message\\\"\\n              *ngIf=\\\"patientRegisterForm.get('state').hasError(validation.type)\\\">\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n\\n        <!-- Téléphone -->\\n        <ion-item lines=\\\"full\\\">\\n          <ion-label position=\\\"stacked\\\">Phone</ion-label>\\n          <ion-input\\n            type=\\\"text\\\"\\n            required\\n            formControlName=\\\"phone\\\"\\n            [ngModel]=\\\"profile.phone\\\"></ion-input>\\n        </ion-item>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validation_msg.phone\\\">\\n            <div\\n              class=\\\"error-message\\\"\\n              *ngIf=\\\"patientRegisterForm.get('phone').hasError(validation.type)\\\">\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n        <!-- Ville -->\\n        <ion-item\\n          lines=\\\"full\\\"\\n          [disabled]=\\\"!this.profile.nameCity\\\"\\n          *ngIf=\\\"this.cities\\\">\\n          <ion-label position=\\\"stacked\\\">Ville</ion-label>\\n          <ion-select\\n            formControlName=\\\"city\\\"\\n            required\\n            [(ngModel)]=\\\"profile.nameCity\\\"\\n            [compareWith]=\\\"compareFnInv\\\">\\n            <ng-container *ngFor=\\\"let item of this.cities\\\">\\n              <ion-select-option value=\\\"{{item.id}}\\\">{{item.nameCity}}</ion-select-option>\\n            </ng-container>\\n          </ion-select>\\n        </ion-item>\\n        <!-- Pays de naissance -->\\n        <ion-item\\n          lines=\\\"full\\\"\\n          [disabled]=\\\"!this.profile.countryBorn &&!this.countries\\\">\\n          <ion-label position=\\\"stacked\\\">Pays de naissance</ion-label>\\n          <ion-select\\n            formControlName=\\\"countryBorn\\\"\\n            required\\n            (ionChange)=\\\"getCityByCountryBorn(this.patientRegisterForm.value['countryBorn'])\\\"\\n            [compareWith]=\\\"compareFnInv\\\"\\n            [ngModel]=\\\"profile.countryBorn\\\">\\n            <ng-container *ngFor=\\\"let item of this.countries\\\">\\n              <ion-select-option value=\\\"{{item.id}}\\\">{{item.nameState}}</ion-select-option>\\n            </ng-container>\\n          </ion-select>\\n        </ion-item>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validation_msg.state\\\">\\n            <div\\n              class=\\\"error-message\\\"\\n              *ngIf=\\\"patientRegisterForm.get('state').hasError(validation.type)\\\">\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n        <!-- Ville de naissance -->\\n        <ion-item\\n          lines=\\\"full\\\"\\n          [disabled]=\\\"!this.profile.cityBorn\\\"\\n          *ngIf=\\\"this.citiesBorn\\\">\\n          <ion-label position=\\\"stacked\\\">Ville de naissance</ion-label>\\n          <ion-select\\n            formControlName=\\\"cityBorn\\\"\\n            required\\n            [(ngModel)]=\\\"profile.cityBorn\\\"\\n            [compareWith]=\\\"compareFnInv\\\">\\n            <ng-container *ngFor=\\\"let item of this.citiesBorn\\\">\\n              <ion-select-option value=\\\"{{item.id}}\\\">{{item.nameCity}}</ion-select-option>\\n            </ng-container>\\n          </ion-select>\\n        </ion-item>\\n        <!-- Sexe -->\\n        <ion-item lines=\\\"full\\\" disabled>\\n          <ion-label position=\\\"stacked\\\">Sexe</ion-label>\\n          <ion-select\\n            placeholder=\\\"Select\\\"\\n            formControlName=\\\"gender\\\"\\n            required\\n            [ngModel]=\\\"profile.sexe\\\">\\n            <ion-select-option>Masculin</ion-select-option>\\n            <ion-select-option>Feminin</ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n        <!-- Adresse -->\\n        <ion-item lines=\\\"full\\\">\\n          <ion-label position=\\\"stacked\\\">Adresse</ion-label>\\n          <ion-textarea\\n            required\\n            formControlName=\\\"address\\\"\\n            [ngModel]=\\\"profile.address\\\"></ion-textarea>\\n        </ion-item>\\n        <!-- Email -->\\n        <ion-item lines=\\\"full\\\">\\n          <ion-label position=\\\"stacked\\\">Email</ion-label>\\n          <ion-input\\n            type=\\\"text\\\"\\n            required\\n            formControlName=\\\"email\\\"\\n            [ngModel]=\\\"profile.email\\\"></ion-input>\\n          <!-- <div\\n            style=\\\"color: red; padding-top: 0.2rem\\\"\\n            *ngIf=\\\"patientRegisterForm.hasError('required', 'email')\\\"\\n          ></div> -->\\n          <!-- <div\\n            *ngIf=\\\"!patientRegisterForm.controls.email.valid &&\\n            patientRegisterForm.controls.email.dirty\\\"\\n            class=\\\"validator-error\\\"\\n          >\\n            Please enter a valid email.\\n          </div> -->\\n        </ion-item>\\n        <!-- Nom du père -->\\n        <ion-item lines=\\\"full\\\" *ngIf=\\\"profile.fatherName\\\">\\n          <ion-label position=\\\"stacked\\\">Nom du père</ion-label>\\n          <ion-input\\n            type=\\\"text\\\"\\n            required\\n            formControlName=\\\"father_name\\\"\\n            [ngModel]=\\\"this.profile.fatherName\\\"></ion-input>\\n        </ion-item>\\n        <!-- Nom de la mère -->\\n        <ion-item lines=\\\"full\\\" *ngIf=\\\"profile.motherName\\\">\\n          <ion-label position=\\\"stacked\\\">Nom de la mère</ion-label>\\n          <ion-input\\n            type=\\\"text\\\"\\n            required\\n            formControlName=\\\"mother_name\\\"\\n            [ngModel]=\\\"this.profile.motherName\\\"></ion-input>\\n        </ion-item>\\n\\n        <ion-row>\\n          <ion-col>\\n            <ion-button\\n              type=\\\"submit\\\"\\n              color=\\\"sgreen\\\" expand=\\\"full\\\"\\n              (click)=\\\"update()\\\">Modifier</ion-button>\\n          </ion-col>\\n        </ion-row>\\n      </form>\\n    </div>\\n  </div>\\n</ion-content>\\n\";","export default \"<ion-header translucent=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons *ngIf=\\\"!ios\\\" slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n      <ion-title slot=\\\"start\\\">Profile</ion-title>\\n    </ion-buttons>\\n\\n    <ion-menu-button *ngIf=\\\"ios\\\"></ion-menu-button>\\n\\n    <ion-title slot=\\\"end\\\" color=\\\"tertiary\\\" class=\\\"identifiant\\\" *ngIf=\\\"profile\\\"\\n      >{{profile.username}}</ion-title\\n    >\\n  </ion-toolbar>\\n</ion-header>\\n<ion-content>\\n  <div class=\\\"card\\\">\\n    <div class=\\\"header\\\">\\n      <div class=\\\"avatar\\\">\\n        <img src=\\\"./../../../../assets/images/praticien.jpg\\\" alt=\\\"\\\" />\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"card-body\\\" *ngIf=\\\"profile\\\">\\n    <div class=\\\"user-meta ion-text-center\\\">\\n      <h3 class=\\\"playername\\\">\\n        {{profile.firstName}} {{profile.lastName}} ({{centre_name}})\\n      </h3>\\n      <h6 class=\\\"ranking\\\">\\n        Date de création:\\n        <ion-chip>\\n          <ion-label>{{profile.createdAt | date:\\\"MMM dd, yyyy\\\"}}</ion-label>\\n        </ion-chip>\\n      </h6>\\n    </div>\\n    <div>\\n      <form [formGroup]=\\\"praticienFormGroup\\\">\\n        <!-- Date de naissance -->\\n        <ion-item lines=\\\"full\\\" disabled>\\n          <ion-label position=\\\"stacked\\\">Date de naissance</ion-label>\\n          <ion-datetime\\n            display-format=\\\"MMM DD, YYYY\\\"\\n            picker-format=\\\"MMM DD, YYYY\\\"\\n            [ngModel]=\\\"profile.dateOnBorn\\\"\\n            formControlName=\\\"birthday\\\"\\n            required\\n          ></ion-datetime>\\n        </ion-item>\\n        <!-- Pays -->\\n        <ion-item\\n          lines=\\\"full\\\"\\n          [disabled]=\\\"!this.profile.nameState &&!this.countries\\\"\\n        >\\n          <ion-label position=\\\"stacked\\\">Pays</ion-label>\\n          <ion-select\\n            formControlName=\\\"state\\\"\\n            required\\n            (ionChange)=\\\"getCityByCountry(this.praticienFormGroup.value['state'])\\\"\\n            [compareWith]=\\\"compareFnInv\\\"\\n            [ngModel]=\\\"profile.nameState\\\"\\n          >\\n            <ng-container *ngFor=\\\"let item of this.countries\\\">\\n              <ion-select-option value=\\\"{{item.id}}\\\"\\n                >{{item.nameState}}</ion-select-option\\n              >\\n            </ng-container>\\n          </ion-select>\\n        </ion-item>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validation_msg.state\\\">\\n            <div\\n              class=\\\"error-message\\\"\\n              *ngIf=\\\"praticienFormGroup.get('state').hasError(validation.type)\\\"\\n            >\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n\\n        <!-- Téléphone -->\\n        <ion-item lines=\\\"full\\\">\\n          <ion-label position=\\\"stacked\\\">Phone</ion-label>\\n          <ion-input\\n            type=\\\"text\\\"\\n            required\\n            formControlName=\\\"phone\\\"\\n            [ngModel]=\\\"profile.phone\\\"\\n          ></ion-input>\\n        </ion-item>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validation_msg.phone\\\">\\n            <div\\n              class=\\\"error-message\\\"\\n              *ngIf=\\\"praticienFormGroup.get('phone').hasError(validation.type)\\\"\\n            >\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n        <!-- Ville -->\\n        <ion-item\\n          lines=\\\"full\\\"\\n          [disabled]=\\\"!this.profile.nameCity\\\"\\n          *ngIf=\\\"this.cities\\\"\\n        >\\n          <ion-label position=\\\"stacked\\\">Ville</ion-label>\\n          <ion-select\\n            formControlName=\\\"city\\\"\\n            required\\n            [(ngModel)]=\\\"profile.nameCity\\\"\\n            [compareWith]=\\\"compareFnInv\\\"\\n          >\\n            <ng-container *ngFor=\\\"let item of this.cities\\\">\\n              <ion-select-option value=\\\"{{item.id}}\\\"\\n                >{{item.nameCity}}</ion-select-option\\n              >\\n            </ng-container>\\n          </ion-select>\\n        </ion-item>\\n        <!-- Pays de naissance -->\\n        <ion-item\\n          lines=\\\"full\\\"\\n          [disabled]=\\\"!this.profile.countryBorn &&!this.countries\\\"\\n        >\\n          <ion-label position=\\\"stacked\\\">Pays de naissance</ion-label>\\n          <ion-select\\n            formControlName=\\\"countryBorn\\\"\\n            required\\n            (ionChange)=\\\"getCityByCountryBorn(this.praticienFormGroup.value['countryBorn'])\\\"\\n            [compareWith]=\\\"compareFnInv\\\"\\n            [ngModel]=\\\"profile.countryBorn\\\"\\n          >\\n            <ng-container *ngFor=\\\"let item of this.countries\\\">\\n              <ion-select-option value=\\\"{{item.id}}\\\"\\n                >{{item.nameState}}</ion-select-option\\n              >\\n            </ng-container>\\n          </ion-select>\\n        </ion-item>\\n        <div class=\\\"validation-errors\\\">\\n          <ng-container *ngFor=\\\"let validation of validation_msg.state\\\">\\n            <div\\n              class=\\\"error-message\\\"\\n              *ngIf=\\\"praticienFormGroup.get('state').hasError(validation.type)\\\"\\n            >\\n              {{ validation.message }}\\n            </div>\\n          </ng-container>\\n        </div>\\n        <!-- Ville de naissance -->\\n        <ion-item\\n          lines=\\\"full\\\"\\n          [disabled]=\\\"!this.profile.cityBorn\\\"\\n          *ngIf=\\\"this.citiesBorn\\\"\\n        >\\n          <ion-label position=\\\"stacked\\\">Ville de naissance</ion-label>\\n          <ion-select\\n            formControlName=\\\"cityBorn\\\"\\n            required\\n            [(ngModel)]=\\\"profile.cityBorn\\\"\\n            [compareWith]=\\\"compareFnInv\\\"\\n          >\\n            <ng-container *ngFor=\\\"let item of this.citiesBorn\\\">\\n              <ion-select-option value=\\\"{{item.id}}\\\"\\n                >{{item.nameCity}}</ion-select-option\\n              >\\n            </ng-container>\\n          </ion-select>\\n        </ion-item>\\n        <!-- Sexe -->\\n        <ion-item lines=\\\"full\\\" disabled>\\n          <ion-label position=\\\"stacked\\\">Sexe</ion-label>\\n          <ion-select\\n            placeholder=\\\"Select\\\"\\n            formControlName=\\\"gender\\\"\\n            required\\n            [ngModel]=\\\"profile.sexe\\\"\\n          >\\n            <ion-select-option>Masculin</ion-select-option>\\n            <ion-select-option>Feminin</ion-select-option>\\n          </ion-select>\\n        </ion-item>\\n        <!-- Adresse -->\\n        <ion-item lines=\\\"full\\\">\\n          <ion-label position=\\\"stacked\\\">Adresse</ion-label>\\n          <ion-textarea\\n            required\\n            formControlName=\\\"address\\\"\\n            [ngModel]=\\\"profile.address\\\"\\n          ></ion-textarea>\\n        </ion-item>\\n        <!-- Email -->\\n        <ion-item lines=\\\"full\\\">\\n          <ion-label position=\\\"stacked\\\">Email</ion-label>\\n          <ion-input\\n            type=\\\"text\\\"\\n            required\\n            formControlName=\\\"email\\\"\\n            [ngModel]=\\\"profile.email\\\"\\n          ></ion-input>\\n          <!-- <div\\n            style=\\\"color: red; padding-top: 0.2rem\\\"\\n            *ngIf=\\\"praticienFormGroup.hasError('required', 'email')\\\"\\n          ></div> -->\\n          <!-- <div\\n            *ngIf=\\\"!praticienFormGroup.controls.email.valid &&\\n            praticienFormGroup.controls.email.dirty\\\"\\n            class=\\\"validator-error\\\"\\n          >\\n            Please enter a valid email.\\n          </div> -->\\n        </ion-item>\\n        <!-- Nom du père -->\\n        <ion-item lines=\\\"full\\\" *ngIf=\\\"profile.fatherName\\\">\\n          <ion-label position=\\\"stacked\\\">Nom du père</ion-label>\\n          <ion-input\\n            type=\\\"text\\\"\\n            required\\n            formControlName=\\\"father_name\\\"\\n            [ngModel]=\\\"this.profile.fatherName\\\"\\n          ></ion-input>\\n        </ion-item>\\n        <!-- Nom de la mère -->\\n        <ion-item lines=\\\"full\\\" *ngIf=\\\"profile.motherName\\\">\\n          <ion-label position=\\\"stacked\\\">Nom de la mère</ion-label>\\n          <ion-input\\n            type=\\\"text\\\"\\n            required\\n            formControlName=\\\"mother_name\\\"\\n            [ngModel]=\\\"this.profile.motherName\\\"\\n          ></ion-input>\\n        </ion-item>\\n\\n        <ion-row>\\n          <ion-col>\\n            <ion-button\\n              type=\\\"submit\\\"\\n              color=\\\"sgreen\\\"\\n              expand=\\\"full\\\"\\n              (click)=\\\"update()\\\"\\n              >Modifier</ion-button\\n            >\\n          </ion-col>\\n        </ion-row>\\n      </form>\\n    </div>\\n  </div>\\n</ion-content>\\n\";","import { Injectable } from '@angular/core';\r\nimport { LoadingController, ToastController, AlertController } from '@ionic/angular';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class GlobalInteraction {\r\n    isLoading = false;\r\n    constructor(public toastCtrl: ToastController, public loadingCtrl: LoadingController, public alertCtrl: AlertController) { }\r\n\r\n    async presentToast(msg) {\r\n        const toast = await this.toastCtrl.create({\r\n            message: msg,\r\n            duration: 1800,\r\n            position: \"top\",\r\n        });\r\n        toast.present();\r\n    }\r\n\r\n    async presentLoading() {\r\n        this.isLoading = true;\r\n        return await this.loadingCtrl.create({\r\n            cssClass: \"my-loading-class\",\r\n            spinner: \"bubbles\",\r\n            translucent: true,\r\n            duration: 100000,\r\n        }).then(a => {\r\n            a.present().then(() => {\r\n                if (!this.isLoading) {\r\n                    a.dismiss();\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    async dismissLoading() {\r\n        if (this.isLoading) {\r\n            this.isLoading = false;\r\n            return await this.loadingCtrl.dismiss();\r\n        }\r\n        return null;\r\n    }\r\n\r\n    async alertDelete(\r\n        id,\r\n        parent,\r\n        msg = \"Tu veux vraiment supprimé cette element ? \",\r\n        callback = this.defaultCallback,\r\n        _header = \"Suppression\",\r\n        array = []\r\n    ) {\r\n        const alert = await this.alertCtrl.create({\r\n            cssClass: \"my-custom-class\",\r\n            header: _header,\r\n            message: msg,\r\n            buttons: [\r\n                {\r\n                    text: \"Cancel\",\r\n                    role: \"cancel\",\r\n                    cssClass: \"secondary\",\r\n                    handler: () => {\r\n                        console.log(\"Confirm Cancel: blah\");\r\n                    },\r\n                },\r\n                {\r\n                    text: \"OK\",\r\n                    handler: () => {\r\n                        console.warn(\"data deleted \" + id);\r\n                        // this.remove(id, array, keyStatus, RefuseStatus);\r\n                        callback(id, parent)\r\n                    },\r\n                },\r\n            ],\r\n        });\r\n        await alert.present();\r\n    }\r\n\r\n    defaultCallback(id, parent) {\r\n        this.presentToast(`this is a default callback ${id} `);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfilePage } from './profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfilePageRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { ProfilePageRoutingModule } from \"./profile-routing.module\";\n\nimport { ProfilePage } from \"./profile.page\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProfilePageRoutingModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [ProfilePage],\n})\nexport class ProfilePageModule {}\n","export default \"@charset \\\"UTF-8\\\";\\nion-content {\\n  position: relative;\\n  height: 100%;\\n  width: 100%;\\n}\\nion-toolbar {\\n  background: transparent;\\n}\\n.card {\\n  background: url('doctor.jpg') no-repeat top center/cover fixed, #fff;\\n  margin: 0 auto;\\n}\\n.card .header {\\n  height: 200px;\\n}\\n.card .header .avatar {\\n  width: 160px;\\n  height: 160px;\\n  position: relative;\\n  margin: 0 auto;\\n}\\n.card .header .avatar img {\\n  display: block;\\n  border-radius: 50%;\\n  position: absolute;\\n  bottom: calc(-1 * (80px + 4px));\\n  border: 8px solid var(--ion-color-sgreen);\\n  background-color: #fff;\\n}\\n.card-body {\\n  background-color: #ffffff;\\n  padding: 30px;\\n  height: calc(100vh – (200px + 56px));\\n  overflow: hidden;\\n}\\n.card-body .user-meta {\\n  padding-top: 40px;\\n}\\n.card-body .user-meta .playername {\\n  font-size: 24px;\\n  font-weight: 600;\\n  color: #303940;\\n}\\n.card-body .user-meta .country {\\n  font-size: 90%;\\n  color: #949ea6;\\n  text-transform: uppercase;\\n  margin: 0 auto;\\n}\\n.identifiant {\\n  font-style: italic;\\n  font-size: medium;\\n  color: var(--ion-color-sred);\\n  padding-right: 30px;\\n  font-size: 18px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcGF0aWVudC9wcm9maWxlL3Byb2ZpbGUucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGdCQUFnQjtBQUFoQjtFQUNFLGtCQUFBO0VBQ0EsWUFBQTtFQUNBLFdBQUE7QUFFRjtBQUFBO0VBQ0UsdUJBQUE7QUFHRjtBQUFBO0VBQ0Usb0VBQUE7RUFHQSxjQUFBO0FBQ0Y7QUFDRTtFQUNFLGFBQUE7QUFDSjtBQUNJO0VBQ0UsWUFBQTtFQUNBLGFBQUE7RUFDQSxrQkFBQTtFQUNBLGNBQUE7QUFDTjtBQUNNO0VBQ0UsY0FBQTtFQUNBLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSwrQkFBQTtFQUNBLHlDQUFBO0VBQ0Esc0JBQUE7QUFDUjtBQUtBO0VBQ0UseUJBQUE7RUFDQSxhQUFBO0VBQ0Esb0NBQUE7RUFDQSxnQkFBQTtBQUZGO0FBSUU7RUFDRSxpQkFBQTtBQUZKO0FBSUk7RUFDRSxlQUFBO0VBQ0EsZ0JBQUE7RUFDQSxjQUFBO0FBRk47QUFLSTtFQUNFLGNBQUE7RUFDQSxjQUFBO0VBQ0EseUJBQUE7RUFDQSxjQUFBO0FBSE47QUFPQTtFQUNFLGtCQUFBO0VBQ0EsaUJBQUE7RUFDQSw0QkFBQTtFQUNBLG1CQUFBO0VBQ0EsZUFBQTtBQUpGIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvcGF0aWVudC9wcm9maWxlL3Byb2ZpbGUucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGNoYXJzZXQgXCJVVEYtOFwiO1xuaW9uLWNvbnRlbnQge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG59XG5cbmlvbi10b29sYmFyIHtcbiAgYmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG59XG5cbi5jYXJkIHtcbiAgYmFja2dyb3VuZDogdXJsKC4vLi4vLi4vLi4vLi4vYXNzZXRzL2ltYWdlcy9kb2N0b3IuanBnKSBuby1yZXBlYXQgdG9wIGNlbnRlci9jb3ZlciBmaXhlZCwgI2ZmZjtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG4uY2FyZCAuaGVhZGVyIHtcbiAgaGVpZ2h0OiAyMDBweDtcbn1cbi5jYXJkIC5oZWFkZXIgLmF2YXRhciB7XG4gIHdpZHRoOiAxNjBweDtcbiAgaGVpZ2h0OiAxNjBweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXJnaW46IDAgYXV0bztcbn1cbi5jYXJkIC5oZWFkZXIgLmF2YXRhciBpbWcge1xuICBkaXNwbGF5OiBibG9jaztcbiAgYm9yZGVyLXJhZGl1czogNTAlO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogY2FsYygtMSAqICg4MHB4ICsgNHB4KSk7XG4gIGJvcmRlcjogOHB4IHNvbGlkIHZhcigtLWlvbi1jb2xvci1zZ3JlZW4pO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xufVxuXG4uY2FyZC1ib2R5IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZmZmZjtcbiAgcGFkZGluZzogMzBweDtcbiAgaGVpZ2h0OiBjYWxjKDEwMHZoIOKAkyAoMjAwcHggKyA1NnB4KSk7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG4uY2FyZC1ib2R5IC51c2VyLW1ldGEge1xuICBwYWRkaW5nLXRvcDogNDBweDtcbn1cbi5jYXJkLWJvZHkgLnVzZXItbWV0YSAucGxheWVybmFtZSB7XG4gIGZvbnQtc2l6ZTogMjRweDtcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgY29sb3I6ICMzMDM5NDA7XG59XG4uY2FyZC1ib2R5IC51c2VyLW1ldGEgLmNvdW50cnkge1xuICBmb250LXNpemU6IDkwJTtcbiAgY29sb3I6ICM5NDllYTY7XG4gIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuXG4uaWRlbnRpZmlhbnQge1xuICBmb250LXN0eWxlOiBpdGFsaWM7XG4gIGZvbnQtc2l6ZTogbWVkaXVtO1xuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXNyZWQpO1xuICBwYWRkaW5nLXJpZ2h0OiAzMHB4O1xuICBmb250LXNpemU6IDE4cHg7XG59Il19 */\";","import { Component, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { LoadingController, ToastController } from '@ionic/angular';\nimport { IProfilePatient } from \"src/app/Interfaces/patient.interface\";\nimport { GlobalDataService } from 'src/app/services/global-data.service';\nimport { PatientService } from \"src/app/services/patient.service\";\nimport { GlobalInteraction } from '../../global.interaction';\n\n@Component({\n  selector: \"app-profile\",\n  templateUrl: \"./profile.page.html\",\n  styleUrls: [\"./profile.page.scss\"],\n})\nexport class ProfilePage implements OnInit {\n  ios: boolean;\n  showSearchbar: boolean;\n  public patientRegisterForm: FormGroup;\n  public _id = \"Identifiant\";\n  public profile: IProfilePatient;\n  private OK = \"ok\";\n  public type_patient;\n  public countries;\n  public cities;\n  public citiesBorn;\n  isLoading = false;\n  public validation_msg = {\n    first_name: [{ type: \"required\", message: \"Prénom obligatoire\" }],\n    last_name: [{ type: \"required\", message: \"Nom obligatoire\" }],\n    date_on_born: [\n      { type: \"required\", message: \"Date de naissance obligatoire\" },\n    ],\n    state: [{ type: \"required\", message: \"Pays obligatoire\" }],\n    city: [{ type: \"required\", message: \"Selectionner un pays , Ville obligatoire\" }],\n    sexe: [{ type: \"required\", message: \"Sexe obligatoire\" }],\n    address: [{ type: \"required\", message: \"Adresse obligatoire\" }],\n    email: [{ type: \"required\", message: \"Email obligatoire\" }],\n    password: [{ type: \"required\", message: \"Mot de passe obligatoire\" }],\n    phone: [{ type: \"required\", message: \"Phone obligatoire\" }],\n    father_name: [{ type: \"required\", message: \"Nom du père obligatoire\" }],\n    mother_name: [{ type: \"required\", message: \"Nom de la mère obligatoire\" }],\n  };\n  constructor(private patienSrvc: PatientService, private globalSrvc: GlobalDataService, private globalInteract: GlobalInteraction, private loadingController: LoadingController) {\n    this.globalSrvc.getCountry().subscribe((result) => {\n      this.countries = result;\n      this.getProfile();\n    });\n  }\n\n  ngOnInit() {\n    this.globalInteract.presentLoading();\n\n  }\n\n  buildForm(data: IProfilePatient) {\n    this.patientRegisterForm = new FormGroup({\n      // lastName: new FormControl(\"\", [Validators.required]),\n      // firstName: new FormControl(\"\", [Validators.required]),\n      birthday: new FormControl(\"\", [Validators.required]),\n      // description: new FormControl(\"\", [Validators.required]),\n      state: new FormControl(\"\", [Validators.required]),\n      countryBorn: new FormControl(\"\", [Validators.required]),\n      city: new FormControl(\"\", [Validators.required]),\n      cityBorn: new FormControl(\"\", [Validators.required]),\n      gender: new FormControl(\"\", [Validators.required]),\n      address: new FormControl(\"\", [Validators.required]),\n      email: new FormControl(\"\", [Validators.required]),\n      phone: new FormControl(\"\", [Validators.required]),\n      // password: new FormControl(\"\", [Validators.required]),\n    });\n\n    if (data.typePatient != 1) {\n      this.patientRegisterForm.addControl(\n        \"father_name\",\n        new FormControl(\"\", [Validators.required])\n      );\n      this.patientRegisterForm.addControl(\n        \"mother_name\",\n        new FormControl(\"\", [Validators.required])\n      );\n    }\n  }\n\n  async update() {\n    if (this.patientRegisterForm.valid) {\n      this.globalInteract.presentLoading();\n\n      Object.keys(this.patientRegisterForm.value).forEach((key) => {\n        console.log(\"valid\", this.patientRegisterForm.value[key]);\n        const data_updated = {\n          address: this.patientRegisterForm.value[\"address\"],\n          cityBorn: this.patientRegisterForm.value[\"cityBorn\"],\n          countryBorn: this.patientRegisterForm.value[\"countryBorn\"],\n          email: this.patientRegisterForm.value[\"email\"],\n          fatherName: this.patientRegisterForm.value['father_name'] == undefined ? '' : this.patientRegisterForm.value['father_name'],\n          id: this.profile.id,\n          motherName: this.patientRegisterForm.value['father_name'] == undefined ? '' : this.patientRegisterForm.value['mother_name'],\n          nameCity: this.patientRegisterForm.value[\"city\"],\n          nameState: this.patientRegisterForm.value[\"state\"],\n          phone: this.patientRegisterForm.value[\"phone\"],\n        }\n\n        this.patienSrvc.updateProfile(data_updated).subscribe((data) => {\n\n          if (data == this.OK) {\n            this.globalInteract.dismissLoading();\n            this.globalInteract.presentToast('Profile mis à jour');\n          } else {\n            this.globalInteract.presentToast('Profile non mis à jour !!!')\n          }\n        });\n      });\n    } else {\n      console.log(\"NOT valid\", this.patientRegisterForm);\n\n      Object.keys(this.patientRegisterForm.value).forEach((key) => {\n        console.log(\"NOT valid\", this.patientRegisterForm.value[key]);\n      });\n    }\n  }\n  //Comparaison select\n  compareFn(e1: any, e2: any): boolean {\n    return e1 && e2 ? e1.id == e2.id : e1 == e2;\n  }\n  compareFnInv(e1: any, e2: any): boolean {\n    return e1 && e2 ? e1 == e2 : e1.id == e2.id;\n  }\n\n  getProfile() {\n\n    this.patienSrvc.getProfile().subscribe(async (data: IProfilePatient[]) => {\n      console.log(data);\n      this.profile = data[0];\n\n      this.profile.nameState = data[0].namestate;\n      this.globalSrvc.getCity(this.profile.nameState).subscribe(data2 => {\n        this.cities = data2;\n        this.profile.nameCity = data[0].nameCity;\n      })\n      data[0].countryBorn == null ? this.profile.countryBorn = data[0].namestate : this.profile.countryBorn = data[0].countryBorn;\n      this.globalSrvc.getCity(this.profile.countryBorn).subscribe(data3 => {\n        this.citiesBorn = data3;\n        data[0].cityBorn == null ? this.profile.cityBorn = data[0].nameCity : this.profile.cityBorn = data[0].cityBorn;\n        this.globalInteract.dismissLoading()\n      })\n\n      this.profile.dateOnBorn = data[0].dateOnBorn.date;\n      this.profile.createdAt = data[0].createdAt.date;\n      // this.profile.date_on_born = new Date(data.date_on_born);\n      this.buildForm(data[0]);\n      this.type_patient = data[0].typePatient == 1 ? \"Adult\" : \"Enfant\";\n\n    });\n  }\n\n  getKeyByValue(object, value) {\n    return Object.keys(object).find(key => object[key] === value);\n  }\n\n  getCityByCountry(id) {\n    console.log(\"LL: ProfilePage -> getCityByCountry -> id\", id)\n    console.log(\"LL: ProfilePage -> getCityByCountry -> id\", this.profile)\n    this.globalSrvc.getCity(id).subscribe((data) => this.cities = data);\n  }\n  getCityByCountryBorn(id) {\n    console.log(\"LL: ProfilePage -> getCityByCountryBorn -> id\", id)\n    console.log(\"LL: ProfilePage -> getCityByCountryBorn -> id\", this.profile)\n    this.globalSrvc.getCity(id).subscribe((data) => this.citiesBorn = data);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { ProfilePage } from './profile.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: ProfilePage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class ProfilePageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { ProfilePageRoutingModule } from './profile-routing.module';\n\nimport { ProfilePage } from './profile.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    ProfilePageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [ProfilePage]\n})\nexport class ProfilePageModule { }\n","export default \"@charset \\\"UTF-8\\\";\\nion-content {\\n  position: relative;\\n  height: 100%;\\n  width: 100%;\\n}\\nion-toolbar {\\n  background: transparent;\\n}\\n.card {\\n  background: url('doctor.jpg') no-repeat top center/cover fixed, #fff;\\n  margin: 0 auto;\\n}\\n.card .header {\\n  height: 200px;\\n}\\n.card .header .avatar {\\n  width: 160px;\\n  height: 160px;\\n  position: relative;\\n  margin: 0 auto;\\n}\\n.card .header .avatar img {\\n  display: block;\\n  border-radius: 50%;\\n  position: absolute;\\n  bottom: calc(-1 * (80px + 4px));\\n  border: 8px solid var(--ion-color-sgreen);\\n  background-color: #fff;\\n}\\n.card-body {\\n  background-color: #ffffff;\\n  padding: 30px;\\n  height: calc(100vh – (200px + 56px));\\n  overflow: hidden;\\n}\\n.card-body .user-meta {\\n  padding-top: 40px;\\n}\\n.card-body .user-meta .playername {\\n  font-size: 24px;\\n  font-weight: 600;\\n  color: #303940;\\n}\\n.card-body .user-meta .country {\\n  font-size: 90%;\\n  color: #949ea6;\\n  text-transform: uppercase;\\n  margin: 0 auto;\\n}\\n.identifiant {\\n  font-style: italic;\\n  font-size: medium;\\n  color: var(--ion-color-sred);\\n  padding-right: 30px;\\n  font-size: 18px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcHJhdGljaWVuL3Byb2ZpbGUvcHJvZmlsZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsZ0JBQWdCO0FBQWhCO0VBQ0Usa0JBQUE7RUFDQSxZQUFBO0VBQ0EsV0FBQTtBQUVGO0FBQUE7RUFDRSx1QkFBQTtBQUdGO0FBQUE7RUFDRSxvRUFBQTtFQUdBLGNBQUE7QUFDRjtBQUNFO0VBQ0UsYUFBQTtBQUNKO0FBQ0k7RUFDRSxZQUFBO0VBQ0EsYUFBQTtFQUNBLGtCQUFBO0VBQ0EsY0FBQTtBQUNOO0FBQ007RUFDRSxjQUFBO0VBQ0Esa0JBQUE7RUFDQSxrQkFBQTtFQUNBLCtCQUFBO0VBQ0EseUNBQUE7RUFDQSxzQkFBQTtBQUNSO0FBS0E7RUFDRSx5QkFBQTtFQUNBLGFBQUE7RUFDQSxvQ0FBQTtFQUNBLGdCQUFBO0FBRkY7QUFJRTtFQUNFLGlCQUFBO0FBRko7QUFJSTtFQUNFLGVBQUE7RUFDQSxnQkFBQTtFQUNBLGNBQUE7QUFGTjtBQUtJO0VBQ0UsY0FBQTtFQUNBLGNBQUE7RUFDQSx5QkFBQTtFQUNBLGNBQUE7QUFITjtBQU9BO0VBQ0Usa0JBQUE7RUFDQSxpQkFBQTtFQUNBLDRCQUFBO0VBQ0EsbUJBQUE7RUFDQSxlQUFBO0FBSkYiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9wcmF0aWNpZW4vcHJvZmlsZS9wcm9maWxlLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIkBjaGFyc2V0IFwiVVRGLThcIjtcbmlvbi1jb250ZW50IHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIHdpZHRoOiAxMDAlO1xufVxuXG5pb24tdG9vbGJhciB7XG4gIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xufVxuXG4uY2FyZCB7XG4gIGJhY2tncm91bmQ6IHVybCguLy4uLy4uLy4uLy4uL2Fzc2V0cy9pbWFnZXMvZG9jdG9yLmpwZykgbm8tcmVwZWF0IHRvcCBjZW50ZXIvY292ZXIgZml4ZWQsICNmZmY7XG4gIG1hcmdpbjogMCBhdXRvO1xufVxuLmNhcmQgLmhlYWRlciB7XG4gIGhlaWdodDogMjAwcHg7XG59XG4uY2FyZCAuaGVhZGVyIC5hdmF0YXIge1xuICB3aWR0aDogMTYwcHg7XG4gIGhlaWdodDogMTYwcHg7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgbWFyZ2luOiAwIGF1dG87XG59XG4uY2FyZCAuaGVhZGVyIC5hdmF0YXIgaW1nIHtcbiAgZGlzcGxheTogYmxvY2s7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgcG9zaXRpb246IGFic29sdXRlO1xuICBib3R0b206IGNhbGMoLTEgKiAoODBweCArIDRweCkpO1xuICBib3JkZXI6IDhweCBzb2xpZCB2YXIoLS1pb24tY29sb3Itc2dyZWVuKTtcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcbn1cblxuLmNhcmQtYm9keSB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZmZmZmY7XG4gIHBhZGRpbmc6IDMwcHg7XG4gIGhlaWdodDogY2FsYygxMDB2aCDigJMgKDIwMHB4ICsgNTZweCkpO1xuICBvdmVyZmxvdzogaGlkZGVuO1xufVxuLmNhcmQtYm9keSAudXNlci1tZXRhIHtcbiAgcGFkZGluZy10b3A6IDQwcHg7XG59XG4uY2FyZC1ib2R5IC51c2VyLW1ldGEgLnBsYXllcm5hbWUge1xuICBmb250LXNpemU6IDI0cHg7XG4gIGZvbnQtd2VpZ2h0OiA2MDA7XG4gIGNvbG9yOiAjMzAzOTQwO1xufVxuLmNhcmQtYm9keSAudXNlci1tZXRhIC5jb3VudHJ5IHtcbiAgZm9udC1zaXplOiA5MCU7XG4gIGNvbG9yOiAjOTQ5ZWE2O1xuICB0ZXh0LXRyYW5zZm9ybTogdXBwZXJjYXNlO1xuICBtYXJnaW46IDAgYXV0bztcbn1cblxuLmlkZW50aWZpYW50IHtcbiAgZm9udC1zdHlsZTogaXRhbGljO1xuICBmb250LXNpemU6IG1lZGl1bTtcbiAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1zcmVkKTtcbiAgcGFkZGluZy1yaWdodDogMzBweDtcbiAgZm9udC1zaXplOiAxOHB4O1xufSJdfQ== */\";","import { Component, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { LoadingController, ToastController } from '@ionic/angular';\nimport { IProfilePatient } from \"src/app/Interfaces/patient.interface\";\nimport { GlobalDataService } from 'src/app/services/global-data.service';\nimport { PatientService } from \"src/app/services/patient.service\";\nimport { PraticienService } from 'src/app/services/praticien.service';\nimport { GlobalInteraction } from '../../global.interaction';\n\n@Component({\n  selector: \"app-profile\",\n  templateUrl: \"./profile.page.html\",\n  styleUrls: [\"./profile.page.scss\"],\n})\nexport class ProfilePage implements OnInit {\n  ios: boolean;\n  showSearchbar: boolean;\n  public praticienFormGroup: FormGroup;\n  public _id = \"Identifiant\";\n  public profile;\n  private OK = \"ok\";\n  public centre_name;\n  public countries;\n  public cities;\n  public citiesBorn;\n  isLoading = false;\n  public validation_msg = {\n    first_name: [{ type: \"required\", message: \"Prénom obligatoire\" }],\n    last_name: [{ type: \"required\", message: \"Nom obligatoire\" }],\n    date_on_born: [\n      { type: \"required\", message: \"Date de naissance obligatoire\" },\n    ],\n    state: [{ type: \"required\", message: \"Pays obligatoire\" }],\n    city: [{ type: \"required\", message: \"Selectionner un pays , Ville obligatoire\" }],\n    sexe: [{ type: \"required\", message: \"Sexe obligatoire\" }],\n    address: [{ type: \"required\", message: \"Adresse obligatoire\" }],\n    email: [{ type: \"required\", message: \"Email obligatoire\" }],\n    password: [{ type: \"required\", message: \"Mot de passe obligatoire\" }],\n    phone: [{ type: \"required\", message: \"Phone obligatoire\" }],\n    father_name: [{ type: \"required\", message: \"Nom du père obligatoire\" }],\n    mother_name: [{ type: \"required\", message: \"Nom de la mère obligatoire\" }],\n  };\n  constructor(private praticienSrvc: PraticienService, private globalSrvc: GlobalDataService, private globalInteract: GlobalInteraction, private loadingController: LoadingController) {\n    this.globalSrvc.getCountry().subscribe((result) => {\n      this.countries = result;\n      this.getProfile();\n    });\n  }\n\n  ngOnInit() {\n    this.globalInteract.presentLoading();\n\n  }\n\n  buildForm(data: IProfilePatient) {\n    this.praticienFormGroup = new FormGroup({\n      // lastName: new FormControl(\"\", [Validators.required]),\n      // firstName: new FormControl(\"\", [Validators.required]),\n      birthday: new FormControl(\"\", [Validators.required]),\n      // description: new FormControl(\"\", [Validators.required]),\n      state: new FormControl(\"\", [Validators.required]),\n      countryBorn: new FormControl(\"\", [Validators.required]),\n      city: new FormControl(\"\", [Validators.required]),\n      cityBorn: new FormControl(\"\", [Validators.required]),\n      gender: new FormControl(\"\", [Validators.required]),\n      address: new FormControl(\"\", [Validators.required]),\n      email: new FormControl(\"\", [Validators.required]),\n      phone: new FormControl(\"\", [Validators.required]),\n      // password: new FormControl(\"\", [Validators.required]),\n    });\n\n\n  }\n\n  async update() {\n    if (this.praticienFormGroup.valid) {\n      this.globalInteract.presentLoading();\n\n      Object.keys(this.praticienFormGroup.value).forEach((key) => {\n        console.log(\"valid\", this.praticienFormGroup.value[key]);\n        const data_updated = {\n          address: this.praticienFormGroup.value[\"address\"],\n          cityBorn: this.praticienFormGroup.value[\"cityBorn\"],\n          countryBorn: this.praticienFormGroup.value[\"countryBorn\"],\n          email: this.praticienFormGroup.value[\"email\"],\n          fatherName: this.praticienFormGroup.value['father_name'] == undefined ? '' : this.praticienFormGroup.value['father_name'],\n          id: this.profile.id,\n          motherName: this.praticienFormGroup.value['father_name'] == undefined ? '' : this.praticienFormGroup.value['mother_name'],\n          nameCity: this.praticienFormGroup.value[\"city\"],\n          nameState: this.praticienFormGroup.value[\"state\"],\n          phone: this.praticienFormGroup.value[\"phone\"],\n        }\n      });\n    } else {\n      console.log(\"NOT valid\", this.praticienFormGroup);\n\n      Object.keys(this.praticienFormGroup.value).forEach((key) => {\n        console.log(\"NOT valid\", this.praticienFormGroup.value[key]);\n      });\n    }\n  }\n  //Comparaison select\n  compareFn(e1: any, e2: any): boolean {\n    return e1 && e2 ? e1.id == e2.id : e1 == e2;\n  }\n  compareFnInv(e1: any, e2: any): boolean {\n    return e1 && e2 ? e1 == e2 : e1.id == e2.id;\n  }\n\n  getProfile() {\n\n    this.praticienSrvc.getProfile().subscribe(async (response: any) => {\n      const data = response.profile;\n      this.centre_name = response.profile[1].centreName;\n      console.log(data);\n      this.profile = data[0];\n\n      this.profile.nameState = data[0].countryFonction;\n      this.globalSrvc.getCity(this.profile.nameState).subscribe(data2 => {\n        this.cities = data2;\n        this.profile.nameCity = data[0].CityFonction;\n      })\n      data[0].countryBorn == null ? this.profile.countryBorn = data[0].countryFonction : this.profile.countryBorn = data[0].countryBorn;\n      this.globalSrvc.getCity(this.profile.countryBorn).subscribe(data3 => {\n        this.citiesBorn = data3;\n        data[0].cityBorn == null ? this.profile.cityBorn = data[0].CityFonction : this.profile.cityBorn = data[0].cityBorn;\n        this.globalInteract.dismissLoading()\n      })\n\n      this.profile.dateOnBorn = data[0].dateBorn.date;\n      this.profile.createdAt = data[0].createdAt.date;\n      // this.profile.date_on_born = new Date(data.date_on_born);\n      this.buildForm(data[0]);\n      // this.type_patient = data[0].typePatient == 1 ? \"Adult\" : \"Enfant\";\n\n    });\n  }\n\n  getKeyByValue(object, value) {\n    return Object.keys(object).find(key => object[key] === value);\n  }\n\n  getCityByCountry(id) {\n    console.log(\"LL: ProfilePage -> getCityByCountry -> id\", id)\n    console.log(\"LL: ProfilePage -> getCityByCountry -> id\", this.profile)\n    this.globalSrvc.getCity(id).subscribe((data) => this.cities = data);\n  }\n  getCityByCountryBorn(id) {\n    console.log(\"LL: ProfilePage -> getCityByCountryBorn -> id\", id)\n    console.log(\"LL: ProfilePage -> getCityByCountryBorn -> id\", this.profile)\n    this.globalSrvc.getCity(id).subscribe((data) => this.citiesBorn = data);\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { ToastController } from '@ionic/angular';\nimport { Observable } from 'rxjs';\nimport { environment } from 'src/environments/environment';\nimport { IUserPraticien } from '../Interfaces/praticien.interface';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GlobalDataService {\n  private url = environment.url_dev;\n  private url_api = environment.url_dev_api;\n  constructor(public http: HttpClient) { }\n\n  getCountry(): Observable<any> {\n    const res = this.http.get<any>(this.url_api + \"country\");\n    res.subscribe(data => {\n      console.log(\"GlobalDataService -> getCountry -> data\", data)\n    })\n    return res;\n  }\n\n  getCity(id): Observable<any> {\n    const res = this.http.get<any>(this.url_api + `city?id=${id}`);\n    console.log(\"GlobalDataService -> constructor -> this.url_api + `city?id=${id}`\", this.url_api + `city?id=${id}`)\n    res.subscribe(data => {\n      console.log(\"GlobalDataService -> getCity -> data\", data)\n    })\n    return res;\n  }\n\n  getCountryByPratictitionerFunction(_idPractitionerFunction) {\n    const res = this.http.post(`${this.url_api}country/fonction`, { id_fonction: _idPractitionerFunction });\n    return res;\n  }\n\n  getCityByPractitionerFunctionAndCountry(_idPractitionerFunction, _idCountry) {\n    const res = this.http.post(`${this.url_api}city/fonction`, { id_fonction: _idPractitionerFunction, id_country: _idCountry });\n    return res;\n  }\n\n  getPractitionerByFunctionCountryAndCity(_idPractitionerFunction, _idCountry, _idCity) {\n    const res = this.http.post(`${this.url_api}praticien/fonction`, { id_fonction: _idPractitionerFunction, id_country: _idCountry, id_city: _idCity });\n    return res;\n  }\n\n  getCenterHealthByCity(_idCity) {\n    const res = this.http.post(`${this.url_api}praticien/centre`, { id: _idCity });\n    return res;\n  }\n\n  getPraticienByCenter(_idCenter) {\n    const res = this.http.post(`${this.url_api}centre/praticien`, { id: _idCenter });\n    return res;\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { IPatient, IRegisterPatient, IVaccinPatient, IProfilePatient, IPatientFamilyGroup } from \"../Interfaces/patient.interface\";\n\nimport { from } from \"rxjs\";\nimport { CONSTANT } from \"src/constant\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { map } from \"rxjs/operators\";\nimport { environment } from \"src/environments/environment\";\nimport { IUserPraticien } from '../Interfaces/praticien.interface';\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class PatientService {\n  private url = environment.url_dev;\n  private url_api = environment.url_dev_api;\n  private url_apip = environment.url_dev;\n  private rdvData;\n  constructor(public http: HttpClient) { }\n\n  // TODO Get Patients\n  getPatients(): Observable<IPatient[]> {\n    return this.http.get<IPatient[]>(this.url + \"patients\");\n    // return this.http.get(CONSTANT.MOCK_DATA_JSON).pipe(\n    //   map((data: any) => {\n    //     return data.mockPatient;\n    //   })\n    // );\n  }\n\n  getAllRdv() {\n    return this.http.get(`${this.url_apip}patients/rdv`);\n    // return this.http.get(CONSTANT.MOCK_DATA_JSON).pipe(\n    //   map((data: any) => {\n    //     return data.mockRdvListPatient;\n    //   })\n    // );\n  }\n\n  getTracksRdv(excludeTracks?) {\n    return this.http.get(CONSTANT.MOCK_DATA_JSON).pipe(\n      map((data: any) => {\n        console.log(\"PatientService -> getTracksRdv -> data\", excludeTracks);\n        return data;\n      })\n    );\n  }\n\n  //TODO : Get Vaccin by patient\n  getVaccinByPatient() {\n    return this.http.get<IVaccinPatient[]>(`${this.url_apip}patients/vaccination`);\n\n    // return this.http.get(CONSTANT.MOCK_DATA_JSON).pipe(\n    //   map((data: any) => {\n    //     return data.mockVaccinPatient;\n    //   })\n    // );\n  }\n\n  registerPatient(data: IRegisterPatient) {\n    return this.http.post<IRegisterPatient>(`${this.url_api}users`, data);\n    Object.keys(data).forEach((element) => {\n      console.log(\"PatientService -> registerPatient -> element\", element);\n      console.log(\"register => \", data[element]);\n    });\n  }\n\n  getProfile() {\n    return this.http.get<IProfilePatient[]>(`${this.url_apip}patient/profile`);\n\n    // return this.http.get(CONSTANT.MOCK_DATA_JSON).pipe(\n    //   map((data: any) => {\n    //     return data.mockPatientProfile;\n    //   })\n    // );\n  }\n\n  updateProfile(data) {\n    return this.http.post(`${this.url_apip}patient/profile/edit`, data);\n  }\n\n  getAssociatedPraticians(): Observable<IUserPraticien[]> {\n    const res = this.http.get<IUserPraticien[]>(`${this.url_apip}patients/praticien`);\n    res.subscribe(data => {\n      console.log(\"PatientService -> constructor -> res\", data);\n    })\n    return res;\n  }\n\n  getFamily() {\n    const res = this.http.get(`${this.url_apip}patients/family`);\n    res.subscribe(data => console.log(\"PatientService -> getFamily -> res\", data))\n    return res;\n  }\n\n  addGroupFamily(nomGroupe) {\n    const data = {\n      designation: nomGroupe,\n    }\n    console.log(\"LL: PatientService -> addGroupFamily -> data\", data)\n    const res = this.http.post(`${this.url_apip}register/group`, data);\n    return res;\n  }\n\n  addGroupFamilyMember(data) {\n    console.log(\"PatientService -> addGroupFamilyMember -> data\", data)\n    const res = this.http.post(`${this.url_api}add/membres`, data);\n    return res;\n  }\n\n  deleteFamilyMember(_idFamily) {\n    const res = this.http.delete(`${this.url_api}family/${_idFamily}`);\n    return res;\n  }\n\n  interventionPraticien(data) {\n    console.log(\"####################LL: PatientService -> interventionPraticien -> data\", data)\n    const res = this.http.post(`${this.url_apip}intervention`, data);\n    return res;\n  }\n\n  chekIfPractitionerIsAssociated(_idPraticien) {\n    const res = this.http.get(`${this.url_apip}patients/check-association/${_idPraticien}`);\n    return res;\n  }\n\n  proposeRdv(data) {\n    const res = this.http.post(`${this.url_apip}add/rdv`, data);\n    return res;\n  }\n\n  cancelRdvProposition(data) {\n    const res = this.http.post(`${this.url_api}cancel/rdv`, data);\n    return res;\n  }\n\n  postVaccinGeneration(_idPraticien) {\n    const res = this.http.post(`${this.url_apip}patient/generation`, { praticien: _idPraticien });\n    return res;\n  }\n\n}\n"],"sourceRoot":"webpack:///"}