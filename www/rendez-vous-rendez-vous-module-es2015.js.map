{"version":3,"sources":["./src/app/pages/patient/rendez-vous/new-rdv/new-rdv.component.html","./src/app/pages/patient/rendez-vous/rendez-vous.page.html","./src/app/pages/patient/rendez-vous/rendrez-vous-filter/rendrez-vous-filter.component.html","./src/app/pages/praticien/rendez-vous/new-rendez-vous/new-rendez-vous.component.html","./src/app/pages/praticien/rendez-vous/rendez-vous.page.html","./src/app/pages/patient/rendez-vous/new-rdv/new-rdv.component.scss","./src/app/pages/patient/rendez-vous/new-rdv/new-rdv.component.ts","./src/app/pages/patient/rendez-vous/rendez-vous-routing.module.ts","./src/app/pages/patient/rendez-vous/rendez-vous.module.ts","./src/app/pages/patient/rendez-vous/rendez-vous.page.scss","./src/app/pages/patient/rendez-vous/rendez-vous.page.ts","./src/app/pages/patient/rendez-vous/rendrez-vous-filter/rendrez-vous-filter.component.scss","./src/app/pages/patient/rendez-vous/rendrez-vous-filter/rendrez-vous-filter.component.ts","./src/app/pages/praticien/rendez-vous/new-rendez-vous/new-rendez-vous.component.scss","./src/app/pages/praticien/rendez-vous/new-rendez-vous/new-rendez-vous.component.ts","./src/app/pages/praticien/rendez-vous/rendez-vous-routing.module.ts","./src/app/pages/praticien/rendez-vous/rendez-vous.module.ts","./src/app/pages/praticien/rendez-vous/rendez-vous.page.scss","./src/app/pages/praticien/rendez-vous/rendez-vous.page.ts","./src/app/services/global-element-injection.service.ts"],"names":[],"mappings":"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","file":"rendez-vous-rendez-vous-module-es2015.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Nouveau rendez-vous</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-grid fixed>\\n  <ion-row>\\n    <ion-col size-md=\\\"6\\\" offset-md=\\\"3\\\">\\n      <ion-card>\\n        <ion-card-header>\\n          <ion-card-title> </ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <form\\n            [formGroup]=\\\"propositionForm\\\"\\n            (ngSubmit)=\\\"propose()\\\"\\n            method=\\\"post\\\"\\n          >\\n            <div class=\\\"mb-14\\\">\\n              <label>Choisir fonction</label>\\n              <ion-select\\n                placeholder=\\\"Select\\\"\\n                formControlName=\\\"fonction\\\"\\n                required\\n                (ionChange)=\\\"\\n                  getCountryByFunction(this.propositionForm.value['fonction'])\\n                \\\"\\n              >\\n                <ion-select-option\\n                  *ngFor=\\\"let item of functions\\\"\\n                  [value]=\\\"item.id\\\"\\n                  >{{ item.NomFonction }}</ion-select-option\\n                >\\n              </ion-select>\\n            </div>\\n\\n            <div class=\\\"mb-14\\\">\\n              <label>Choisir pays</label>\\n              <ion-select\\n                placeholder=\\\"Select\\\"\\n                formControlName=\\\"country\\\"\\n                required\\n                [disabled]=\\\"!this.countries\\\"\\n                (ionChange)=\\\"\\n                  getCityByFunctionAndCountry(\\n                    this.propositionForm.value['fonction'],\\n                    this.propositionForm.value['country']\\n                  )\\n                \\\"\\n              >\\n                <ion-select-option\\n                  *ngFor=\\\"let item of countries\\\"\\n                  [value]=\\\"item.id\\\"\\n                  >{{ item.nameState }}</ion-select-option\\n                >\\n              </ion-select>\\n            </div>\\n\\n            <div class=\\\"mb-14\\\">\\n              <label>Choisir ville</label>\\n              <ion-select\\n                placeholder=\\\"Select\\\"\\n                formControlName=\\\"city\\\"\\n                required\\n                [disabled]=\\\"!this.cities\\\"\\n                (ionChange)=\\\"\\n                  getPractitionerByFunctionCountryAndCity(\\n                    this.propositionForm.value['fonction'],\\n                    this.propositionForm.value['country'],\\n                    this.propositionForm.value['city']\\n                  )\\n                \\\"\\n              >\\n                <ion-select-option\\n                  *ngFor=\\\"let item of cities\\\"\\n                  [value]=\\\"item.id\\\"\\n                  >{{ item.nameCity }}</ion-select-option\\n                >\\n              </ion-select>\\n            </div>\\n\\n            <div class=\\\"mb-14\\\">\\n              <label>Choisir praticien</label>\\n              <ion-select\\n                placeholder=\\\"Select\\\"\\n                formControlName=\\\"praticien\\\"\\n                [disabled]=\\\"!this.praticiens\\\"\\n                required\\n                (ionChange)=\\\"\\n                  chekcPractitionerAssocOrNot(\\n                    this.propositionForm.value['praticien']\\n                  )\\n                \\\"\\n              >\\n                <ion-select-option\\n                  *ngFor=\\\"let item of praticiens\\\"\\n                  [value]=\\\"item.id\\\"\\n                  >{{\\n                    item.firstName.toString() + ' ' + item.lastName.toString()\\n                  }}</ion-select-option\\n                >\\n              </ion-select>\\n            </div>\\n            <div class=\\\"mb-14\\\">\\n              <label>Type de rendez-vous</label>\\n              <ion-select formControlName=\\\"typeRdv\\\" required>\\n                <ion-select-option value=\\\"consultation\\\"\\n                  >Consultation</ion-select-option\\n                >\\n                <ion-select-option value=\\\"intervention\\\"\\n                  >Intervention</ion-select-option\\n                >\\n              </ion-select>\\n            </div>\\n            <div class=\\\"mb-14\\\">\\n              <label>Objet </label>\\n              <ion-input\\n                type=\\\"text\\\"\\n                required\\n                formControlName=\\\"description\\\"\\n              ></ion-input>\\n            </div>\\n            <!-- <div *ngIf=\\\"after_praticien_choice\\\" class=\\\"checkBox\\\"> -->\\n            <div *ngIf=\\\"after_praticien_choice\\\" class=\\\"checkBox\\\">\\n              <div class=\\\"mb-14\\\" *ngIf=\\\"showCheckBoxAssoc == false\\\">\\n                <ion-item class=\\\"status\\\" fill=\\\"outline\\\" lines=\\\"none\\\">\\n                  <ion-checkbox\\n                    formControlName=\\\"chekcboxAssoc\\\"\\n                    value\\n                  ></ion-checkbox>\\n                  &nbsp;&nbsp;\\n                  <label>choisir comme associé ?</label>\\n                </ion-item>\\n              </div>\\n              <div *ngIf=\\\"showCheckBoxAssoc == true\\\">\\n                <ion-button\\n                  class=\\\"status\\\"\\n                  color=\\\"sgreen\\\"\\n                  fill=\\\"outline\\\"\\n                  expand=\\\"block\\\"\\n                  slot=\\\"end\\\"\\n                >\\n                  Praticien associé\\n                </ion-button>\\n              </div>\\n            </div>\\n\\n            <!-- <div class=\\\"mb-14\\\">\\n              <label>Propose une date </label>\\n              <ion-datetime\\n                display-format=\\\"MMM DD, YYYY\\\"\\n                formControlName=\\\"dateRdv\\\"\\n                required\\n              ></ion-datetime>\\n            </div>\\n\\n            <div class=\\\"mb-14\\\">\\n              <label>Propose un horaire</label>\\n              <ion-datetime\\n                display-format=\\\"h:mm A\\\"\\n                picker-format=\\\"h:mm A\\\"\\n                formControlName=\\\"heureRdv\\\"\\n                required\\n              ></ion-datetime>\\n            </div> -->\\n\\n            <ion-row>\\n              <ion-col>\\n                <ion-button color=\\\"sred\\\" expand=\\\"block\\\" (click)=\\\"dismiss()\\\">\\n                  <ion-icon slot=\\\"start\\\" name=\\\"\\\"> x </ion-icon\\n                  >Cancel</ion-button\\n                >\\n                <legend class=\\\"ion-text-center\\\"></legend>\\n                <ion-button type=\\\"submit\\\" color=\\\"sgreen\\\" expand=\\\"block\\\"\\n                  ><ion-icon slot=\\\"start\\\" name=\\\"save-outline\\\"></ion-icon>\\n                  Save\\n                </ion-button>\\n              </ion-col>\\n            </ion-row>\\n          </form>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-col>\\n  </ion-row>\\n</ion-grid>\\n\";","export default \"<ion-header translucent=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons *ngIf=\\\"!ios && !showSearchbar\\\" slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-menu-button *ngIf=\\\"ios\\\"></ion-menu-button>\\n\\n    <!-- <ion-segment *ngIf=\\\"ios\\\" [(ngModel)]=\\\"segment\\\" (ionChange)=\\\"showAccepted()\\\">\\n      <ion-segment-button value=\\\"all\\\" color=\\\"sgreen\\\"> All </ion-segment-button>\\n      <ion-segment-button value=\\\"favorites\\\" color=\\\"sgreen\\\">\\n        Accepté\\n      </ion-segment-button>\\n    </ion-segment> -->\\n    <ion-title *ngIf=\\\"!ios && !showSearchbar\\\">Rendez-vous</ion-title>\\n    <ion-searchbar\\n      *ngIf=\\\"showSearchbar\\\"\\n      showCancelButton=\\\"always\\\"\\n      [(ngModel)]=\\\"queryText\\\"\\n      (ionChange)=\\\"updateRdvList()\\\"\\n      (ionCancel)=\\\"showSearchbar = false\\\"\\n      placeholder=\\\"Rechercher\\\"\\n    ></ion-searchbar>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button *ngIf=\\\"!ios && !showSearchbar\\\" (click)=\\\"showSearchbar = true\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"search\\\"></ion-icon>\\n      </ion-button>\\n      <ion-button *ngIf=\\\"!showSearchbar\\\" (click)=\\\"presentFilter()\\\">\\n        <span *ngIf=\\\"ios\\\">Filtrer</span>\\n        <span *ngIf=\\\"!ios\\\">\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"options\\\"></ion-icon>\\n        </span>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n  <!-- <ion-toolbar *ngIf=\\\"!ios\\\">\\n    <ion-segment [(ngModel)]=\\\"segment\\\" (ionChange)=\\\"showAccepted()\\\">\\n      <ion-segment-button value=\\\"all\\\"> Tout </ion-segment-button>\\n      <ion-segment-button value=\\\"accepted\\\"> Accépté </ion-segment-button>\\n    </ion-segment>\\n  </ion-toolbar> -->\\n</ion-header>\\n\\n<ion-content fullscreen=\\\"true\\\">\\n  <ion-header collapse=\\\"condense\\\">\\n    <ion-toolbar>\\n      <ion-title size=\\\"large\\\">Rendez-vous</ion-title>\\n    </ion-toolbar>\\n    <ion-toolbar>\\n      <ion-searchbar\\n        [(ngModel)]=\\\"queryText\\\"\\n        (ionChange)=\\\"filterItems($event)\\\"\\n        placeholder=\\\"Search\\\"\\n      ></ion-searchbar>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n  <ion-list #scheduleList [hidden]=\\\"shownSessions === 0\\\">\\n    <ion-item-group *ngFor=\\\"let rdv of rdvFiltered\\\">\\n      <ion-item-divider sticky>\\n        <ion-label class=\\\"ion-text-center\\\">\\n          {{ rdv.date | date:\\\"MMM dd, yyyy\\\"}}\\n        </ion-label>\\n      </ion-item-divider>\\n\\n      <ion-item-sliding\\n        *ngFor=\\\"let eachRdv of rdv.groups\\\"\\n        #slidingItem\\n        [attr.track]=\\\"eachRdv.type | lowercase\\\"\\n      >\\n        <ion-item *ngIf=\\\"eachRdv.show === true\\\">\\n          <ion-grid>\\n            <ion-row (click)=\\\"alert()\\\">\\n              <ion-col size=\\\"12\\\">\\n                <ion-label class=\\\"information\\\">\\n                  <ion-row>\\n                    <ion-col size=\\\"7\\\">\\n                      <h2 class=\\\"makeBoldAndLarge\\\">{{eachRdv.type}}</h2>\\n                    </ion-col>\\n                    <ion-col class=\\\"middle\\\" size=\\\"2\\\" offset-md=\\\"2\\\">\\n                      <ion-button\\n                        *ngIf=\\\"this.checkStatus(eachRdv._status, eachRdv.etat) === this.REALIZED\\\"\\n                        class=\\\"status\\\"\\n                        color=\\\"sgreen\\\"\\n                        expand=\\\"block\\\"\\n                        fill=\\\"outline\\\"\\n                      >\\n                        REALISE\\n                      </ion-button>\\n\\n                      <ion-button\\n                        *ngIf=\\\"this.checkStatus(eachRdv._status, eachRdv.etat) === this.CANCELED\\\"\\n                        class=\\\"status\\\"\\n                        color=\\\"sred\\\"\\n                        expand=\\\"block\\\"\\n                        fill=\\\"outline\\\"\\n                      >\\n                        ANNULE\\n                      </ion-button>\\n\\n                      <ion-button\\n                        *ngIf=\\\"this.checkStatus(eachRdv._status, eachRdv.etat) === this.SCHEDULED\\\"\\n                        class=\\\"status\\\"\\n                        color=\\\"primary\\\"\\n                        expand=\\\"block\\\"\\n                        fill=\\\"outline\\\"\\n                      >\\n                        PLANIFIER\\n                      </ion-button>\\n\\n                      <ion-button\\n                        *ngIf=\\\"this.checkStatus(eachRdv._status, eachRdv.etat) === this.PENDING\\\"\\n                        class=\\\"status\\\"\\n                        color=\\\"sorange\\\"\\n                        expand=\\\"block\\\"\\n                        fill=\\\"outline\\\"\\n                      >\\n                        EN ATTENTE\\n                      </ion-button>\\n                    </ion-col>\\n                  </ion-row>\\n                  <ion-row>\\n                    <p>{{eachRdv.firstName + \\\" \\\" + eachRdv.lastName}}</p>\\n                    <p>{{eachRdv.centreName}}</p>\\n                  </ion-row>\\n                </ion-label>\\n              </ion-col>\\n            </ion-row>\\n            <ion-row\\n              *ngIf=\\\"this.checkStatus(eachRdv._status, eachRdv.etat) === this.SCHEDULED || this.checkStatus(eachRdv._status, eachRdv.etat) === this.PENDING\\\"\\n            >\\n              <ion-col class=\\\"btn-cnfrm\\\">\\n                <ion-button\\n                  (click)=\\\"alertRemoveRdv(eachRdv.id, eachRdv.type)\\\"\\n                  expand=\\\"block\\\"\\n                  color=\\\"sred\\\"\\n                >\\n                  <ion-icon name=\\\"close-circle-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                  <ion-label>CANCEL</ion-label>\\n                </ion-button>\\n              </ion-col>\\n            </ion-row>\\n          </ion-grid>\\n        </ion-item>\\n      </ion-item-sliding>\\n    </ion-item-group>\\n  </ion-list>\\n\\n  <ion-list-header [hidden]=\\\"rdvShow.size != 0\\\">\\n    No Sessions Found\\n  </ion-list-header>\\n\\n  <ion-fab slot=\\\"fixed\\\" vertical=\\\"bottom\\\" horizontal=\\\"end\\\" #fab>\\n    <ion-fab-button color=\\\"sgreen\\\" (click)=\\\"openNewRdvModal()\\\">\\n      <ion-icon name=\\\"add\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n</ion-content>\\n\";","export default \"<ion-header translucent=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button *ngIf=\\\"ios\\\" (click)=\\\"dismiss()\\\">Cancel</ion-button>\\n      <ion-button *ngIf=\\\"!ios\\\" (click)=\\\"selectAll(false)\\\">Reset</ion-button>\\n    </ion-buttons>\\n\\n    <ion-title class=\\\"ion-text-center\\\"> Filter Track Sessions </ion-title>\\n\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"applyFilters()\\\" strong>Done</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list [lines]=\\\"ios ? 'inset' : 'full'\\\">\\n    <ion-list-header>Tracks</ion-list-header>\\n    <ion-card>\\n      <ion-card-title>Types</ion-card-title>\\n      <ion-card-content>\\n        <ion-item\\n          *ngFor=\\\"let track of tracksTypes\\\"\\n          [attr.track]=\\\"track.name | lowercase\\\"\\n          lines=\\\"none\\\"\\n        >\\n          <ion-icon\\n            *ngIf=\\\"ios\\\"\\n            slot=\\\"start\\\"\\n            [name]=\\\"track.icon\\\"\\n            color=\\\"medium\\\"\\n          ></ion-icon>\\n          <ion-label>{{ track.name }}</ion-label>\\n          <ion-checkbox\\n            [(ngModel)]=\\\"track.isChecked\\\"\\n            color=\\\"sgreen\\\"\\n          ></ion-checkbox>\\n        </ion-item>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <ion-card *ngIf=\\\"this.trackStatsMock.length != 0\\\">\\n      <ion-card-title>States</ion-card-title>\\n      <ion-card-content>\\n        <ion-item\\n          *ngFor=\\\"let track of tracksStates\\\"\\n          [attr.track]=\\\"track.name | lowercase\\\"\\n          lines=\\\"none\\\"\\n        >\\n          <ion-icon\\n            *ngIf=\\\"ios\\\"\\n            slot=\\\"start\\\"\\n            [name]=\\\"track.icon\\\"\\n            color=\\\"medium\\\"\\n          ></ion-icon>\\n          <ion-label>{{ track.name }}</ion-label>\\n          <ion-checkbox\\n            [(ngModel)]=\\\"track.isChecked\\\"\\n            color=\\\"sred\\\"\\n          ></ion-checkbox>\\n        </ion-item>\\n      </ion-card-content>\\n    </ion-card>\\n  </ion-list>\\n</ion-content>\\n\\n<ion-footer translucent=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"selectAll(false)\\\">Deselect All</ion-button>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"selectAll(true)\\\">Select All</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-footer>\\n\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Création de rendez-vous</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-grid fixed>\\n  <ion-row>\\n    <ion-col size-md=\\\"6\\\" offset-md=\\\"3\\\">\\n      <ion-card>\\n        <ion-card-header>\\n          <ion-card-title> </ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <form\\n            [formGroup]=\\\"propositionForm\\\"\\n            (ngSubmit)=\\\"propose()\\\"\\n            method=\\\"post\\\"\\n          >\\n            <div class=\\\"mb-14\\\">\\n              <label>choisi un patient</label>\\n              <ion-select\\n                placeholder=\\\"Select\\\"\\n                formControlName=\\\"patient\\\"\\n                required\\n              >\\n                <ion-select-option\\n                  *ngFor=\\\"let item of patients\\\"\\n                  [value]=\\\"item.id\\\"\\n                  >{{\\n                    item.firstName.toString() + ' ' + item.lastName.toString()\\n                  }}</ion-select-option\\n                >\\n                <!-- <ion-select-option></ion-select-option> -->\\n              </ion-select>\\n              <!-- <small\\n                class=\\\"form-text red-color\\\"\\n                *ngIf=\\\"isFieldInvalid(propositionForm, 'patient')\\\"\\n                >This field is required</small\\n              > -->\\n            </div>\\n\\n            <div class=\\\"mb-14\\\">\\n              <label>Propose une date </label>\\n              <ion-datetime\\n                display-format=\\\"MMM DD, YYYY\\\"\\n                formControlName=\\\"dateRdv\\\"\\n                required\\n              ></ion-datetime>\\n              <!-- <small\\n                class=\\\"form-text red-color\\\"\\n                *ngIf=\\\"isFieldInvalid(propositionForm, 'dateRdv')\\\"\\n                >This field is required</small\\n              > -->\\n            </div>\\n\\n            <div class=\\\"mb-14\\\">\\n              <label>Propose un horaire</label>\\n              <ion-datetime\\n                display-format=\\\"h:mm A\\\"\\n                picker-format=\\\"h:mm A\\\"\\n                formControlName=\\\"heureRdv\\\"\\n                required\\n              ></ion-datetime>\\n              <!-- <small\\n                class=\\\"form-text red-color\\\"\\n                *ngIf=\\\"isFieldInvalid(propositionForm, 'heureRdv')\\\"\\n                >This field is required</small\\n              > -->\\n            </div>\\n\\n            <div class=\\\"mb-14\\\">\\n              <label>Description du rendez-vous</label>\\n              <ion-input\\n                type=\\\"text\\\"\\n                required\\n                formControlName=\\\"description\\\"\\n              ></ion-input\\n              ><!-- <small\\n                class=\\\"form-text red-color\\\"\\n                *ngIf=\\\"isFieldInvalid(propositionForm, 'description')\\\"\\n                >This field is required</small\\n              > -->\\n            </div>\\n\\n            <ion-row>\\n              <ion-col>\\n                <ion-button color=\\\"sred\\\" expand=\\\"block\\\" (click)=\\\"dismiss()\\\">\\n                  <ion-icon slot=\\\"start\\\" name=\\\"\\\"> x </ion-icon\\n                  >Cancel</ion-button\\n                >\\n                <legend class=\\\"ion-text-center\\\"></legend>\\n                <ion-button type=\\\"submit\\\" color=\\\"sgreen\\\" expand=\\\"block\\\"\\n                  ><ion-icon slot=\\\"start\\\" name=\\\"save-outline\\\"></ion-icon>\\n                  Save\\n                </ion-button>\\n              </ion-col>\\n            </ion-row>\\n          </form>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-col>\\n  </ion-row>\\n</ion-grid>\\n\";","export default \"<ion-header translucent=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons *ngIf=\\\"!ios && !showSearchbar\\\" slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-menu-button *ngIf=\\\"ios\\\"></ion-menu-button>\\n    <ion-title *ngIf=\\\"!ios && !showSearchbar\\\">Rendez-vous</ion-title>\\n    <ion-searchbar\\n      *ngIf=\\\"showSearchbar\\\"\\n      showCancelButton=\\\"always\\\"\\n      [(ngModel)]=\\\"queryText\\\"\\n      (ionChange)=\\\"updateRdvList()\\\"\\n      (ionCancel)=\\\"showSearchbar = false\\\"\\n      placeholder=\\\"Rechercher\\\"\\n    ></ion-searchbar>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button *ngIf=\\\"!ios && !showSearchbar\\\" (click)=\\\"showSearchbar = true\\\">\\n        <ion-icon slot=\\\"end\\\" name=\\\"search\\\"></ion-icon>\\n      </ion-button>\\n      <ion-button *ngIf=\\\"!showSearchbar\\\" (click)=\\\"presentFilter()\\\">\\n        <span *ngIf=\\\"ios\\\">Filtrer</span>\\n        <span *ngIf=\\\"!ios\\\">\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"options\\\"></ion-icon>\\n        </span>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen=\\\"true\\\">\\n  <ion-header collapse=\\\"condense\\\">\\n    <ion-toolbar>\\n      <ion-title size=\\\"large\\\">Rendez-vous</ion-title>\\n    </ion-toolbar>\\n    <ion-toolbar>\\n      <ion-searchbar\\n        [(ngModel)]=\\\"queryText\\\"\\n        (ionChange)=\\\"filterItems($event)\\\"\\n        placeholder=\\\"Search\\\"\\n      ></ion-searchbar>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n  <ion-list #scheduleList [hidden]=\\\"shownSessions === 0\\\">\\n    <ion-item-group *ngFor=\\\"let rdv of rdvFiltered\\\">\\n      <ion-item-divider sticky>\\n        <ion-label class=\\\"ion-text-center\\\">\\n          {{ rdv.date | date:\\\"MMM dd, yyyy\\\"}}\\n        </ion-label>\\n      </ion-item-divider>\\n\\n      <ion-item-sliding\\n        *ngFor=\\\"let eachRdv of rdv.groups\\\"\\n        #slidingItem\\n        [attr.track]=\\\"eachRdv.type | lowercase\\\"\\n      >\\n        <ion-item *ngIf=\\\"eachRdv.show === true\\\">\\n          <ion-grid>\\n            <ion-row (click)=\\\"alert()\\\">\\n              <ion-col size=\\\"12\\\">\\n                <ion-label class=\\\"information\\\">\\n                  <ion-row>\\n                    <ion-col size=\\\"7\\\">\\n                      <h2 class=\\\"makeBoldAndLarge\\\">{{eachRdv.type}}</h2>\\n                    </ion-col>\\n                    <ion-col class=\\\"middle\\\" size=\\\"2\\\" offset-md=\\\"2\\\">\\n                      <ion-button\\n                        *ngIf=\\\"this.checkStatus(eachRdv._status, eachRdv.etat) === this.REALIZED\\\"\\n                        class=\\\"status\\\"\\n                        color=\\\"sgreen\\\"\\n                        expand=\\\"block\\\"\\n                        fill=\\\"outline\\\"\\n                      >\\n                        réalisé\\n                      </ion-button>\\n\\n                      <ion-button\\n                        *ngIf=\\\"this.checkStatus(eachRdv._status, eachRdv.etat) === this.CANCELED\\\"\\n                        class=\\\"status\\\"\\n                        color=\\\"sred\\\"\\n                        expand=\\\"block\\\"\\n                        fill=\\\"outline\\\"\\n                      >\\n                        annulé\\n                      </ion-button>\\n\\n                      <ion-button\\n                        *ngIf=\\\"this.checkStatus(eachRdv._status, eachRdv.etat) === this.SCHEDULED\\\"\\n                        class=\\\"status\\\"\\n                        color=\\\"primary\\\"\\n                        expand=\\\"block\\\"\\n                        fill=\\\"outline\\\"\\n                      >\\n                        planifié\\n                      </ion-button>\\n\\n                      <ion-button\\n                        *ngIf=\\\"this.checkStatus(eachRdv._status, eachRdv.etat) === this.PENDING\\\"\\n                        class=\\\"status\\\"\\n                        color=\\\"sorange\\\"\\n                        expand=\\\"block\\\"\\n                        fill=\\\"outline\\\"\\n                      >\\n                        en attente\\n                      </ion-button>\\n                    </ion-col>\\n                  </ion-row>\\n                  <ion-row>\\n                    <p>{{eachRdv.firstName + \\\" \\\" + eachRdv.lastName}}</p>\\n                    <p>{{eachRdv.centreName}}</p>\\n                  </ion-row>\\n                </ion-label>\\n              </ion-col>\\n            </ion-row>\\n            <ion-row\\n              *ngIf=\\\"this.checkStatus(eachRdv._status, eachRdv.etat) === this.PENDING\\\"\\n            >\\n              <ion-col class=\\\"btn-cnfrm\\\">\\n                <ion-button\\n                  (click)=\\\"alertRemoveRdv(eachRdv.id, eachRdv.type)\\\"\\n                  expand=\\\"block\\\"\\n                  color=\\\"primary\\\"\\n                >\\n                  <ion-icon name=\\\"close-circle-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                  <ion-label>organisé</ion-label>\\n                </ion-button>\\n                <ion-button\\n                  (click)=\\\"alertRemoveRdv(eachRdv.id, eachRdv.type)\\\"\\n                  expand=\\\"block\\\"\\n                  color=\\\"sred\\\"\\n                >\\n                  <ion-icon name=\\\"close-circle-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                  <ion-label>annulé</ion-label>\\n                </ion-button>\\n              </ion-col>\\n            </ion-row>\\n            <ion-row\\n              *ngIf=\\\"this.checkStatus(eachRdv._status, eachRdv.etat) === this.SCHEDULED \\\"\\n            >\\n              <ion-col class=\\\"btn-cnfrm\\\">\\n                <ion-button\\n                  (click)=\\\"alertRemoveRdv(eachRdv.id, eachRdv.type)\\\"\\n                  expand=\\\"block\\\"\\n                  color=\\\"sgreen\\\"\\n                >\\n                  <ion-icon name=\\\"close-circle-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                  <ion-label>réalisé</ion-label>\\n                </ion-button>\\n              </ion-col>\\n            </ion-row>\\n          </ion-grid>\\n        </ion-item>\\n      </ion-item-sliding>\\n    </ion-item-group>\\n  </ion-list>\\n\\n  <ion-list-header [hidden]=\\\"rdvShow.size != 0\\\">\\n    No Sessions Found\\n  </ion-list-header>\\n\\n  <ion-fab slot=\\\"fixed\\\" vertical=\\\"bottom\\\" horizontal=\\\"end\\\" #fab>\\n    <ion-fab-button color=\\\"sgreen\\\" (click)=\\\"openNewRdvModal()\\\">\\n      <ion-icon name=\\\"add\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n</ion-content>\\n\";","export default \".checkBox {\\n  display: flex;\\n  align-items: flex-end;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcGF0aWVudC9yZW5kZXotdm91cy9uZXctcmR2L25ldy1yZHYuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0EscUJBQUE7QUFDRiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3BhdGllbnQvcmVuZGV6LXZvdXMvbmV3LXJkdi9uZXctcmR2LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNoZWNrQm94IHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcclxufVxyXG4iXX0= */\";","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ModalController, NavController, NavParams } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\nimport { IPatient, IRdvPatient } from 'src/app/Interfaces/patient.interface';\nimport { IUserPraticien } from 'src/app/Interfaces/praticien.interface';\nimport { GlobalInteraction } from 'src/app/pages/global.interaction';\nimport { GlobalDataService } from 'src/app/services/global-data.service';\nimport { PatientService } from 'src/app/services/patient.service';\nimport { PraticienService } from 'src/app/services/praticien.service';\n\n@Component({\n  selector: 'app-new-rdv',\n  templateUrl: './new-rdv.component.html',\n  styleUrls: ['./new-rdv.component.scss'],\n})\nexport class NewRdvComponent implements OnInit {\n  @Input() test: String;\n  @Input() functions;\n\n  public countries;\n  public cities;\n  praticiens: IUserPraticien[];\n  public propositionForm: FormGroup;\n  showCheckBoxAssoc = false;\n  after_praticien_choice = false;\n\n  selected: any;\n  constructor(\n    private praticienSrv: PraticienService,\n    private patientServc: PatientService,\n    private navCtrl: NavController,\n    private navParms: NavParams,\n    private modalCtrl: ModalController,\n    private storage: Storage,\n    private globalDataSrvc: GlobalDataService,\n    private globalInt: GlobalInteraction\n  ) { }\n\n  async ngOnInit() {\n    this.after_praticien_choice = false;\n\n    // this.praticiens = this.navParms.get('praticiens');\n    this.navParms.get('functions') != undefined\n      ? (this.functions = this.navParms.get('functions'))\n      : this.getAllfonction();\n\n    this.propositionForm = new FormGroup({\n      praticien: new FormControl({ value: this.praticiens, disabled: false }, [\n        Validators.required,\n      ]),\n      fonction: new FormControl({ value: this.functions, disabled: false }, [\n        Validators.required,\n      ]),\n      country: new FormControl({ value: this.countries, disabled: false }, [\n        Validators.required,\n      ]),\n      city: new FormControl({ value: this.cities, disabled: false }, [\n        Validators.required,\n      ]),\n      typeRdv: new FormControl('', [Validators.required]),\n      // dateRdv: new FormControl('', [Validators.required]),\n      // heureRdv: new FormControl('', [Validators.required]),\n      description: new FormControl(),\n      chekcboxAssoc: new FormControl(),\n    });\n  }\n\n  isFieldInvalid(dataFormStep, field: string) {\n    return (\n      (!dataFormStep.get(field).valid && dataFormStep.get(field).touched) ||\n      (dataFormStep.get(field).untouched && !dataFormStep.get(field).valid)\n    );\n  }\n  getAllfonction() {\n    this.after_praticien_choice = false;\n    this.praticienSrv.getPraticienFunctions().subscribe((data) => {\n      this.functions = data;\n    });\n  }\n\n  getCountryByFunction(_idFunction) {\n    this.globalDataSrvc\n      .getCountryByPratictitionerFunction(_idFunction)\n      .subscribe((data: []) => {\n        console.log(\n          'LL: NewRdvComponent -> getCountryByFunction -> data',\n          data\n        );\n        if (data.length == 0) {\n          const VIDE = \"Il n'y a pas de praticien présent dans ce pays\";\n          console.warn(\n            'LL: NewRdvComponent -> getCountryByFunction -> VIDE',\n            VIDE\n          );\n          this.globalInt.presentToast(VIDE);\n        }\n        this.countries = data;\n      });\n  }\n\n  getCityByFunctionAndCountry(_idFunction, _idCountry) {\n    this.after_praticien_choice = false;\n    this.globalDataSrvc\n      .getCityByPractitionerFunctionAndCountry(_idFunction, _idCountry)\n      .subscribe((data: []) => {\n        console.log(\n          'LL: NewRdvComponent -> getCityByFunctionAndCountry -> data',\n          data\n        );\n\n        if (data.length == 0) {\n          const VIDE = \"Il n'y a pas de praticien présent dans ce pays\";\n          console.warn(\n            'LL: NewRdvComponent -> getCityByFunctionAndCountry -> VIDE',\n            VIDE\n          );\n          this.globalInt.presentToast(VIDE);\n        }\n        this.cities = data;\n      });\n  }\n\n  getPractitionerByFunctionCountryAndCity(_idFunction, _idCountry, _idCity) {\n    this.after_praticien_choice = false;\n    this.globalDataSrvc\n      .getPractitionerByFunctionCountryAndCity(_idFunction, _idCountry, _idCity)\n      .subscribe((data: []) => {\n        console.log(\n          'LL: NewRdvComponent -> getPractitionerByFunctionCountryAndCity -> data',\n          data\n        );\n\n        if (data.length == 0) {\n          const VIDE = \"Il n'y a pas de praticien présent dans ce pays\";\n          console.warn(\n            'LL: NewRdvComponent -> getPractitionerByFunctionCountryAndCity -> VIDE',\n            VIDE\n          );\n          this.globalInt.presentToast(VIDE);\n        }\n        this.praticiens = data;\n      });\n  }\n\n  chekcPractitionerAssocOrNot(_idPraticien) {\n    const OK = 'OK';\n    this.patientServc\n      .chekIfPractitionerIsAssociated(_idPraticien)\n      .subscribe((isOK: { status }) => {\n        console.log(\"LL: NewRdvComponent -> chekcPractitionerAssocOrNot -> isOK\", isOK)\n        if (isOK.status === OK) {\n          this.showCheckBoxAssoc = true;\n        } else {\n          this.showCheckBoxAssoc = false;\n        }\n        this.after_praticien_choice = true;\n      });\n  }\n  async propose() {\n    // const prop: IRdvPatient = {\n    //   description: this.propositionForm.value.description,\n    //   praticien: this.propositionForm.value.praticien,\n    //   // typeRdv: this.propositionForm.value.typeRdv,\n    //   // dateRdv: this.propositionForm.value.dateRdv,\n    //   // heureRdv: this.propositionForm.value.heureRdv,\n    //   // id: await this.praticienSrvc.getUserIDByStorage(),\n    //   id: 0,\n    // };\n\n    if (this.propositionForm.valid) {\n      let data_to_send;\n      if (this.propositionForm.value['chekcboxAssoc'] == true) {\n\n        data_to_send = {\n          praticien: this.propositionForm.value['praticien'],\n          typeRdv: this.propositionForm.value['typeRdv'],\n          objet: this.propositionForm.value['description'],\n          Associer: 1,\n        };\n      } else {\n        data_to_send = {\n          praticien: this.propositionForm.value['praticien'],\n          typeRdv: this.propositionForm.value['typeRdv'],\n          objet: this.propositionForm.value['description'],\n        };\n      }\n      console.error(\"###################=>  LL: NewRdvComponent -> propose -> data_to_send\", data_to_send)\n      this.patientServc.proposeRdv(data_to_send).subscribe((dataV) => {\n        console.log(\"###################=> LL: NewRdvComponent -> propose -> data\", dataV)\n        this.backToList();\n      })\n    } else {\n      console.log(' not valid ');\n      this.globalInt.presentToast('completé les champs !!');\n    }\n  }\n\n  backToList() {\n    this.dismiss();\n    this.navCtrl.navigateRoot('/patient/rendez-vous');\n  }\n\n  async cancel() {\n    console.log(' cancel ');\n    this.backToList();\n  }\n\n  dismiss() {\n    // using the injected ModalController this page\n    // can \"dismiss\" itself and optionally pass back data\n    this.modalCtrl.dismiss({\n      dismissed: true,\n    });\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { RendezVousPage } from \"./rendez-vous.page\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: RendezVousPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RendezVousPageRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { RendezVousPageRoutingModule } from \"./rendez-vous-routing.module\";\n\nimport { RendezVousPage } from \"./rendez-vous.page\";\nimport { RendrezVousFilterComponent } from \"./rendrez-vous-filter/rendrez-vous-filter.component\";\nimport { NewRdvComponent } from \"./new-rdv/new-rdv.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RendezVousPageRoutingModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [RendezVousPage, RendrezVousFilterComponent, NewRdvComponent],\n})\nexport class RendezVousPageModule {}\n","export default \"ion-fab-button {\\n  --background: var(--ion-color-step-150, #fff);\\n  --background-hover: var(--ion-color-step-200, #f2f2f2);\\n  --background-focused: var(--ion-color-step-250, #d9d9d9);\\n  --color: var(--ion-color-primary, #3880ff);\\n}\\n\\n/*\\n     * Material Design uses the ripple for activated\\n     * so only style the iOS activated background\\n     */\\n\\n.ios ion-fab-button {\\n  --background-activated: var(--ion-color-step-250, #d9d9d9);\\n}\\n\\nion-item-sliding[track=ionic] ion-label.information {\\n  border-left: 2px solid var(--ion-color-primary);\\n  padding-left: 3px;\\n}\\n\\nion-item-sliding[track=vaccination] ion-label.information {\\n  border-left: 2px solid #8e8d93;\\n  padding-left: 3px;\\n}\\n\\nion-item-sliding[track=consultation] ion-label.information {\\n  border-left: 2px solid #fed035;\\n  padding-left: 3px;\\n}\\n\\nion-item-sliding[track=intervention] ion-label.information {\\n  border-left: 2px solid #6600cc;\\n  padding-left: 3px;\\n}\\n\\n.status {\\n  text-align: right;\\n  width: 90px;\\n}\\n\\n.middle {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.btn-cnfrm {\\n  display: flex;\\n  justify-content: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcGF0aWVudC9yZW5kZXotdm91cy9yZW5kZXotdm91cy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSw2Q0FBQTtFQUNBLHNEQUFBO0VBQ0Esd0RBQUE7RUFFQSwwQ0FBQTtBQUFGOztBQUdBOzs7TUFBQTs7QUFJQTtFQUNFLDBEQUFBO0FBQUY7O0FBWUk7RUFDRSwrQ0FBQTtFQUNBLGlCQUFBO0FBVE47O0FBT0k7RUFDRSw4QkFBQTtFQUNBLGlCQUFBO0FBSk47O0FBRUk7RUFDRSw4QkFBQTtFQUNBLGlCQUFBO0FBQ047O0FBSEk7RUFDRSw4QkFBQTtFQUNBLGlCQUFBO0FBTU47O0FBREE7RUFDRSxpQkFBQTtFQUNBLFdBQUE7QUFJRjs7QUFEQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtBQUlGOztBQURBO0VBQ0UsYUFBQTtFQUNBLHVCQUFBO0FBSUYiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9wYXRpZW50L3JlbmRlei12b3VzL3JlbmRlei12b3VzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1mYWItYnV0dG9uIHtcclxuICAtLWJhY2tncm91bmQ6IHZhcigtLWlvbi1jb2xvci1zdGVwLTE1MCwgI2ZmZik7XHJcbiAgLS1iYWNrZ3JvdW5kLWhvdmVyOiB2YXIoLS1pb24tY29sb3Itc3RlcC0yMDAsICNmMmYyZjIpO1xyXG4gIC0tYmFja2dyb3VuZC1mb2N1c2VkOiB2YXIoLS1pb24tY29sb3Itc3RlcC0yNTAsICNkOWQ5ZDkpO1xyXG5cclxuICAtLWNvbG9yOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSwgIzM4ODBmZik7XHJcbn1cclxuXHJcbi8qXHJcbiAgICAgKiBNYXRlcmlhbCBEZXNpZ24gdXNlcyB0aGUgcmlwcGxlIGZvciBhY3RpdmF0ZWRcclxuICAgICAqIHNvIG9ubHkgc3R5bGUgdGhlIGlPUyBhY3RpdmF0ZWQgYmFja2dyb3VuZFxyXG4gICAgICovXHJcbi5pb3MgaW9uLWZhYi1idXR0b24ge1xyXG4gIC0tYmFja2dyb3VuZC1hY3RpdmF0ZWQ6IHZhcigtLWlvbi1jb2xvci1zdGVwLTI1MCwgI2Q5ZDlkOSk7XHJcbn1cclxuXHJcbiRjYXRlZ29yaWVzOiAoXHJcbiAgaW9uaWM6IHZhcigtLWlvbi1jb2xvci1wcmltYXJ5KSxcclxuICB2YWNjaW5hdGlvbjogIzhlOGQ5MyxcclxuICBjb25zdWx0YXRpb246ICNmZWQwMzUsXHJcbiAgaW50ZXJ2ZW50aW9uOiAjNjYwMGNjLFxyXG4pO1xyXG5cclxuQGVhY2ggJHRyYWNrLCAkdmFsdWUgaW4gbWFwLXJlbW92ZSgkY2F0ZWdvcmllcykge1xyXG4gIGlvbi1pdGVtLXNsaWRpbmdbdHJhY2s9XCIjeyR0cmFja31cIl0gaW9uLWxhYmVsIHtcclxuICAgICYuaW5mb3JtYXRpb24ge1xyXG4gICAgICBib3JkZXItbGVmdDogMnB4IHNvbGlkICR2YWx1ZTtcclxuICAgICAgcGFkZGluZy1sZWZ0OiAzcHg7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4uc3RhdHVzIHtcclxuICB0ZXh0LWFsaWduOiByaWdodDtcclxuICB3aWR0aDogOTBweDtcclxufVxyXG5cclxuLm1pZGRsZSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4uYnRuLWNuZnJtIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcbiJdfQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { IUserPraticien } from 'src/app/Interfaces/praticien.interface';\nimport { RendrezVousFilterComponent } from './rendrez-vous-filter/rendrez-vous-filter.component';\nimport {\n  AlertController,\n  LoadingController,\n  ModalController,\n  IonRouterOutlet,\n  ToastController,\n  Config,\n  IonList,\n} from '@ionic/angular';\nimport { PraticienService } from 'src/app/services/praticien.service';\nimport { Router } from '@angular/router';\nimport { PatientService } from 'src/app/services/patient.service';\nimport { NewRdvComponent } from './new-rdv/new-rdv.component';\nimport { DataTransformerService } from 'src/app/services/data-transformer.service';\nimport { IRdvPatient } from 'src/app/Interfaces/patient.interface';\nimport { GlobalElementInjectionService } from 'src/app/services/global-element-injection.service';\nimport { GlobalInteraction } from '../../global.interaction';\n\n@Component({\n  selector: 'app-rendez-vous',\n  templateUrl: './rendez-vous.page.html',\n  styleUrls: ['./rendez-vous.page.scss'],\n})\nexport class RendezVousPage implements OnInit {\n  @ViewChild('List', { static: true }) List: IonList; // TODO : get all consultation list\n\n  ios: boolean;\n  dayIndex = 0;\n  queryText = '';\n  segment = 'all';\n  excludeTracksStates: any = [];\n  excludeTracksTypes: any = [];\n  shownSessions: any = [];\n  rdvs: IRdvPatient[] = [];\n  rdvShow: any = [];\n  allBrute: any = [];\n  confDate: string;\n  showSearchbar: boolean;\n  rdvFiltered: any = [];\n  praticiens: IUserPraticien[];\n  functions: any;\n  public REALIZED = 'REALISE';\n  public CANCELED = 'ANNULE';\n  public SCHEDULED = 'PLANIFIER';\n  public PENDING = 'EN ATTENTE';\n  STRING_DATE = 'dateRdv';\n  STRING2_DATE = 'dateConsultation';\n  constructor(\n    public alertCtrl: AlertController,\n    public patientSrvc: PatientService, // TODO : list of data\n    public loadingCtrl: LoadingController,\n    public modalCtrl: ModalController,\n    public router: Router,\n    public routerOutlet: IonRouterOutlet,\n    public toastCtrl: ToastController,\n    public praticientSrvc: PraticienService,\n    public config: Config,\n    private dataTransformer: DataTransformerService,\n    private globaleEl: GlobalElementInjectionService,\n    private globalItem: GlobalInteraction,\n    private praticienSrv: PraticienService\n  ) { }\n\n  ngOnInit() {\n    this.globalItem.presentLoading();\n    this.getAllData();\n    this.ios = this.config.get('mode') === 'ios';\n  }\n\n  getAllfonction() {\n    this.praticienSrv.getPraticienFunctions().subscribe((data) => {\n      this.functions = data;\n    });\n  }\n\n  showAccepted() {\n    this.rdvFiltered = this.dataTransformer.onlyAccepted(\n      this.rdvFiltered,\n      'status',\n      this.REALIZED,\n      this.segment\n    );\n  }\n\n  async openNewRdvModal() {\n    const newRdvModal = await this.modalCtrl.create({\n      component: NewRdvComponent,\n      cssClass: 'test-class',\n      swipeToClose: true,\n      componentProps: {\n        // praticiens: this.praticiens,\n        funcitons: this.functions,\n        test: 'test',\n      },\n    });\n    newRdvModal.onDidDismiss().then(() => {\n      this.updateRdvList();\n    });\n    return await newRdvModal.present();\n  }\n\n  async getAllData() {\n    await this.patientSrvc.getAllRdv().subscribe((data: any) => {\n      console.log('RendezVousPage -> getAllData -> data', data);\n      this.rdvs = data;\n      const result = this.allData(data, this.STRING_DATE, this.STRING2_DATE);\n      this.allBrute = result;\n      this.rdvShow = result.data;\n      this.rdvFiltered = result.dataByDate;\n      this.getPraticiens();\n    });\n  }\n\n  updateRdvList() {\n    if (this.List) {\n      this.List.closeSlidingItems();\n    }\n  }\n\n  // TODO : exclude on filter\n  filterItems(ev: any) {\n    const query = ev.target.value.toLowerCase();\n    requestAnimationFrame(() => {\n      if (!query || query === '') {\n        this.showAccepted();\n        return;\n      }\n      this.rdvFiltered = this.dataTransformer.filterItems(\n        query,\n        ['objetConsultation', 'vaccin'],\n        'status',\n        this.segment,\n        this.rdvFiltered,\n        'praticien',\n        ['firstName', 'lastName']\n      );\n    });\n  }\n\n  alert() {\n    console.log('ok ++++ ');\n  }\n\n  async presentFilter() {\n    const modal = await this.modalCtrl.create({\n      component: RendrezVousFilterComponent,\n      swipeToClose: true,\n      presentingElement: this.routerOutlet.nativeEl,\n      componentProps: {\n        excludeTracksStates: this.excludeTracksStates,\n        excludeTracksTypes: this.excludeTracksTypes,\n      },\n    });\n    await modal.present();\n\n    const { data } = await modal.onWillDismiss();\n\n    if (data) {\n      this.excludeTracksStates = data.states;\n      this.excludeTracksTypes = data.types;\n      this.rdvFiltered = this.dataTransformer.hideOnexclude(\n        data.fuseData,\n        ['type'],\n        this.segment,\n        this.rdvFiltered\n      );\n    }\n  }\n\n  async openSocial(network: string, fab: HTMLIonFabElement) {\n    const loading = await this.loadingCtrl.create({\n      message: `Posting to ${network}`,\n      duration: Math.random() * 1000 + 500,\n    });\n    await loading.present();\n    await loading.onWillDismiss();\n    fab.close();\n  }\n\n  getPraticiens() {\n    // TODO APK: à decommenter\n    this.praticientSrvc.getAllPraticien().subscribe((data) => {\n      this.praticiens = data;\n      this.globalItem.dismissLoading();\n    });\n  }\n\n  alertAcceptRdv(id) {\n    this.globaleEl.alertAccept(id, this.rdvs, 'status', this.REALIZED);\n  }\n\n  alertRemoveRdv(_id, _typeRdv) {\n    // this.globaleEl.alertRemove(_id, this.rdvs, \"status\", this.CANCELED);\n    this.globalItem.alertDelete(\n      { id: _id, typeRdv: _typeRdv },\n      this,\n      `tu veux vraiment annulé ce rendez-vous ?`,\n      this.cancelRdv,\n      `Annulation rendez-vous`\n    );\n  }\n\n  cancelRdv(dataRdv, parent) {\n    console.log(\n      'LL: RendezVousPage -> cancelRdv -> _idRdv, typeRdv',\n      dataRdv\n    );\n    parent.patientSrvc.cancelRdvProposition(dataRdv).subscribe(() => {\n      parent.globalItem.presentToast('Rendez-vous annulé!!!');\n      parent.getAllData();\n    });\n  }\n\n  allData(\n    list,\n    string_date = 'date',\n    string2_date = 'date'\n  ): { data: any[]; dataByDate: { date: string; groups: any }[] } {\n    let dataShow: any[] = [];\n    list.forEach((element) => {\n      const dataToPush = Object.assign(element, { show: true });\n      dataShow.push(dataToPush);\n    });\n    const listByDate = this.regroupDataByDate(\n      [...dataShow],\n      string_date,\n      string2_date\n    );\n    const res = {\n      data: dataShow,\n      dataByDate: listByDate,\n    };\n    return res;\n  }\n  // Regrouper les données en fonction de la date\n  regroupDataByDate(data, string_date, string2_date) {\n    console.log('regroupDataByDate -> string_date **** ', string_date);\n    const groups = data.reduce((groups, eachData) => {\n      console.log('regroupDataByDate -> eachData', eachData);\n      let true_date =\n        eachData[string_date] !== undefined\n          ? (eachData[string_date] !== null ? eachData[string_date].date : new Date())\n          : (eachData[string2_date] !== null ? eachData[string2_date].date : new Date());\n      const type_rdv =\n        eachData[string_date] !== undefined ? 'consultation' : 'intervention';\n      const allStatus = eachData.status == null ? eachData.statusConsultation : eachData.status;\n      const result = Object.assign(eachData, { type: type_rdv, _status: allStatus });\n      console.log(\"LL: regroupDataByDate -> this.checkStatus(eachData._status, eachData.etat)\", this.checkStatus(eachData._status, eachData.etat))\n      const date = true_date;\n      if (!groups[date]) {\n        groups[date] = [];\n      }\n      groups[date].push(result);\n      return groups;\n    }, {});\n\n    const groupArrays = Object.keys(groups).map((date) => {\n      return {\n        date,\n        groups: groups[date],\n      };\n    });\n    const sortedActivities = groupArrays.slice().sort(function (a, b) {\n      return new Date(a.date).getTime() - new Date(b.date).getTime();\n    });\n    console.log('regroupDataByDate -> sortedActivities', sortedActivities);\n    return sortedActivities;\n  }\n\n  checkStatus(statusConsultation, etat) {\n    if (statusConsultation == 0) {\n      return this.PENDING;\n\n    } else if (statusConsultation == 1) {\n      if (etat == 0) {\n        return this.SCHEDULED; // Bouton cancel\n      } else {\n        return this.REALIZED;\n      }\n    } else if (statusConsultation == 2) {\n      return this.CANCELED;\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3BhdGllbnQvcmVuZGV6LXZvdXMvcmVuZHJlei12b3VzLWZpbHRlci9yZW5kcmV6LXZvdXMtZmlsdGVyLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from \"@angular/core\";\nimport { Config, ModalController, NavParams } from \"@ionic/angular\";\nimport { PatientService } from \"src/app/services/patient.service\";\n\n@Component({\n  selector: \"app-rendrez-vous-filter\",\n  templateUrl: \"./rendrez-vous-filter.component.html\",\n  styleUrls: [\"./rendrez-vous-filter.component.scss\"],\n})\nexport class RendrezVousFilterComponent {\n  ios: boolean;\n\n  trackStatsMock: { name: string; icon: string; isChecked: boolean }[] = [\n    // {\n    //   name: \"ANNULE\",\n    //   icon: \"\",\n    //   isChecked: true,\n    // },\n    // {\n    //   name: \"EN ATTENTE\",\n    //   icon: \"\",\n    //   isChecked: true,\n    // },\n    // {\n    //   name: \"REALiSE\",\n    //   icon: \"\",\n    //   isChecked: true,\n    // },\n  ];\n\n  trackTypeMock: { name: string; icon: string; isChecked: boolean }[] = [\n    {\n      name: \"Intervention\",\n      icon: \"\",\n      isChecked: true,\n    },\n    {\n      name: \"Consultation\",\n      icon: \"\",\n      isChecked: true,\n    },\n    // {\n    //   name: \"Vaccination\",\n    //   icon: \"\",\n    //   isChecked: true,\n    // },\n  ];\n\n  public tracksStates: {\n    name: string;\n    icon: string;\n    isChecked: boolean;\n  }[] = [];\n  public tracksTypes: { name: string; icon: string; isChecked: boolean }[] = [];\n\n  constructor(\n    private patientSrvc: PatientService,\n    private config: Config,\n    public modalCtrl: ModalController,\n    public navParams: NavParams\n  ) { }\n\n  ionViewWillEnter() {\n    this.ios = this.config.get(\"mode\") === `ios`;\n\n    // passed in array of track names that should be excluded (unchecked)\n    const excludedTrackStates = this.navParams.get(\"excludeTracksStates\");\n    console.log(\n      \"RendrezVousFilterComponent -> ionViewWillEnter -> excludedTracksStates\",\n      excludedTrackStates\n    );\n    const excludedTrackTypes = this.navParams.get(\"excludeTracksTypes\");\n    console.log(\n      \"RendrezVousFilterComponent -> ionViewWillEnter -> excludedTracksTypes\",\n      excludedTrackTypes\n    );\n\n    this.trackStatsMock.forEach((track) => {\n      this.tracksStates.push({\n        name: track.name,\n        icon: track.icon,\n        isChecked:\n          excludedTrackStates === undefined\n            ? true\n            : excludedTrackStates.indexOf(track.name.toLowerCase()) === -1,\n      });\n    });\n\n    this.trackTypeMock.forEach((track) => {\n      this.tracksTypes.push({\n        name: track.name,\n        icon: track.icon,\n        isChecked:\n          excludedTrackTypes === undefined\n            ? true\n            : excludedTrackTypes.indexOf(track.name.toLowerCase()) === -1,\n      });\n    });\n  }\n\n  selectAll(check: boolean) {\n    // set all to checked or unchecked\n    this.tracksStates.forEach((track) => {\n      track.isChecked = check;\n    });\n    this.tracksTypes.forEach((track) => {\n      track.isChecked = check;\n    });\n  }\n\n  applyFilters() {\n    // Pass back a new array of track names to exclude\n    const excludedTrackStatesNames = this.tracksStates\n      .filter((c) => !c.isChecked)\n      .map((c) => c.name.toLowerCase());\n\n    const excludedTrackTypesNames = this.tracksTypes\n      .filter((c) => !c.isChecked)\n      .map((c) => c.name.toLowerCase());\n    const res = excludedTrackStatesNames.concat(excludedTrackTypesNames);\n    this.dismiss({\n      states: excludedTrackStatesNames,\n      types: excludedTrackTypesNames,\n      fuseData: res,\n    });\n  }\n\n  dismiss(data?: any) {\n    console.log(\"RendrezVousFilterComponent -> dismiss -> data\", data);\n    // using the injected ModalController this page\n    // can \"dismiss\" itself and pass back data\n    this.modalCtrl.dismiss(data);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3ByYXRpY2llbi9yZW5kZXotdm91cy9uZXctcmVuZGV6LXZvdXMvbmV3LXJlbmRlei12b3VzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ModalController, NavController, NavParams } from '@ionic/angular';\nimport { IPatient } from 'src/app/Interfaces/patient.interface';\nimport { IProposeRdv } from 'src/app/Interfaces/propose-rdv.interface';\nimport { PraticienService } from 'src/app/services/praticien.service';\n\n@Component({\n  selector: 'app-new-rendez-vous',\n  templateUrl: './new-rendez-vous.component.html',\n  styleUrls: ['./new-rendez-vous.component.scss'],\n})\nexport class NewRendezVousComponent implements OnInit {\n\n  @Input() test: String;\n  @Input() patients: IPatient[];\n\n  public propositionForm: FormGroup;\n  selected: any;\n  constructor(\n    private praticienSrvc: PraticienService,\n    private navCtrl: NavController,\n    private navParms: NavParams,\n    private modalCtrl: ModalController,\n  ) { }\n\n  async ngOnInit() {\n    this.propositionForm = new FormGroup({\n      patient: new FormControl(\"\", [Validators.required]),\n      dateRdv: new FormControl(\"\", [Validators.required]),\n      heureRdv: new FormControl(\"\", [Validators.required]),\n      description: new FormControl(\"\", [Validators.required]),\n    });\n    console.log(\n      \"NewRdvComponent -> patients -> test\",\n      this.navParms.get(\"patients\")\n    );\n    this.patients = this.navParms.get(\"patients\");\n    this.patients.forEach((element) => {\n      console.log(\"NewRdvComponent -> patients\", element.firstName);\n    });\n  }\n\n  isFieldInvalid(dataFormStep, field: string) {\n    return (\n      (!dataFormStep.get(field).valid && dataFormStep.get(field).touched) ||\n      (dataFormStep.get(field).untouched && !dataFormStep.get(field).valid)\n    );\n  }\n\n  async propose() {\n    const prop: IProposeRdv = {\n      description: this.propositionForm.value.description,\n      patient: this.propositionForm.value.patient,\n      dateRdv: this.propositionForm.value.dateRdv,\n      heureRdv: this.propositionForm.value.heureRdv,\n      // id: await this.praticienSrvc.getUserIDByStorage(),\n      id: 0,\n    };\n\n    console.log(\n      this.propositionForm.value.patient,\n      this.propositionForm.value.dateRdv,\n      this.propositionForm.value.description,\n      this.propositionForm.value.heureRdv,\n      prop.id\n    );\n    if (this.propositionForm.valid) {\n      console.log(\" proposition envoyé \");\n\n      this.praticienSrvc.proposeRdv(prop);\n      this.backToList();\n    } else {\n      console.log(\" not valid \");\n    }\n  }\n\n  backToList() {\n    this.navCtrl.navigateRoot(\"/praticien/proposition-rdv\");\n    this.dismiss();\n  }\n\n  async cancel() {\n    console.log(\" cancel \");\n    this.backToList();\n  }\n\n  dismiss() {\n    // using the injected ModalController this page\n    // can \"dismiss\" itself and optionally pass back data\n    this.modalCtrl.dismiss({\n      dismissed: true,\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RendezVousPage } from './rendez-vous.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RendezVousPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RendezVousPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RendezVousPageRoutingModule } from './rendez-vous-routing.module';\n\nimport { RendezVousPage } from './rendez-vous.page';\nimport { NewRendezVousComponent } from './new-rendez-vous/new-rendez-vous.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RendezVousPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [RendezVousPage, NewRendezVousComponent]\n})\nexport class RendezVousPageModule { }\n","export default \"ion-fab-button {\\n  --background: var(--ion-color-step-150, #fff);\\n  --background-hover: var(--ion-color-step-200, #f2f2f2);\\n  --background-focused: var(--ion-color-step-250, #d9d9d9);\\n  --color: var(--ion-color-primary, #3880ff);\\n}\\n\\n/*\\n* Material Design uses the ripple for activated\\n* so only style the iOS activated background\\n*/\\n\\n.ios ion-fab-button {\\n  --background-activated: var(--ion-color-step-250, #d9d9d9);\\n}\\n\\nion-item-sliding[track=ionic] ion-label.information {\\n  border-left: 2px solid var(--ion-color-primary);\\n  padding-left: 3px;\\n}\\n\\nion-item-sliding[track=vaccination] ion-label.information {\\n  border-left: 2px solid #8e8d93;\\n  padding-left: 3px;\\n}\\n\\nion-item-sliding[track=consultation] ion-label.information {\\n  border-left: 2px solid #fed035;\\n  padding-left: 3px;\\n}\\n\\nion-item-sliding[track=intervention] ion-label.information {\\n  border-left: 2px solid #6600cc;\\n  padding-left: 3px;\\n}\\n\\n.status {\\n  text-align: right;\\n  width: 90px;\\n}\\n\\n.middle {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.btn-cnfrm {\\n  display: flex;\\n  justify-content: center;\\n}\\n\\nion-col > ion-button {\\n  min-width: 120px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcHJhdGljaWVuL3JlbmRlei12b3VzL3JlbmRlei12b3VzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLDZDQUFBO0VBQ0Esc0RBQUE7RUFDQSx3REFBQTtFQUVBLDBDQUFBO0FBQUY7O0FBR0E7OztDQUFBOztBQUlBO0VBQ0UsMERBQUE7QUFBRjs7QUFZSTtFQUNFLCtDQUFBO0VBQ0EsaUJBQUE7QUFUTjs7QUFPSTtFQUNFLDhCQUFBO0VBQ0EsaUJBQUE7QUFKTjs7QUFFSTtFQUNFLDhCQUFBO0VBQ0EsaUJBQUE7QUFDTjs7QUFISTtFQUNFLDhCQUFBO0VBQ0EsaUJBQUE7QUFNTjs7QUFEQTtFQUNFLGlCQUFBO0VBQ0EsV0FBQTtBQUlGOztBQURBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0FBSUY7O0FBREE7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7QUFJRjs7QUFEQTtFQUNFLGdCQUFBO0FBSUYiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9wcmF0aWNpZW4vcmVuZGV6LXZvdXMvcmVuZGV6LXZvdXMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWZhYi1idXR0b24ge1xyXG4gIC0tYmFja2dyb3VuZDogdmFyKC0taW9uLWNvbG9yLXN0ZXAtMTUwLCAjZmZmKTtcclxuICAtLWJhY2tncm91bmQtaG92ZXI6IHZhcigtLWlvbi1jb2xvci1zdGVwLTIwMCwgI2YyZjJmMik7XHJcbiAgLS1iYWNrZ3JvdW5kLWZvY3VzZWQ6IHZhcigtLWlvbi1jb2xvci1zdGVwLTI1MCwgI2Q5ZDlkOSk7XHJcblxyXG4gIC0tY29sb3I6IHZhcigtLWlvbi1jb2xvci1wcmltYXJ5LCAjMzg4MGZmKTtcclxufVxyXG5cclxuLypcclxuKiBNYXRlcmlhbCBEZXNpZ24gdXNlcyB0aGUgcmlwcGxlIGZvciBhY3RpdmF0ZWRcclxuKiBzbyBvbmx5IHN0eWxlIHRoZSBpT1MgYWN0aXZhdGVkIGJhY2tncm91bmRcclxuKi9cclxuLmlvcyBpb24tZmFiLWJ1dHRvbiB7XHJcbiAgLS1iYWNrZ3JvdW5kLWFjdGl2YXRlZDogdmFyKC0taW9uLWNvbG9yLXN0ZXAtMjUwLCAjZDlkOWQ5KTtcclxufVxyXG5cclxuJGNhdGVnb3JpZXM6IChcclxuICBpb25pYzogdmFyKC0taW9uLWNvbG9yLXByaW1hcnkpLFxyXG4gIHZhY2NpbmF0aW9uOiAjOGU4ZDkzLFxyXG4gIGNvbnN1bHRhdGlvbjogI2ZlZDAzNSxcclxuICBpbnRlcnZlbnRpb246ICM2NjAwY2MsXHJcbik7XHJcblxyXG5AZWFjaCAkdHJhY2ssICR2YWx1ZSBpbiBtYXAtcmVtb3ZlKCRjYXRlZ29yaWVzKSB7XHJcbiAgaW9uLWl0ZW0tc2xpZGluZ1t0cmFjaz0nI3skdHJhY2t9J10gaW9uLWxhYmVsIHtcclxuICAgICYuaW5mb3JtYXRpb24ge1xyXG4gICAgICBib3JkZXItbGVmdDogMnB4IHNvbGlkICR2YWx1ZTtcclxuICAgICAgcGFkZGluZy1sZWZ0OiAzcHg7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4uc3RhdHVzIHtcclxuICB0ZXh0LWFsaWduOiByaWdodDtcclxuICB3aWR0aDogOTBweDtcclxufVxyXG5cclxuLm1pZGRsZSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4uYnRuLWNuZnJtIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcblxyXG5pb24tY29sID4gaW9uLWJ1dHRvbiB7XHJcbiAgbWluLXdpZHRoOiAxMjBweDtcclxufVxyXG4iXX0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { IUserPraticien } from 'src/app/Interfaces/praticien.interface';\nimport {\n  AlertController,\n  LoadingController,\n  ModalController,\n  IonRouterOutlet,\n  ToastController,\n  Config,\n  IonList,\n} from '@ionic/angular';\nimport { PraticienService } from 'src/app/services/praticien.service';\nimport { Router } from '@angular/router';\nimport { PatientService } from 'src/app/services/patient.service';\nimport { DataTransformerService } from 'src/app/services/data-transformer.service';\nimport { IRdvPatient } from 'src/app/Interfaces/patient.interface';\nimport { GlobalElementInjectionService } from 'src/app/services/global-element-injection.service';\nimport { GlobalInteraction } from '../../global.interaction';\nimport { NewRendezVousComponent } from './new-rendez-vous/new-rendez-vous.component';\n\n@Component({\n  selector: 'app-rendez-vous',\n  templateUrl: './rendez-vous.page.html',\n  styleUrls: ['./rendez-vous.page.scss'],\n})\nexport class RendezVousPage implements OnInit {\n  @ViewChild('List', { static: true }) List: IonList; // TODO : get all consultation list\n\n  ios: boolean;\n  dayIndex = 0;\n  queryText = '';\n  segment = 'all';\n  excludeTracksStates: any = [];\n  excludeTracksTypes: any = [];\n  shownSessions: any = [];\n  rdvs: any = [];\n  rdvShow: any = [];\n  allBrute: any = [];\n  confDate: string;\n  showSearchbar: boolean;\n  rdvFiltered: any = [];\n  praticiens: IUserPraticien[];\n  functions: any;\n  public REALIZED = 'REALISE';\n  public CANCELED = 'ANNULE';\n  public SCHEDULED = 'PLANIFIER';\n  public PENDING = 'EN ATTENTE';\n  STRING_DATE = 'dateRdv';\n  STRING2_DATE = 'dateConsultation';\n  constructor(\n    public alertCtrl: AlertController,\n    public patientSrvc: PatientService, // TODO : list of data\n    public loadingCtrl: LoadingController,\n    public modalCtrl: ModalController,\n    public router: Router,\n    public routerOutlet: IonRouterOutlet,\n    public toastCtrl: ToastController,\n    public praticientSrvc: PraticienService,\n    public config: Config,\n    private dataTransformer: DataTransformerService,\n    private globaleEl: GlobalElementInjectionService,\n    private globalItem: GlobalInteraction,\n    private praticienSrvc: PraticienService\n  ) { }\n\n  ngOnInit() {\n\n    this.ios = this.config.get('mode') === 'ios';\n    this.getAllData();\n  }\n\n  async openNewRdvModal() {\n    const newRdvModal = await this.modalCtrl.create({\n      component: NewRendezVousComponent,\n      cssClass: 'test-class',\n      swipeToClose: true,\n      componentProps: {\n        // praticiens: this.praticiens,\n        funcitons: this.functions,\n        test: 'test',\n      },\n    });\n    newRdvModal.onDidDismiss().then(() => {\n      this.updateRdvList();\n    });\n    return await newRdvModal.present();\n  }\n\n  async getAllData() {\n    await this.praticienSrvc.getAllRdv().subscribe((data: any) => {\n      console.log('RendezVousPage -> getAllData -> data', data);\n      this.rdvs = data;\n      const result = this.allData(data, this.STRING_DATE, this.STRING2_DATE);\n      this.allBrute = result;\n      this.rdvShow = result.data;\n      this.rdvFiltered = result.dataByDate;\n      this.getPraticiens();\n    });\n  }\n\n  updateRdvList() {\n    if (this.List) {\n      this.List.closeSlidingItems();\n    }\n  }\n\n  // TODO : exclude on filter\n  filterItems(ev: any) {\n    const query = ev.target.value.toLowerCase();\n    requestAnimationFrame(() => {\n      if (!query || query === '') {\n        return;\n      }\n      this.rdvFiltered = this.dataTransformer.filterItems(\n        query,\n        ['objetConsultation', 'vaccin'],\n        'status',\n        this.segment,\n        this.rdvFiltered,\n        'praticien',\n        ['firstName', 'lastName']\n      );\n    });\n  }\n\n  alert() {\n    console.log('ok ++++ ');\n  }\n\n  async presentFilter() {\n    const modal = await this.modalCtrl.create({\n      component: \"RendrezVousFilterComponent\",\n      swipeToClose: true,\n      presentingElement: this.routerOutlet.nativeEl,\n      componentProps: {\n        excludeTracksStates: this.excludeTracksStates,\n        excludeTracksTypes: this.excludeTracksTypes,\n      },\n    });\n    await modal.present();\n\n    const { data } = await modal.onWillDismiss();\n\n    if (data) {\n      this.excludeTracksStates = data.states;\n      this.excludeTracksTypes = data.types;\n      this.rdvFiltered = this.dataTransformer.hideOnexclude(\n        data.fuseData,\n        ['type'],\n        this.segment,\n        this.rdvFiltered\n      );\n    }\n  }\n\n  async openSocial(network: string, fab: HTMLIonFabElement) {\n    const loading = await this.loadingCtrl.create({\n      message: `Posting to ${network}`,\n      duration: Math.random() * 1000 + 500,\n    });\n    await loading.present();\n    await loading.onWillDismiss();\n    fab.close();\n  }\n\n  getPraticiens() {\n    // TODO APK: à decommenter\n    this.praticientSrvc.getAllPraticien().subscribe((data) => {\n      this.praticiens = data;\n      this.globalItem.dismissLoading();\n    });\n  }\n\n  alertAcceptRdv(id) {\n    this.globaleEl.alertAccept(id, this.rdvs, 'status', this.REALIZED);\n  }\n\n  alertRemoveRdv(_id, _typeRdv) {\n    // this.globaleEl.alertRemove(_id, this.rdvs, \"status\", this.CANCELED);\n    this.globalItem.alertDelete(\n      { id: _id, typeRdv: _typeRdv },\n      this,\n      `tu veux vraiment annulé ce rendez-vous ?`,\n      this.cancelRdv,\n      `Annulation rendez-vous`\n    );\n  }\n\n  cancelRdv(dataRdv, parent) {\n    console.log(\n      'LL: RendezVousPage -> cancelRdv -> _idRdv, typeRdv',\n      dataRdv\n    );\n    parent.patientSrvc.cancelRdvProposition(dataRdv).subscribe(() => {\n      parent.globalItem.presentToast('Rendez-vous annulé!!!');\n      parent.getAllData();\n    });\n  }\n\n  allData(\n    list,\n    string_date = 'date',\n    string2_date = 'date'\n  ): { data: any[]; dataByDate: { date: string; groups: any }[] } {\n    let dataShow: any[] = [];\n    list.forEach((element) => {\n      const dataToPush = Object.assign(element, { show: true });\n      dataShow.push(dataToPush);\n    });\n    const listByDate = this.regroupDataByDate(\n      [...dataShow],\n      string_date,\n      string2_date\n    );\n    const res = {\n      data: dataShow,\n      dataByDate: listByDate,\n    };\n    return res;\n  }\n  // Regrouper les données en fonction de la date\n  regroupDataByDate(data, string_date, string2_date) {\n    console.log('regroupDataByDate -> string_date **** ', string_date);\n    const groups = data.reduce((groups, eachData) => {\n      console.log('regroupDataByDate -> eachData', eachData);\n      let true_date =\n        eachData[string_date] !== undefined\n          ? (eachData[string_date] !== null ? eachData[string_date].date : new Date())\n          : (eachData[string2_date] !== null ? eachData[string2_date].date : new Date());\n      const type_rdv =\n        eachData[string_date] !== undefined ? 'consultation' : 'intervention';\n      const allStatus = eachData.status == null ? eachData.statusConsultation : eachData.status;\n      const result = Object.assign(eachData, { type: type_rdv, _status: allStatus, date: true_date });\n      console.log(\"LL: regroupDataByDate -> this.checkStatus(eachData._status, eachData.etat)\", this.checkStatus(eachData._status, eachData.etat))\n      const date = true_date;\n      if (!groups[date]) {\n        groups[date] = [];\n      }\n      groups[date].push(result);\n      return groups;\n    }, {});\n\n    const groupArrays = Object.keys(groups).map((date) => {\n      return {\n        date,\n        groups: groups[date],\n      };\n    });\n    const sortedActivities = groupArrays.slice().sort(function (a, b) {\n      return new Date(a.date).getTime() - new Date(b.date).getTime();\n    });\n    console.log('regroupDataByDate -> sortedActivities', sortedActivities);\n    return sortedActivities;\n  }\n\n  checkStatus(statusConsultation, etat) {\n    if (statusConsultation == 0) {\n      return this.PENDING;\n\n    } else if (statusConsultation == 1) {\n      if (etat == 0) {\n        return this.SCHEDULED; // Bouton cancel\n      } else {\n        return this.REALIZED;\n      }\n    } else if (statusConsultation == 2) {\n      return this.CANCELED;\n    }\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { AlertController } from \"@ionic/angular\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class GlobalElementInjectionService {\n  constructor(private alertCtrl: AlertController) {}\n\n  async alertAccept(\n    id,\n    array = [],\n    keyStatus: String = \"status\",\n    OkStatus: String = \"Accepted\"\n  ) {\n    const alert = await this.alertCtrl.create({\n      cssClass: \"my-custom-class\",\n      header: \"Accept\",\n      message: \"Do you really want to accept it ? \",\n      buttons: [\n        {\n          text: \"Cancel\",\n          role: \"cancel\",\n          cssClass: \"secondary\",\n          handler: () => {\n            console.log(\"Confirm Cancel: blah\");\n          },\n        },\n        {\n          text: \"OK\",\n          handler: () => {\n            console.log(\"data accepted \" + id);\n            this.accept(id, array, keyStatus, OkStatus);\n          },\n        },\n      ],\n    });\n    await alert.present();\n  }\n\n  async alertRemove(\n    id,\n    array = [],\n    keyStatus: String = \"status\",\n    RefuseStatus: String = \"Refused\"\n  ) {\n    const alert = await this.alertCtrl.create({\n      cssClass: \"my-custom-class\",\n      header: \"Refuse\",\n      message: \"Do you really want to refuse it ? \",\n      buttons: [\n        {\n          text: \"Cancel\",\n          role: \"cancel\",\n          cssClass: \"secondary\",\n          handler: () => {\n            console.log(\"Confirm Cancel: blah\");\n          },\n        },\n        {\n          text: \"OK\",\n          handler: () => {\n            console.log(\"data refused \" + id);\n            this.remove(id, array, keyStatus, RefuseStatus);\n          },\n        },\n      ],\n    });\n    await alert.present();\n  }\n\n  // TODO:change by id // actually it s his name\n  accept(\n    id,\n    array = [],\n    keyStatus: String = \"status\",\n    OkStatus: String = \"Accepted\"\n  ) {\n    array.find((element) => element.id == id)[`${keyStatus}`] = OkStatus;\n  }\n\n  remove(\n    id,\n    array = [],\n    keyStatus: String = \"status\",\n    RefuseStatus: String = \"Refused\"\n  ) {\n    const el = (test) => test.id == id;\n    array.find((element) => element.id == id)[`${keyStatus}`] = RefuseStatus;\n    const index = array.findIndex(el);\n    console.log(el);\n    array.slice(index);\n  }\n}\n"],"sourceRoot":"webpack:///"}