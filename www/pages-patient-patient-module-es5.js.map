{"version":3,"sources":["webpack:///src/app/pages/patient/patient.page.html","webpack:///src/app/pages/patient/patient-routing.module.ts","webpack:///src/app/pages/patient/patient.module.ts","webpack:///src/app/pages/patient/patient.page.scss","webpack:///src/app/pages/patient/patient.page.ts","webpack:///src/app/services/patient.service.ts"],"names":["routes","path","redirectTo","component","children","loadChildren","then","m","RendezVousPageModule","VaccinationPageModule","FamillyPageModule","ProfilePageModule","AssocPraticiensPageModule","PatientPageRoutingModule","imports","forChild","exports","PatientPageModule","declarations","PatientPage","menuCtrl","router","plt","authSrvc","storage","navCtrl","patienSrv","pages","title","url","selectedPath","events","subscribe","event","initialize","ready","get","element","isActive","setTimeout","toggle","logout","user","roles","username","getProfile","data","type","typePatient","name","firstName","lastName","fonction","link","navigateForward","selector","template","PatientService","http","url_dev","url_api","url_dev_api","url_apip","excludeTracks","MOCK_DATA_JSON","pipe","post","Object","keys","forEach","console","log","res","nomGroupe","designation","_idFamily","_idPraticien","praticien","providedIn"],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACKf,UAAMA,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,kBAAU,EAAE;AAFd,OADqB,EAKrB;AACED,YAAI,EAAE,EADR;AAEEE,iBAAS,EAAE,yDAFb;AAGEC,gBAAQ,EAAE,CACR;AACEH,cAAI,EAAE,aADR;AAEEI,sBAAY,EAAE;AAAA,mBACZ;AAAA;AAAA;AAAA;AAAA,0EAA2CC,IAA3C,CACE,UAACC,CAAD;AAAA,qBAAOA,CAAC,CAACC,oBAAT;AAAA,aADF,CADY;AAAA;AAFhB,SADQ,EAQR;AACEP,cAAI,EAAE,aADR;AAEEI,sBAAY,EAAE;AAAA,mBACZ;AAAA;AAAA;AAAA;AAAA,0EAA2CC,IAA3C,CACE,UAACC,CAAD;AAAA,qBAAOA,CAAC,CAACE,qBAAT;AAAA,aADF,CADY;AAAA;AAFhB,SARQ,EAeR;AACER,cAAI,EAAE,QADR;AAEEI,sBAAY,EAAE;AAAA,mBACZ;AAAA;AAAA;AAAA;AAAA,kEAAmCC,IAAnC,CAAwC,UAACC,CAAD;AAAA,qBAAOA,CAAC,CAACG,iBAAT;AAAA,aAAxC,CADY;AAAA;AAFhB,SAfQ,EAoBR;AACET,cAAI,EAAE,SADR;AAEEI,sBAAY,EAAE;AAAA,mBACZ;AAAA;AAAA;AAAA;AAAA,kEAAmCC,IAAnC,CAAwC,UAACC,CAAD;AAAA,qBAAOA,CAAC,CAACI,iBAAT;AAAA,aAAxC,CADY;AAAA;AAFhB,SApBQ,EAyBR;AACEV,cAAI,EAAE,kBADR;AAEEI,sBAAY,EAAE;AAAA,mBAAM;AAAA;AAAA;AAAA;AAAA,oFAAqDC,IAArD,CAA0D,UAAAC,CAAC;AAAA,qBAAIA,CAAC,CAACK,yBAAN;AAAA,aAA3D,CAAN;AAAA;AAFhB,SAzBQ;AAHZ,OALqB,CAAvB;;UA8CaC,wBAAwB;AAAA;AAAA,O;;AAAxBA,8BAAwB,6DAJpC,+DAAS;AACRC,eAAO,EAAE,CAAC,6DAAaC,QAAb,CAAsBf,MAAtB,CAAD,CADD;AAERgB,eAAO,EAAE,CAAC,4DAAD;AAFD,OAAT,CAIoC,GAAxBH,wBAAwB,CAAxB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UChCAI,iBAAiB;AAAA;AAAA,O;;AAAjBA,uBAAiB,6DAT7B,+DAAS;AACRH,eAAO,EAAE,CACP,4DADO,EAEP,0DAFO,EAGP,0DAHO,EAIP,gFAJO,CADD;AAORI,oBAAY,EAAE,CAAC,yDAAD;AAPN,OAAT,CAS6B,GAAjBD,iBAAiB,CAAjB;;;;;;;;;;;;;;;;ACnBb;AAAe;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCcFE,WAAW;AA4CtB,6BACSC,QADT,EAEUC,MAFV,EAGUC,GAHV,EAIUC,QAJV,EAKUC,OALV,EAMSC,OANT,EAOSC,SAPT,EAOkC;AAAA;;AAAA;;AANzB,eAAAN,QAAA,GAAAA,QAAA;AACC,eAAAC,MAAA,GAAAA,MAAA;AACA,eAAAC,GAAA,GAAAA,GAAA;AACA,eAAAC,QAAA,GAAAA,QAAA;AACA,eAAAC,OAAA,GAAAA,OAAA;AACD,eAAAC,OAAA,GAAAA,OAAA;AACA,eAAAC,SAAA,GAAAA,SAAA;AAlDT,eAAAC,KAAA,GAAQ,CACN;AACEC,iBAAK,EAAE,4BADT;AAEEC,eAAG,EAAE;AAFP,WADM,EAKN;AACED,iBAAK,EAAE,aADT;AAEEC,eAAG,EAAE;AAFP,WALM,EA+BN;AACED,iBAAK,EAAE,eADT;AAEEC,eAAG,EAAE;AAFP,WA/BM,EAmCN;AACED,iBAAK,EAAE,SADT;AAEEC,eAAG,EAAE;AAFP,WAnCM,CAAR;AAwCA,eAAAC,YAAA,GAAe,EAAf;AAYE,eAAKT,MAAL,CAAYU,MAAZ,CAAmBC,SAAnB,CAA6B,UAACC,KAAD,EAAwB;AACnD,iBAAI,CAACH,YAAL,GAAoBG,KAAK,CAACJ,GAA1B,CADmD,CAEnD;AACD,WAHD;AAID;;AAzDqB;AAAA;AAAA,qCA0DL;;;;;;AACf,2BAAKC,YAAL,GAAoB,sBAApB;AACA,2BAAKI,UAAL,G,CACA;AACA;;;;;;;;;AACD;AA/DqB;AAAA;AAAA,sCAgEJ;;;;;;;;AAChB;AACA,2BAAKZ,GAAL,CAASa,KAAT,GAAiB7B,IAAjB,CAAsB,YAAM;AAC1B,8BAAI,CAACc,QAAL,CAAcgB,GAAd,CAAkB,OAAlB,EAA2B9B,IAA3B,CAAgC,UAAC+B,OAAD,EAAa;AAC3C,8BAAIA,OAAO,CAACC,QAAZ,EAAsB;AACpBC,sCAAU,CAAC;AAAA,qCAAMF,OAAO,CAACG,MAAR,EAAN;AAAA,6BAAD,EAAyB,EAAzB,CAAV;AACD,2BAH0C,CAI3C;AACA;AACA;AACA;;AACD,yBARD;AASD,uBAVD;;;;;;;;;AAWD;AA7EqB;AAAA;AAAA,mCA8Eb;AACP,iBAAKjB,QAAL,CAAckB,MAAd;AACD;AAhFqB;AAAA;AAAA,uCAkFT;AAAA;;AAAA,sCACiB,KAAKlB,QAAL,CAAcmB,IAD/B;AAAA,gBACHC,KADG,uBACHA,KADG;AAAA,gBACIC,QADJ,uBACIA,QADJ,EAEX;AACA;AACA;;AACA,iBAAKlB,SAAL,CAAemB,UAAf,GAA4Bb,SAA5B,CAAsC,UAACc,IAAD,EAA6B;AACjE,kBAAMC,IAAI,GAAGD,IAAI,CAAC,CAAD,CAAJ,CAAQE,WAAR,IAAuB,CAAvB,GAA2B,OAA3B,GAAqC,QAAlD;AACA,oBAAI,CAACC,IAAL,aAAeH,IAAI,CAAC,CAAD,CAAJ,CAAQI,SAAvB,eAAqCJ,IAAI,CAAC,CAAD,CAAJ,CAAQK,QAA7C,eAA0DJ,IAA1D;AACD,aAHD;AAIA,iBAAKK,QAAL,GAAgB,SAAhB;AACD;AA5FqB;AAAA;AAAA,mCA8FPC,IA9FO,EA8FD;;;;;;AACnB;AAEA,2BAAK5B,OAAL,CAAa6B,eAAb,CAA6BD,IAA7B;;;;;;;;;AACD;AAlGqB;;AAAA;AAAA,S;;;;gBAbf;;gBACA;;gBAD+B;;gBAE/B;;gBAEA;;gBAJgB;;gBAKhB;;;;AAQIlC,iBAAW,6DALvB,gEAAU;AACToC,gBAAQ,EAAE,aADD;AAETC,gBAAQ,EAAR;AAAA;AAAA,sGAFS;;;;AAAA,OAAV,CAKuB,GAAXrC,WAAW,CAAX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCAAsC,cAAc;AAKzB,gCAAmBC,IAAnB,EAAqC;AAAA;;AAAlB,eAAAA,IAAA,GAAAA,IAAA;AAJX,eAAA7B,GAAA,GAAM,yEAAY8B,OAAlB;AACA,eAAAC,OAAA,GAAU,yEAAYC,WAAtB;AACA,eAAAC,QAAA,GAAW,yEAAYH,OAAvB;AAEgC,SALf,CAOzB;;;AAPyB;AAAA;AAAA,wCAQd;AACT,mBAAO,KAAKD,IAAL,CAAUtB,GAAV,CAA0B,KAAKP,GAAL,GAAW,UAArC,CAAP,CADS,CAET;AACA;AACA;AACA;AACA;AACD;AAfwB;AAAA;AAAA,sCAiBb;AACV,mBAAO,KAAK6B,IAAL,CAAUtB,GAAV,WAAiB,KAAK0B,QAAtB,kBAAP,CADU,CAEV;AACA;AACA;AACA;AACA;AACD;AAxBwB;AAAA;AAAA,uCA0BZC,aA1BY,EA0BI;AAC3B,mBAAO,KAAKL,IAAL,CAAUtB,GAAV,CAAc,sDAAS4B,cAAvB,EAAuCC,IAAvC,CACL,2DAAI,UAACnB,IAAD,EAAe;AACjB;AACA,qBAAOA,IAAP;AACD,aAHD,CADK,CAAP;AAMD,WAjCwB,CAmCzB;;AAnCyB;AAAA;AAAA,+CAoCJ;AACnB,mBAAO,KAAKY,IAAL,CAAUtB,GAAV,WAAmC,KAAK0B,QAAxC,0BAAP,CADmB,CAGnB;AACA;AACA;AACA;AACA;AACD;AA5CwB;AAAA;AAAA,0CA8CThB,IA9CS,EA8Ce;AACtC,mBAAO,KAAKY,IAAL,CAAUQ,IAAV,WAAoC,KAAKN,OAAzC,YAAyDd,IAAzD,CAAP;AACAqB,kBAAM,CAACC,IAAP,CAAYtB,IAAZ,EAAkBuB,OAAlB,CAA0B,UAAChC,OAAD,EAAa;AACrCiC,qBAAO,CAACC,GAAR,CAAY,8CAAZ,EAA4DlC,OAA5D;AACAiC,qBAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BzB,IAAI,CAACT,OAAD,CAAhC;AACD,aAHD;AAID;AApDwB;AAAA;AAAA,uCAsDZ;AACX,mBAAO,KAAKqB,IAAL,CAAUtB,GAAV,WAAoC,KAAK0B,QAAzC,qBAAP,CADW,CAGX;AACA;AACA;AACA;AACA;AACD;AA9DwB;AAAA;AAAA,wCAgEXhB,IAhEW,EAgEL;AAClB,mBAAO,KAAKY,IAAL,CAAUQ,IAAV,WAAkB,KAAKJ,QAAvB,2BAAuDhB,IAAvD,CAAP;AACD;AAlEwB;AAAA;AAAA,oDAoEF;AACrB,gBAAM0B,GAAG,GAAG,KAAKd,IAAL,CAAUtB,GAAV,WAAmC,KAAK0B,QAAxC,wBAAZ;AACAU,eAAG,CAACxC,SAAJ,CAAc,UAAAc,IAAI,EAAI;AACpBwB,qBAAO,CAACC,GAAR,CAAY,sCAAZ,EAAoDzB,IAApD;AACD,aAFD;AAGA,mBAAO0B,GAAP;AACD;AA1EwB;AAAA;AAAA,sCA4Eb;AACV,gBAAMA,GAAG,GAAG,KAAKd,IAAL,CAAUtB,GAAV,WAAiB,KAAK0B,QAAtB,qBAAZ;AACAU,eAAG,CAACxC,SAAJ,CAAc,UAAAc,IAAI;AAAA,qBAAIwB,OAAO,CAACC,GAAR,CAAY,oCAAZ,EAAkDzB,IAAlD,CAAJ;AAAA,aAAlB;AACA,mBAAO0B,GAAP;AACD;AAhFwB;AAAA;AAAA,yCAkFVC,SAlFU,EAkFC;AACxB,gBAAM3B,IAAI,GAAG;AACX4B,yBAAW,EAAED;AADF,aAAb;AAGAH,mBAAO,CAACC,GAAR,CAAY,8CAAZ,EAA4DzB,IAA5D;AACA,gBAAM0B,GAAG,GAAG,KAAKd,IAAL,CAAUQ,IAAV,WAAkB,KAAKJ,QAAvB,qBAAiDhB,IAAjD,CAAZ;AACA,mBAAO0B,GAAP;AACD;AAzFwB;AAAA;AAAA,+CA2FJ1B,IA3FI,EA2FE;AACzBwB,mBAAO,CAACC,GAAR,CAAY,gDAAZ,EAA8DzB,IAA9D;AACA,gBAAM0B,GAAG,GAAG,KAAKd,IAAL,CAAUQ,IAAV,WAAkB,KAAKN,OAAvB,kBAA6Cd,IAA7C,CAAZ;AACA,mBAAO0B,GAAP;AACD;AA/FwB;AAAA;AAAA,6CAiGNG,SAjGM,EAiGK;AAC5B,gBAAMH,GAAG,GAAG,KAAKd,IAAL,qBAAoB,KAAKE,OAAzB,oBAA0Ce,SAA1C,EAAZ;AACA,mBAAOH,GAAP;AACD;AApGwB;AAAA;AAAA,gDAsGH1B,IAtGG,EAsGG;AAC1BwB,mBAAO,CAACC,GAAR,CAAY,yEAAZ,EAAuFzB,IAAvF;AACA,gBAAM0B,GAAG,GAAG,KAAKd,IAAL,CAAUQ,IAAV,WAAkB,KAAKJ,QAAvB,mBAA+ChB,IAA/C,CAAZ;AACA,mBAAO0B,GAAP;AACD;AA1GwB;AAAA;AAAA,yDA4GMI,YA5GN,EA4GoB;AAC3C,gBAAMJ,GAAG,GAAG,KAAKd,IAAL,CAAUtB,GAAV,WAAiB,KAAK0B,QAAtB,wCAA4Dc,YAA5D,EAAZ;AACA,mBAAOJ,GAAP;AACD;AA/GwB;AAAA;AAAA,qCAiHd1B,IAjHc,EAiHR;AACf,gBAAM0B,GAAG,GAAG,KAAKd,IAAL,CAAUQ,IAAV,WAAkB,KAAKJ,QAAvB,cAA0ChB,IAA1C,CAAZ;AACA,mBAAO0B,GAAP;AACD;AApHwB;AAAA;AAAA,+CAsHJ1B,IAtHI,EAsHE;AACzB,gBAAM0B,GAAG,GAAG,KAAKd,IAAL,CAAUQ,IAAV,WAAkB,KAAKN,OAAvB,iBAA4Cd,IAA5C,CAAZ;AACA,mBAAO0B,GAAP;AACD;AAzHwB;AAAA;AAAA,+CA2HJI,YA3HI,EA2HU;AACjC,gBAAMJ,GAAG,GAAG,KAAKd,IAAL,CAAUQ,IAAV,WAAkB,KAAKJ,QAAvB,yBAAqD;AAAEe,uBAAS,EAAED;AAAb,aAArD,CAAZ;AACA,mBAAOJ,GAAP;AACD;AA9HwB;;AAAA;AAAA,S;;;;gBARlB;;;;AAQIf,oBAAc,6DAH1B,iEAAW;AACVqB,kBAAU,EAAE;AADF,OAAX,CAG0B,GAAdrB,cAAc,CAAd","file":"pages-patient-patient-module-es5.js","sourcesContent":["export default \"<ion-split-pane contentId=\\\"contents\\\" when=\\\"xs\\\" [disabled]=\\\"true\\\">\\n  <ion-menu side=\\\"start\\\" type=\\\"overlay\\\" menuId=\\\"first\\\" contentId=\\\"contents\\\">\\n    <ion-content>\\n      <div class=\\\"menu-praticien\\\"></div>\\n      <div class=\\\"header-content\\\">\\n        <ion-menu-toggle auto-hide=\\\"false\\\">\\n          <div class=\\\"profile_redirect\\\">\\n            <ion-label>\\n              <img\\n                src=\\\"../../../assets/images/praticien.jpg\\\"\\n                (click)=\\\"redirect('/patient/profile')\\\"\\n              />\\n            </ion-label>\\n\\n            <ion-label>\\n              <h2 class=\\\"name\\\">{{name}}</h2>\\n            </ion-label>\\n          </div>\\n        </ion-menu-toggle>\\n      </div>\\n\\n      <ion-list lines=\\\"none\\\" class=\\\"menu-items\\\" *ngFor=\\\"let p of pages\\\">\\n        <div>\\n          <ion-menu-toggle auto-hide=\\\"false\\\">\\n            <ion-item\\n              text-wrap\\n              routerLink=\\\"{{p.url}}\\\"\\n              routerDirection=\\\"root\\\"\\n              [class.active-item]=\\\"selectedPath === p.url\\\"\\n            >\\n              <ion-icon\\n                *ngIf=\\\"selectedPath === p.url\\\"\\n                slot=\\\"start\\\"\\n                name=\\\"caret-forward-outline\\\"\\n                color=\\\"sgreen\\\"\\n              >\\n              </ion-icon>\\n              <ion-label>{{p.title}}</ion-label>\\n            </ion-item>\\n          </ion-menu-toggle>\\n        </div>\\n      </ion-list>\\n    </ion-content>\\n    <ion-footer>\\n      <ion-button\\n        class=\\\"logout\\\"\\n        color=\\\"sred\\\"\\n        (click)=\\\"logout()\\\"\\n        [routerLink]=\\\"['/login']\\\"\\n      >\\n        <ion-icon slot=\\\"start\\\" name=\\\"exit-outline\\\"> </ion-icon>\\n\\n        <ion-label>Logout</ion-label>\\n      </ion-button>\\n    </ion-footer>\\n  </ion-menu>\\n  <ion-router-outlet id=\\\"contents\\\" main></ion-router-outlet>\\n</ion-split-pane>\\n\";","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { PatientPage } from \"./patient.page\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    redirectTo: \"vaccination\",\n  },\n  {\n    path: \"\",\n    component: PatientPage,\n    children: [\n      {\n        path: \"rendez-vous\",\n        loadChildren: () =>\n          import(\"./rendez-vous/rendez-vous.module\").then(\n            (m) => m.RendezVousPageModule\n          ),\n      },\n      {\n        path: \"vaccination\",\n        loadChildren: () =>\n          import(\"./vaccination/vaccination.module\").then(\n            (m) => m.VaccinationPageModule\n          ),\n      },\n      {\n        path: \"family\",\n        loadChildren: () =>\n          import(\"./familly/familly.module\").then((m) => m.FamillyPageModule),\n      },\n      {\n        path: \"profile\",\n        loadChildren: () =>\n          import(\"./profile/profile.module\").then((m) => m.ProfilePageModule),\n      },\n      {\n        path: 'assoc-praticiens',\n        loadChildren: () => import('./assoc-praticiens/assoc-praticiens.module').then(m => m.AssocPraticiensPageModule)\n      },\n    ],\n  },\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PatientPageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { PatientPageRoutingModule } from './patient-routing.module';\n\nimport { PatientPage } from './patient.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    PatientPageRoutingModule\n  ],\n  declarations: [PatientPage]\n})\nexport class PatientPageModule {}\n","export default \".menu-praticien {\\n  height: 200px;\\n  width: 400px;\\n  background: var(--ion-color-sgreen);\\n  transform: rotate(-15deg);\\n  background: linear-gradient(90deg, var(--ion-color-sgreen) 0%, var(--ion-color-sgreen) 100%);\\n  box-shadow: 0px 1px 10px rgba(98, 145, 255, 0.5);\\n  border-radius: 10px 10px 10px 50px;\\n  margin-top: -50px;\\n  margin-bottom: 60px;\\n}\\n\\n.header-content {\\n  position: absolute;\\n  top: 30px;\\n  left: 15px;\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.header-content img {\\n  width: 80px;\\n  height: 80px;\\n  border-radius: 50%;\\n  border: 1px solid #1b9b3d;\\n  margin-right: 10px;\\n}\\n\\n.header-content h2 {\\n  font-weight: 300;\\n  color: white;\\n}\\n\\n.header-content p {\\n  font-size: 12px;\\n  color: white;\\n  font-weight: 100;\\n}\\n\\n.menu-items {\\n  margin: 0px;\\n}\\n\\n.menu-items ion-menu-toggle ion-icon {\\n  margin-right: 20px;\\n  color: #999999;\\n}\\n\\n.menu-items ion-menu-toggle ion-item {\\n  padding-left: 20px;\\n  margin-bottom: 10px;\\n}\\n\\nion-item,\\n.containSubpage {\\n  padding-left: 20px;\\n  margin-bottom: 10px;\\n}\\n\\n.subPages {\\n  padding-left: 60px;\\n  margin-bottom: 10px;\\n}\\n\\n.active-item {\\n  margin-left: -25px;\\n  color: var(--ion-color-sgreen);\\n}\\n\\n.active-item-subpages {\\n  margin-left: 25px;\\n  color: var(--ion-color-sgreen);\\n}\\n\\n.logout {\\n  display: flex;\\n  justify-content: center;\\n  justify-items: center;\\n  border-radius: 7px;\\n}\\n\\n.profile_redirect {\\n  display: flex;\\n}\\n\\n.profile_redirect .name {\\n  text-align: center;\\n  margin-top: revert;\\n  margin-bottom: auto;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcGF0aWVudC9wYXRpZW50LnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGFBQUE7RUFDQSxZQUFBO0VBQ0EsbUNBQUE7RUFDQSx5QkFBQTtFQUNBLDRGQUFBO0VBS0EsZ0RBQUE7RUFDQSxrQ0FBQTtFQUNBLGlCQUFBO0VBQ0EsbUJBQUE7QUFIRjs7QUFNQTtFQUNFLGtCQUFBO0VBQ0EsU0FBQTtFQUNBLFVBQUE7RUFDQSxhQUFBO0VBQ0EsbUJBQUE7QUFIRjs7QUFJRTtFQUNFLFdBQUE7RUFDQSxZQUFBO0VBQ0Esa0JBQUE7RUFDQSx5QkFBQTtFQUNBLGtCQUFBO0FBRko7O0FBS0U7RUFDRSxnQkFBQTtFQUNBLFlBQUE7QUFISjs7QUFNRTtFQUNFLGVBQUE7RUFDQSxZQUFBO0VBQ0EsZ0JBQUE7QUFKSjs7QUFRQTtFQUNFLFdBQUE7QUFMRjs7QUFRSTtFQUNFLGtCQUFBO0VBQ0EsY0FBQTtBQU5OOztBQVFJO0VBQ0Usa0JBQUE7RUFDQSxtQkFBQTtBQU5OOztBQVdBOztFQUVFLGtCQUFBO0VBQ0EsbUJBQUE7QUFSRjs7QUFXQTtFQUNFLGtCQUFBO0VBQ0EsbUJBQUE7QUFSRjs7QUFXQTtFQUNFLGtCQUFBO0VBQ0EsOEJBQUE7QUFSRjs7QUFXQTtFQUNFLGlCQUFBO0VBQ0EsOEJBQUE7QUFSRjs7QUFXQTtFQUNFLGFBQUE7RUFDQSx1QkFBQTtFQUNBLHFCQUFBO0VBQ0Esa0JBQUE7QUFSRjs7QUFXQTtFQUNFLGFBQUE7QUFSRjs7QUFTRTtFQUNFLGtCQUFBO0VBQ0Esa0JBQUE7RUFDQSxtQkFBQTtBQVBKIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvcGF0aWVudC9wYXRpZW50LnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tZW51LXByYXRpY2llbiB7XHJcbiAgaGVpZ2h0OiAyMDBweDtcclxuICB3aWR0aDogNDAwcHg7XHJcbiAgYmFja2dyb3VuZDogdmFyKC0taW9uLWNvbG9yLXNncmVlbik7XHJcbiAgdHJhbnNmb3JtOiByb3RhdGUoLTE1ZGVnKTtcclxuICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoXHJcbiAgICA5MGRlZyxcclxuICAgIHZhcigtLWlvbi1jb2xvci1zZ3JlZW4pIDAlLFxyXG4gICAgdmFyKC0taW9uLWNvbG9yLXNncmVlbikgMTAwJVxyXG4gICk7XHJcbiAgYm94LXNoYWRvdzogMHB4IDFweCAxMHB4IHJnYmEoOTgsIDE0NSwgMjU1LCAwLjUpO1xyXG4gIGJvcmRlci1yYWRpdXM6IDEwcHggMTBweCAxMHB4IDUwcHg7XHJcbiAgbWFyZ2luLXRvcDogLTUwcHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogNjBweDtcclxufVxyXG5cclxuLmhlYWRlci1jb250ZW50IHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgdG9wOiAzMHB4O1xyXG4gIGxlZnQ6IDE1cHg7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gIGltZyB7XHJcbiAgICB3aWR0aDogODBweDtcclxuICAgIGhlaWdodDogODBweDtcclxuICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICMxYjliM2Q7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgfVxyXG5cclxuICBoMiB7XHJcbiAgICBmb250LXdlaWdodDogMzAwO1xyXG4gICAgY29sb3I6IHdoaXRlO1xyXG4gIH1cclxuXHJcbiAgcCB7XHJcbiAgICBmb250LXNpemU6IDEycHg7XHJcbiAgICBjb2xvcjogd2hpdGU7XHJcbiAgICBmb250LXdlaWdodDogMTAwO1xyXG4gIH1cclxufVxyXG5cclxuLm1lbnUtaXRlbXMge1xyXG4gIG1hcmdpbjogMHB4O1xyXG5cclxuICBpb24tbWVudS10b2dnbGUge1xyXG4gICAgaW9uLWljb24ge1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6IDIwcHg7XHJcbiAgICAgIGNvbG9yOiAjOTk5OTk5O1xyXG4gICAgfVxyXG4gICAgaW9uLWl0ZW0ge1xyXG4gICAgICBwYWRkaW5nLWxlZnQ6IDIwcHg7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG5pb24taXRlbSxcclxuLmNvbnRhaW5TdWJwYWdlIHtcclxuICBwYWRkaW5nLWxlZnQ6IDIwcHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxufVxyXG5cclxuLnN1YlBhZ2VzIHtcclxuICBwYWRkaW5nLWxlZnQ6IDYwcHg7XHJcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxufVxyXG5cclxuLmFjdGl2ZS1pdGVtIHtcclxuICBtYXJnaW4tbGVmdDogLTI1cHg7XHJcbiAgY29sb3I6IHZhcigtLWlvbi1jb2xvci1zZ3JlZW4pO1xyXG59XHJcblxyXG4uYWN0aXZlLWl0ZW0tc3VicGFnZXMge1xyXG4gIG1hcmdpbi1sZWZ0OiAyNXB4O1xyXG4gIGNvbG9yOiB2YXIoLS1pb24tY29sb3Itc2dyZWVuKTtcclxufVxyXG5cclxuLmxvZ291dCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICBqdXN0aWZ5LWl0ZW1zOiBjZW50ZXI7XHJcbiAgYm9yZGVyLXJhZGl1czogN3B4O1xyXG59XHJcblxyXG4ucHJvZmlsZV9yZWRpcmVjdCB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICAubmFtZSB7XHJcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgICBtYXJnaW4tdG9wOiByZXZlcnQ7XHJcbiAgICBtYXJnaW4tYm90dG9tOiBhdXRvO1xyXG4gIH1cclxufVxyXG4iXX0= */\";","import { Component, OnInit } from \"@angular/core\";\nimport { MenuController, NavController, Platform } from \"@ionic/angular\";\nimport { Router, RouterEvent } from \"@angular/router\";\nimport { AuthService } from \"src/app/services/auth.service\";\nimport { PraticienService } from \"src/app/services/praticien.service\";\nimport { Storage } from \"@ionic/storage\";\nimport { PatientService } from 'src/app/services/patient.service';\nimport { IProfilePatient } from 'src/app/Interfaces/patient.interface';\n\n@Component({\n  selector: \"app-patient\",\n  templateUrl: \"./patient.page.html\",\n  styleUrls: [\"./patient.page.scss\"],\n})\nexport class PatientPage implements OnInit {\n  pages = [\n    {\n      title: \"Callendrier de vaccination\",\n      url: \"/patient/vaccination\",\n    },\n    {\n      title: \"Rendez-vous\",\n      url: \"/patient/rendez-vous\",\n      // subPages: [\n      //   {\n      //     title: \"Nouveau\",\n      //     url: \"/patient/rendez-vous/nouveau\",\n      //   },\n      //   {\n      //     title: \"En attente\",\n      //     url: \"\",\n      //   },\n      //   {\n      //     title: \"Valider\",\n      //     url: \"\",\n      //   },\n      //   {\n      //     title: \"Rejeter\",\n      //     url: \"\",\n      //   },\n      //   {\n      //     title: \"Proposition\",\n      //     url: \"\",\n      //   },\n      // ],\n    },\n    {\n      title: \"My Praticiens\",\n      url: \"/patient/assoc-praticiens\",\n    },\n    {\n      title: \"Famille\",\n      url: \"/patient/family\",\n    },\n  ];\n  selectedPath = \"\";\n  name;\n  fonction;\n  constructor(\n    public menuCtrl: MenuController,\n    private router: Router,\n    private plt: Platform,\n    private authSrvc: AuthService,\n    private storage: Storage,\n    public navCtrl: NavController,\n    public patienSrv: PatientService\n  ) {\n    this.router.events.subscribe((event: RouterEvent) => {\n      this.selectedPath = event.url;\n      // console.log(\"PatientPage -> this.selectedPath\", this.selectedPath);\n    });\n  }\n  async ngOnInit() {\n    this.selectedPath = \"/patient/rendez-vous\";\n    this.initialize();\n    //Called after the constructor, initializing input properties, and the first call to ngOnChanges.\n    //Add 'implements OnInit' to the class.\n  }\n  async openFirst() {\n    //setTimeout(()=> this.menuCtrl.toggle(\"first\"), 10);\n    this.plt.ready().then(() => {\n      this.menuCtrl.get(\"first\").then((element) => {\n        if (element.isActive) {\n          setTimeout(() => element.toggle(), 10);\n        }\n        // console.log(\n        //   \"PatientPage -> openFirst -> element.offsetWidth\",\n        //   element.offsetWidth\n        // );\n      });\n    });\n  }\n  logout() {\n    this.authSrvc.logout();\n  }\n\n  initialize() {\n    const { roles, username } = this.authSrvc.user;\n    // console.log(\"PatientPage -> initialize -> username\", username);\n    // console.log(\"PatientPage -> initialize -> roles\", roles);\n    // this.name = `${username}`;\n    this.patienSrv.getProfile().subscribe((data: IProfilePatient[]) => {\n      const type = data[0].typePatient == 1 ? \"Adult\" : \"Enfant\";\n      this.name = `${data[0].firstName}  ${data[0].lastName} (${type})`;\n    });\n    this.fonction = \"patient\";\n  }\n\n  async redirect(link) {\n    // console.log(\"PatientPage -> redirect -> link\", link);\n\n    this.navCtrl.navigateForward(link);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { IPatient, IRegisterPatient, IVaccinPatient, IProfilePatient, IPatientFamilyGroup } from \"../Interfaces/patient.interface\";\n\nimport { from } from \"rxjs\";\nimport { CONSTANT } from \"src/constant\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { map } from \"rxjs/operators\";\nimport { environment } from \"src/environments/environment\";\nimport { IUserPraticien } from '../Interfaces/praticien.interface';\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class PatientService {\n  private url = environment.url_dev;\n  private url_api = environment.url_dev_api;\n  private url_apip = environment.url_dev;\n  private rdvData;\n  constructor(public http: HttpClient) { }\n\n  // TODO Get Patients\n  getPatients(): Observable<IPatient[]> {\n    return this.http.get<IPatient[]>(this.url + \"patients\");\n    // return this.http.get(CONSTANT.MOCK_DATA_JSON).pipe(\n    //   map((data: any) => {\n    //     return data.mockPatient;\n    //   })\n    // );\n  }\n\n  getAllRdv() {\n    return this.http.get(`${this.url_apip}patients/rdv`);\n    // return this.http.get(CONSTANT.MOCK_DATA_JSON).pipe(\n    //   map((data: any) => {\n    //     return data.mockRdvListPatient;\n    //   })\n    // );\n  }\n\n  getTracksRdv(excludeTracks?) {\n    return this.http.get(CONSTANT.MOCK_DATA_JSON).pipe(\n      map((data: any) => {\n        // console.log(\"PatientService -> getTracksRdv -> data\", excludeTracks);\n        return data;\n      })\n    );\n  }\n\n  //TODO : Get Vaccin by patient\n  getVaccinByPatient() {\n    return this.http.get<IVaccinPatient[]>(`${this.url_apip}patients/vaccination`);\n\n    // return this.http.get(CONSTANT.MOCK_DATA_JSON).pipe(\n    //   map((data: any) => {\n    //     return data.mockVaccinPatient;\n    //   })\n    // );\n  }\n\n  registerPatient(data: IRegisterPatient) {\n    return this.http.post<IRegisterPatient>(`${this.url_api}users`, data);\n    Object.keys(data).forEach((element) => {\n      console.log(\"PatientService -> registerPatient -> element\", element);\n      console.log(\"register => \", data[element]);\n    });\n  }\n\n  getProfile() {\n    return this.http.get<IProfilePatient[]>(`${this.url_apip}patient/profile`);\n\n    // return this.http.get(CONSTANT.MOCK_DATA_JSON).pipe(\n    //   map((data: any) => {\n    //     return data.mockPatientProfile;\n    //   })\n    // );\n  }\n\n  updateProfile(data) {\n    return this.http.post(`${this.url_apip}patient/profile/edit`, data);\n  }\n\n  getAssociatedPraticians(): Observable<IUserPraticien[]> {\n    const res = this.http.get<IUserPraticien[]>(`${this.url_apip}patients/praticien`);\n    res.subscribe(data => {\n      console.log(\"PatientService -> constructor -> res\", data);\n    })\n    return res;\n  }\n\n  getFamily() {\n    const res = this.http.get(`${this.url_apip}patients/family`);\n    res.subscribe(data => console.log(\"PatientService -> getFamily -> res\", data))\n    return res;\n  }\n\n  addGroupFamily(nomGroupe) {\n    const data = {\n      designation: nomGroupe,\n    }\n    console.log(\"LL: PatientService -> addGroupFamily -> data\", data)\n    const res = this.http.post(`${this.url_apip}register/group`, data);\n    return res;\n  }\n\n  addGroupFamilyMember(data) {\n    console.log(\"PatientService -> addGroupFamilyMember -> data\", data)\n    const res = this.http.post(`${this.url_api}add/membres`, data);\n    return res;\n  }\n\n  deleteFamilyMember(_idFamily) {\n    const res = this.http.delete(`${this.url_api}family/${_idFamily}`);\n    return res;\n  }\n\n  interventionPraticien(data) {\n    console.log(\"####################LL: PatientService -> interventionPraticien -> data\", data)\n    const res = this.http.post(`${this.url_apip}intervention`, data);\n    return res;\n  }\n\n  chekIfPractitionerIsAssociated(_idPraticien) {\n    const res = this.http.get(`${this.url_apip}patients/check-association/${_idPraticien}`);\n    return res;\n  }\n\n  proposeRdv(data) {\n    const res = this.http.post(`${this.url_apip}add/rdv`, data);\n    return res;\n  }\n\n  cancelRdvProposition(data) {\n    const res = this.http.post(`${this.url_api}cancel/rdv`, data);\n    return res;\n  }\n\n  postVaccinGeneration(_idPraticien) {\n    const res = this.http.post(`${this.url_apip}patient/generation`, { praticien: _idPraticien });\n    return res;\n  }\n\n}\n"]}