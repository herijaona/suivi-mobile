{"version":3,"sources":["webpack:///src/app/pages/praticien/proposition-rdv/new-rdv/new-rdv.component.html","webpack:///src/app/pages/praticien/proposition-rdv/proposition-rdv.page.html","webpack:///src/app/pages/praticien/proposition-rdv/new-rdv/new-rdv.component.scss","webpack:///src/app/pages/praticien/proposition-rdv/new-rdv/new-rdv.component.ts","webpack:///src/app/pages/praticien/proposition-rdv/proposition-rdv-routing.module.ts","webpack:///src/app/pages/praticien/proposition-rdv/proposition-rdv.module.ts","webpack:///src/app/pages/praticien/proposition-rdv/proposition-rdv.page.scss","webpack:///src/app/pages/praticien/proposition-rdv/proposition-rdv.page.ts","webpack:///src/app/services/patient.service.ts"],"names":["NewRdvComponent","praticienSrvc","navCtrl","navParms","modalCtrl","storage","propositionForm","patient","required","dateRdv","heureRdv","description","patients","get","forEach","element","dataFormStep","field","valid","touched","untouched","prop","value","id","proposeRdv","backToList","navigateRoot","dismiss","dismissed","selector","template","routes","path","component","PropositionRdvPageRoutingModule","imports","forChild","exports","PropositionRdvPageModule","forRoot","declarations","PropositionRdvPage","patienSrvc","config","authSrvc","alertCtrl","items","filterdItems","isItemAvailable","changeColor","initializeItems","ios","getPatients","getAllProposeRdv","subscribe","data","Array","from","regroupData","ev","query","target","toLowerCase","requestAnimationFrame","temp","item","groups","res","firstName","includes","lastName","descriptionProposition","push","a","date","reduce","rdv","dateProposition","split","groupArrays","Object","keys","map","sortedActivities","slice","sort","b","Date","getTime","create","cssClass","swipeToClose","componentProps","test","newRdvModal","onDidDismiss","then","present","deletePropositionRdv","header","message","buttons","text","role","handler","deleteProprdv","alert","PatientService","http","url","url_dev","url_api","url_dev_api","url_apip","excludeTracks","MOCK_DATA_JSON","pipe","post","console","log","nomGroupe","designation","_idFamily","_idPraticien","praticien","providedIn"],"mappings":"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","file":"proposition-rdv-proposition-rdv-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Proposition de rendez-vous</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-grid fixed>\\n  <ion-row>\\n    <ion-col size-md=\\\"6\\\" offset-md=\\\"3\\\">\\n      <ion-card>\\n        <ion-card-header>\\n          <ion-card-title> </ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <form\\n            [formGroup]=\\\"propositionForm\\\"\\n            (ngSubmit)=\\\"propose()\\\"\\n            method=\\\"post\\\"\\n          >\\n            <div class=\\\"mb-14\\\">\\n              <label>choisi un patient</label>\\n              <ion-select\\n                placeholder=\\\"Select\\\"\\n                formControlName=\\\"patient\\\"\\n                required\\n              >\\n                <ion-select-option\\n                  *ngFor=\\\"let item of patients\\\"\\n                  [value]=\\\"item.id\\\"\\n                  >{{\\n                    item.firstName.toString() + \\\" \\\" + item.lastName.toString()\\n                  }}</ion-select-option\\n                >\\n                <!-- <ion-select-option></ion-select-option> -->\\n              </ion-select>\\n              <!-- <small\\n                class=\\\"form-text red-color\\\"\\n                *ngIf=\\\"isFieldInvalid(propositionForm, 'patient')\\\"\\n                >This field is required</small\\n              > -->\\n            </div>\\n\\n            <div class=\\\"mb-14\\\">\\n              <label>Propose une date </label>\\n              <ion-datetime\\n                display-format=\\\"MMM DD, YYYY\\\"\\n                formControlName=\\\"dateRdv\\\"\\n                required\\n              ></ion-datetime>\\n              <!-- <small\\n                class=\\\"form-text red-color\\\"\\n                *ngIf=\\\"isFieldInvalid(propositionForm, 'dateRdv')\\\"\\n                >This field is required</small\\n              > -->\\n            </div>\\n\\n            <div class=\\\"mb-14\\\">\\n              <label>Propose un horaire</label>\\n              <ion-datetime\\n                display-format=\\\"h:mm A\\\"\\n                picker-format=\\\"h:mm A\\\"\\n                formControlName=\\\"heureRdv\\\"\\n                required\\n              ></ion-datetime>\\n              <!-- <small\\n                class=\\\"form-text red-color\\\"\\n                *ngIf=\\\"isFieldInvalid(propositionForm, 'heureRdv')\\\"\\n                >This field is required</small\\n              > -->\\n            </div>\\n\\n            <div class=\\\"mb-14\\\">\\n              <label>Description du rendez-vous</label>\\n              <ion-input\\n                type=\\\"text\\\"\\n                required\\n                formControlName=\\\"description\\\"\\n              ></ion-input\\n              ><!-- <small\\n                class=\\\"form-text red-color\\\"\\n                *ngIf=\\\"isFieldInvalid(propositionForm, 'description')\\\"\\n                >This field is required</small\\n              > -->\\n            </div>\\n\\n            <ion-row>\\n              <ion-col>\\n                <ion-button color=\\\"sred\\\" expand=\\\"block\\\" (click)=\\\"dismiss()\\\">\\n                  <ion-icon slot=\\\"start\\\" name=\\\"\\\"> x </ion-icon\\n                  >Cancel</ion-button\\n                >\\n                <legend class=\\\"ion-text-center\\\"></legend>\\n                <ion-button type=\\\"submit\\\" color=\\\"sgreen\\\" expand=\\\"block\\\"\\n                  ><ion-icon slot=\\\"start\\\" name=\\\"save-outline\\\"></ion-icon>\\n                  Save\\n                </ion-button>\\n              </ion-col>\\n            </ion-row>\\n          </form>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-col>\\n  </ion-row>\\n</ion-grid>\\n\";","export default \"<ion-header translutient=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons *ngIf=\\\"!ios && !showSearchbar\\\" slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n      <ion-title *ngIf=\\\"!ios && !showSearchbar\\\">Proposition</ion-title>\\n    </ion-buttons>\\n    <ion-menu-button *ngIf=\\\"ios\\\" slot=\\\"start\\\"></ion-menu-button>\\n    <ion-title *ngIf=\\\"ios\\\">Proposition</ion-title>\\n\\n    <ion-searchbar\\n      (ionInput)=\\\"filterItems($event)\\\"\\n      debounce=\\\"500\\\"\\n      placeholder=\\\"Rechercher\\\"\\n      type=\\\"text\\\"\\n      showCancelButton=\\\"always\\\"\\n      *ngIf=\\\"showSearchbar\\\"\\n      (ionCancel)=\\\"showSearchbar = false\\\"\\n    ></ion-searchbar>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button *ngIf=\\\"!ios && !showSearchbar\\\" (click)=\\\"showSearchbar = true\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"search\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n  <ion-toolbar *ngIf=\\\"ios\\\">\\n    <ion-searchbar\\n      (ionInput)=\\\"filterItems($event)\\\"\\n      debounce=\\\"500\\\"\\n      placeholder=\\\"Rechercher\\\"\\n      type=\\\"text\\\"\\n      (ionCancel)=\\\"showSearchbar = false\\\"\\n    ></ion-searchbar>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list lines=\\\"none\\\" *ngIf=\\\"isItemAvailable\\\">\\n    <ion-item-group *ngFor=\\\"let rdv of filterdItems\\\">\\n      <ion-item-divider sticky>\\n        <ion-label class=\\\"ion-text-center\\\"> {{ rdv.date}} </ion-label>\\n      </ion-item-divider>\\n\\n      <ion-item-sliding\\n        *ngFor=\\\"let eachRdv of rdv.groups\\\"\\n        #slidingItem\\n        class=\\\"test\\\"\\n      >\\n        <ion-item *ngIf=\\\"eachRdv.patient !== null\\\">\\n          <ion-avatar slot=\\\"start\\\">\\n            <img src=\\\"../../../assets/images/img38.jpg\\\" />\\n          </ion-avatar>\\n          <ion-label>\\n            <h2>{{eachRdv.patient.firstName}} {{eachRdv.patient.lastName}}</h2>\\n            <p>{{eachRdv.dateProposition}}</p>\\n            <p>{{eachRdv.descriptionProposition}}</p>\\n          </ion-label>\\n          <ion-icon slot=\\\"end\\\" name=\\\"pencil-sharp\\\" color=\\\"primary\\\"></ion-icon>\\n\\n          <ion-icon\\n            slot=\\\"end\\\"\\n            name=\\\"trash-bin-sharp\\\"\\n            color=\\\"sred\\\"\\n            (click)=\\\"presentAlertConfirm(eachRdv.id)\\\"\\n          ></ion-icon>\\n        </ion-item>\\n      </ion-item-sliding>\\n    </ion-item-group>\\n  </ion-list>\\n</ion-content>\\n<ion-fab vertical=\\\"bottom\\\" horizontal=\\\"end\\\" slot=\\\"fixed\\\">\\n  <!-- <ion-fab-button [routerLink]=\\\"['new-rdv']\\\"> -->\\n  <ion-fab-button (click)=\\\"openNewRdvModal()\\\" color=\\\"sgreen\\\">\\n    <ion-icon name=\\\"add\\\"></ion-icon>\\n  </ion-fab-button>\\n</ion-fab>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3ByYXRpY2llbi9wcm9wb3NpdGlvbi1yZHYvbmV3LXJkdi9uZXctcmR2LmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit, Input } from \"@angular/core\";\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\nimport { PraticienService } from \"src/app/services/praticien.service\";\nimport { PatientService } from \"src/app/services/patient.service\";\nimport { NavController, NavParams, ModalController } from \"@ionic/angular\";\nimport { IProposeRdv } from \"src/app/Interfaces/propose-rdv.interface\";\nimport { IPatient } from \"src/app/Interfaces/patient.interface\";\nimport { Storage } from \"@ionic/storage\";\n\n@Component({\n  selector: \"app-new-rdv\",\n  templateUrl: \"./new-rdv.component.html\",\n  styleUrls: [\"./new-rdv.component.scss\"],\n})\nexport class NewRdvComponent implements OnInit {\n  @Input() test: String;\n  @Input() patients: IPatient[];\n\n  public propositionForm: FormGroup;\n  selected: any;\n  constructor(\n    private praticienSrvc: PraticienService,\n    private navCtrl: NavController,\n    private navParms: NavParams,\n    private modalCtrl: ModalController,\n    private storage: Storage\n  ) { }\n\n  async ngOnInit() {\n    this.propositionForm = new FormGroup({\n      patient: new FormControl(\"\", [Validators.required]),\n      dateRdv: new FormControl(\"\", [Validators.required]),\n      heureRdv: new FormControl(\"\", [Validators.required]),\n      description: new FormControl(\"\", [Validators.required]),\n    });\n    // console.log(\n    //   \"NewRdvComponent -> patients -> test\",\n    //   this.navParms.get(\"patients\")\n    // );\n    this.patients = this.navParms.get(\"patients\");\n    this.patients.forEach((element) => {\n      // console.log(\"NewRdvComponent -> patients\", element.firstName);\n    });\n  }\n\n  isFieldInvalid(dataFormStep, field: string) {\n    return (\n      (!dataFormStep.get(field).valid && dataFormStep.get(field).touched) ||\n      (dataFormStep.get(field).untouched && !dataFormStep.get(field).valid)\n    );\n  }\n\n  async propose() {\n    const prop: IProposeRdv = {\n      description: this.propositionForm.value.description,\n      patient: this.propositionForm.value.patient,\n      dateRdv: this.propositionForm.value.dateRdv,\n      heureRdv: this.propositionForm.value.heureRdv,\n      // id: await this.praticienSrvc.getUserIDByStorage(),\n      id: 0,\n    };\n\n    // console.log(\n    //   this.propositionForm.value.patient,\n    //   this.propositionForm.value.dateRdv,\n    //   this.propositionForm.value.description,\n    //   this.propositionForm.value.heureRdv,\n    //   prop.id\n    // );\n    if (this.propositionForm.valid) {\n      // console.log(\" proposition envoyé \");\n\n      this.praticienSrvc.proposeRdv(prop);\n      this.backToList();\n    } else {\n      // console.log(\" not valid \");\n    }\n  }\n\n  backToList() {\n    this.navCtrl.navigateRoot(\"/praticien/proposition-rdv\");\n    this.dismiss();\n  }\n\n  async cancel() {\n    // console.log(\" cancel \");\n    this.backToList();\n  }\n\n  dismiss() {\n    // using the injected ModalController this page\n    // can \"dismiss\" itself and optionally pass back data\n    this.modalCtrl.dismiss({\n      dismissed: true,\n    });\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { PropositionRdvPage } from \"./proposition-rdv.page\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: PropositionRdvPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class PropositionRdvPageRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { PropositionRdvPageRoutingModule } from \"./proposition-rdv-routing.module\";\n\nimport { PropositionRdvPage } from \"./proposition-rdv.page\";\nimport { NewRdvComponent } from \"./new-rdv/new-rdv.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule.forRoot(),\n    PropositionRdvPageRoutingModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [PropositionRdvPage, NewRdvComponent],\n})\nexport class PropositionRdvPageModule {}\n","export default \"/** content **/\\nion-content ion-row ion-col ion-icon {\\n  border: 1px solid rgba(174, 170, 170, 0.42);\\n  padding: 19px 30px;\\n}\\n.display-block {\\n  display: block;\\n}\\n.list-item .icon-arrow-forward {\\n  position: absolute;\\n  right: 16px;\\n  top: 19px;\\n}\\nh2 {\\n  text-align: left;\\n  font-size: 14px;\\n  color: black;\\n}\\nh3 {\\n  color: gray;\\n  font-size: 11px;\\n}\\ndiv.p {\\n  color: gray;\\n  font-size: 11px;\\n}\\nsvg {\\n  position: absolute;\\n  right: 17px;\\n  top: 28px;\\n  font-size: 22px;\\n  width: 9px;\\n}\\nion-content ion-list {\\n  padding: 3px;\\n}\\n.test {\\n  /* border-left: 2px solid var(--ion-color-sgreen); */\\n  padding-left: 5px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcHJhdGljaWVuL3Byb3Bvc2l0aW9uLXJkdi9wcm9wb3NpdGlvbi1yZHYucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGNBQUE7QUFLTTtFQUNFLDJDQUFBO0VBQ0Esa0JBQUE7QUFIUjtBQVNBO0VBQ0UsY0FBQTtBQU5GO0FBVUU7RUFDRSxrQkFBQTtFQUNBLFdBQUE7RUFDQSxTQUFBO0FBUEo7QUFXQTtFQUNFLGdCQUFBO0VBQ0EsZUFBQTtFQUNBLFlBQUE7QUFSRjtBQVdBO0VBQ0UsV0FBQTtFQUNBLGVBQUE7QUFSRjtBQVdBO0VBQ0UsV0FBQTtFQUNBLGVBQUE7QUFSRjtBQVdBO0VBQ0Usa0JBQUE7RUFDQSxXQUFBO0VBQ0EsU0FBQTtFQUNBLGVBQUE7RUFDQSxVQUFBO0FBUkY7QUFZRTtFQUNFLFlBQUE7QUFUSjtBQW9CQTtFQUNFLG9EQUFBO0VBQ0EsaUJBQUE7QUFqQkYiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9wcmF0aWNpZW4vcHJvcG9zaXRpb24tcmR2L3Byb3Bvc2l0aW9uLXJkdi5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiogY29udGVudCAqKi9cclxuXHJcbmlvbi1jb250ZW50IHtcclxuICBpb24tcm93IHtcclxuICAgIGlvbi1jb2wge1xyXG4gICAgICBpb24taWNvbiB7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgcmdiYSgxNzQsIDE3MCwgMTcwLCAwLjQyKTtcclxuICAgICAgICBwYWRkaW5nOiAxOXB4IDMwcHg7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbn1cclxuXHJcbi5kaXNwbGF5LWJsb2NrIHtcclxuICBkaXNwbGF5OiBibG9jaztcclxufVxyXG5cclxuLmxpc3QtaXRlbSB7XHJcbiAgLmljb24tYXJyb3ctZm9yd2FyZCB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICByaWdodDogMTZweDtcclxuICAgIHRvcDogMTlweDtcclxuICB9XHJcbn1cclxuXHJcbmgyIHtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxuICBjb2xvcjogYmxhY2s7XHJcbn1cclxuXHJcbmgzIHtcclxuICBjb2xvcjogZ3JheTtcclxuICBmb250LXNpemU6IDExcHg7XHJcbn1cclxuXHJcbmRpdi5wIHtcclxuICBjb2xvcjogZ3JheTtcclxuICBmb250LXNpemU6IDExcHg7XHJcbn1cclxuXHJcbnN2ZyB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHJpZ2h0OiAxN3B4O1xyXG4gIHRvcDogMjhweDtcclxuICBmb250LXNpemU6IDIycHg7XHJcbiAgd2lkdGg6IDlweDtcclxufVxyXG5cclxuaW9uLWNvbnRlbnQge1xyXG4gIGlvbi1saXN0IHtcclxuICAgIHBhZGRpbmc6IDNweDtcclxuICB9XHJcbn1cclxuXHJcbiRjYXRlZ29yaWVzOiAoXHJcbiAgaW9uaWM6IHZhcigtLWlvbi1jb2xvci1wcmltYXJ5KSxcclxuICBjb21tdW5pY2F0aW9uOiAjOGU4ZDkzLFxyXG4gIHByb3Bvc2l0aW9uOiAjZmVkMDM1LFxyXG4gIGNvbnN1bHRhdGlvbjogIzY2MDBjYyxcclxuKTtcclxuXHJcbi50ZXN0IHtcclxuICAvKiBib3JkZXItbGVmdDogMnB4IHNvbGlkIHZhcigtLWlvbi1jb2xvci1zZ3JlZW4pOyAqL1xyXG4gIHBhZGRpbmctbGVmdDogNXB4O1xyXG59XHJcbiJdfQ== */\";","import { Component, OnInit } from \"@angular/core\";\nimport { ModalController, Config, AlertController } from \"@ionic/angular\";\nimport { NewRdvComponent } from \"./new-rdv/new-rdv.component\";\nimport { PraticienService } from \"src/app/services/praticien.service\";\nimport { PatientService } from \"src/app/services/patient.service\";\nimport { AuthService } from \"src/app/services/auth.service\";\nimport { Storage } from \"@ionic/storage\";\nimport { IProposeRdv } from \"src/app/Interfaces/propose-rdv.interface\";\n\n@Component({\n  selector: \"app-proposition-rdv\",\n  templateUrl: \"./proposition-rdv.page.html\",\n  styleUrls: [\"./proposition-rdv.page.scss\"],\n})\n\n// TODO delete + Modifier\nexport class PropositionRdvPage implements OnInit {\n  public patients;\n  items: any = [];\n  filterdItems: any = [];\n  isItemAvailable = true;\n  showSearchbar: boolean;\n  changeColor = true;\n  ios: boolean;\n  constructor(\n    public modalCtrl: ModalController,\n    private praticienSrvc: PraticienService,\n    private patienSrvc: PatientService,\n    private config: Config,\n    private authSrvc: AuthService,\n    private storage: Storage,\n    private alertCtrl: AlertController\n  ) { }\n\n  ionViewWillEnter() {\n    this.initializeItems();\n  }\n\n  ngOnInit() {\n    this.ios = this.config.get(\"mode\") === \"ios\";\n    this.initializeItems();\n    this.getPatients();\n  }\n\n  initializeItems() {\n    this.praticienSrvc\n      .getAllProposeRdv(this.storage.get(\"_id\"))\n      .subscribe((data) => {\n        // console.log(\"PropositionRdvPage -> initializeItems -> data\", data);\n        this.items = [...Array.from(this.regroupData(data))];\n        this.filterdItems = [...this.items];\n      });\n  }\n\n  filterItems(ev: any) {\n    const query = ev.target.value.toLowerCase();\n    // console.log(\"PropositionRdvPage -> getItems -> query\", query);\n    // console.log(\"PropositionRdvPage -> filterItems -> this.items\", this.items);\n\n    requestAnimationFrame(() => {\n      if (!query || query === \"\") {\n        this.filterdItems = [...this.items];\n        return;\n      }\n      let temp: any = [];\n      this.filterdItems = temp;\n\n      [...this.items].forEach((item) => {\n        let data: any = [];\n        item.groups.forEach((res) => {\n          if (query) {\n            if (\n              res.patient.firstName.includes(query) ||\n              res.patient.lastName.includes(query) ||\n              res.descriptionProposition.includes(query)\n            ) {\n              data.push(res);\n            }\n          }\n        });\n        const a = {\n          date: item.date,\n          groups: data,\n        };\n\n        temp.push(a);\n      });\n    });\n  }\n\n  //TODO: format date\n\n  regroupData(data) {\n    const groups = data.reduce((groups, rdv) => {\n      const date = rdv.dateProposition.split(\"T\")[0];\n      if (!groups[date]) {\n        groups[date] = [];\n      }\n      groups[date].push(rdv);\n      return groups;\n    }, {});\n\n    const groupArrays = Object.keys(groups).map((date) => {\n      return {\n        date,\n        groups: groups[date],\n      };\n    });\n    const sortedActivities = groupArrays.slice().sort(function (a, b) {\n      return new Date(a.date).getTime() - new Date(b.date).getTime();\n    });\n    return sortedActivities;\n  }\n\n  async openNewRdvModal() {\n    const newRdvModal = await this.modalCtrl.create({\n      component: NewRdvComponent,\n      cssClass: \"test-class\",\n      swipeToClose: true,\n      componentProps: {\n        patients: this.patients,\n        test: \"test\",\n      },\n    });\n    newRdvModal.onDidDismiss().then(() => {\n      this.initializeItems();\n    });\n    return await newRdvModal.present();\n  }\n\n  async getPatients() {\n    this.patienSrvc.getPatients().subscribe((data) => {\n      // console.log(\"PropositionRdvPage -> getPatients -> data\", data);\n      this.patients = data;\n    });\n  }\n\n  async deleteProprdv(id) {\n    // TODO: confirm delete\n    this.praticienSrvc.deletePropositionRdv(id).subscribe(() => {\n      this.initializeItems();\n    });\n  }\n\n  async presentAlertConfirm(id) {\n    const alert = await this.alertCtrl.create({\n      cssClass: \"my-custom-class\",\n      header: \"Delete\",\n      message: \"Do you really want to delete it ?\",\n      buttons: [\n        {\n          text: \"Cancel\",\n          role: \"cancel\",\n          cssClass: \"secondary\",\n          handler: () => {\n            // console.log(\"Confirm Cancel: blah\");\n          },\n        },\n        {\n          text: \"Okay\",\n          handler: () => {\n            // console.log(\"data deleted id\" + id);\n            this.deleteProprdv(id);\n          },\n        },\n      ],\n    });\n\n    await alert.present();\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { IPatient, IRegisterPatient, IVaccinPatient, IProfilePatient, IPatientFamilyGroup } from \"../Interfaces/patient.interface\";\n\nimport { from } from \"rxjs\";\nimport { CONSTANT } from \"src/constant\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { map } from \"rxjs/operators\";\nimport { environment } from \"src/environments/environment\";\nimport { IUserPraticien } from '../Interfaces/praticien.interface';\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class PatientService {\n  private url = environment.url_dev;\n  private url_api = environment.url_dev_api;\n  private url_apip = environment.url_dev;\n  private rdvData;\n  constructor(public http: HttpClient) { }\n\n  // TODO Get Patients\n  getPatients(): Observable<IPatient[]> {\n    return this.http.get<IPatient[]>(this.url + \"patients\");\n    // return this.http.get(CONSTANT.MOCK_DATA_JSON).pipe(\n    //   map((data: any) => {\n    //     return data.mockPatient;\n    //   })\n    // );\n  }\n\n  getAllRdv() {\n    return this.http.get(`${this.url_apip}patients/rdv`);\n    // return this.http.get(CONSTANT.MOCK_DATA_JSON).pipe(\n    //   map((data: any) => {\n    //     return data.mockRdvListPatient;\n    //   })\n    // );\n  }\n\n  getTracksRdv(excludeTracks?) {\n    return this.http.get(CONSTANT.MOCK_DATA_JSON).pipe(\n      map((data: any) => {\n        // console.log(\"PatientService -> getTracksRdv -> data\", excludeTracks);\n        return data;\n      })\n    );\n  }\n\n  //TODO : Get Vaccin by patient\n  getVaccinByPatient() {\n    return this.http.get<IVaccinPatient[]>(`${this.url_apip}patients/vaccination`);\n\n    // return this.http.get(CONSTANT.MOCK_DATA_JSON).pipe(\n    //   map((data: any) => {\n    //     return data.mockVaccinPatient;\n    //   })\n    // );\n  }\n\n  registerPatient(data: IRegisterPatient) {\n    return this.http.post<IRegisterPatient>(`${this.url_api}users`, data);\n    Object.keys(data).forEach((element) => {\n      console.log(\"PatientService -> registerPatient -> element\", element);\n      console.log(\"register => \", data[element]);\n    });\n  }\n\n  getProfile() {\n    return this.http.get<IProfilePatient[]>(`${this.url_apip}patient/profile`);\n\n    // return this.http.get(CONSTANT.MOCK_DATA_JSON).pipe(\n    //   map((data: any) => {\n    //     return data.mockPatientProfile;\n    //   })\n    // );\n  }\n\n  updateProfile(data) {\n    return this.http.post(`${this.url_apip}patient/profile/edit`, data);\n  }\n\n  getAssociatedPraticians(): Observable<IUserPraticien[]> {\n    const res = this.http.get<IUserPraticien[]>(`${this.url_apip}patients/praticien`);\n    res.subscribe(data => {\n      console.log(\"PatientService -> constructor -> res\", data);\n    })\n    return res;\n  }\n\n  getFamily() {\n    const res = this.http.get(`${this.url_apip}patients/family`);\n    res.subscribe(data => console.log(\"PatientService -> getFamily -> res\", data))\n    return res;\n  }\n\n  addGroupFamily(nomGroupe) {\n    const data = {\n      designation: nomGroupe,\n    }\n    console.log(\"LL: PatientService -> addGroupFamily -> data\", data)\n    const res = this.http.post(`${this.url_apip}register/group`, data);\n    return res;\n  }\n\n  addGroupFamilyMember(data) {\n    console.log(\"PatientService -> addGroupFamilyMember -> data\", data)\n    const res = this.http.post(`${this.url_api}add/membres`, data);\n    return res;\n  }\n\n  deleteFamilyMember(_idFamily) {\n    const res = this.http.delete(`${this.url_api}family/${_idFamily}`);\n    return res;\n  }\n\n  interventionPraticien(data) {\n    console.log(\"####################LL: PatientService -> interventionPraticien -> data\", data)\n    const res = this.http.post(`${this.url_apip}intervention`, data);\n    return res;\n  }\n\n  chekIfPractitionerIsAssociated(_idPraticien) {\n    const res = this.http.get(`${this.url_apip}patients/check-association/${_idPraticien}`);\n    return res;\n  }\n\n  proposeRdv(data) {\n    const res = this.http.post(`${this.url_apip}add/rdv`, data);\n    return res;\n  }\n\n  cancelRdvProposition(data) {\n    const res = this.http.post(`${this.url_api}cancel/rdv`, data);\n    return res;\n  }\n\n  postVaccinGeneration(_idPraticien) {\n    const res = this.http.post(`${this.url_apip}patient/generation`, { praticien: _idPraticien });\n    return res;\n  }\n\n}\n"]}