{"version":3,"sources":["./node_modules/@ionic/core/dist/esm/button-active-0d5784f9.js","./node_modules/@ionic/core/dist/esm/framework-delegate-d1eb6504.js","./node_modules/@ionic/core/dist/esm/haptic-7b8ba70a.js","./node_modules/@ionic/core/dist/esm/spinner-configs-c78e170e.js","./node_modules/@ionic/core/dist/esm/theme-3f0b0c04.js","./src/app/services/data-transformer.service.ts","./src/app/services/patient.service.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAqD;AACD;AACmE;;AAEvH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,4DAAS;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,wEAAa;AACxB;AACA;AACA;AACA,uEAAuE,qDAAoB;AAC3F,sEAAsE,qDAAsB;AAC5F;AACA;AACA,YAAY,6DAAkB;AAC9B;AACA;AACA,KAAK;AACL;;AAE0C;;;;;;;;;;;;;AC/D1C;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEsD;;;;;;;;;;;;;ACjCtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,QAAQ;AAC/B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,QAAQ;AACrC,KAAK;AACL;AACA,qBAAqB,iBAAiB;AACtC,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,iBAAiB;AACpD;AACA;AACA;AACA;;AAEoI;;;;;;;;;;;;;ACzGpI;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,sCAAsC,mBAAmB;AACzD;AACA;AACA;AACA;AACA,8BAA8B,oBAAoB;AAClD,+BAA+B,oBAAoB;AACnD;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,gBAAgB;AAC/C;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,wCAAwC,sCAAsC;AAC9E,sCAAsC,4BAA4B;AAClE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEyB;;;;;;;;;;;;;AC7GzB;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,MAAM;AAC5B,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEqF;;;;;;;;;;;;;;;;;;ACzC1C;IAO9B,sBAAsB,SAAtB,sBAAsB;IACjC,gBAAe,CAAC;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","file":"common-es2015.js","sourcesContent":["import { c as writeTask } from './index-44bf8136.js';\nimport { createGesture } from './index-eea61379.js';\nimport { h as hapticSelectionEnd, a as hapticSelectionStart, b as hapticSelectionChanged } from './haptic-7b8ba70a.js';\n\nconst createButtonActiveGesture = (el, isButton) => {\n    let currentTouchedButton;\n    let initialTouchedButton;\n    const activateButtonAtPoint = (x, y, hapticFeedbackFn) => {\n        if (typeof document === 'undefined') {\n            return;\n        }\n        const target = document.elementFromPoint(x, y);\n        if (!target || !isButton(target)) {\n            clearActiveButton();\n            return;\n        }\n        if (target !== currentTouchedButton) {\n            clearActiveButton();\n            setActiveButton(target, hapticFeedbackFn);\n        }\n    };\n    const setActiveButton = (button, hapticFeedbackFn) => {\n        currentTouchedButton = button;\n        if (!initialTouchedButton) {\n            initialTouchedButton = currentTouchedButton;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.add('ion-activated'));\n        hapticFeedbackFn();\n    };\n    const clearActiveButton = (dispatchClick = false) => {\n        if (!currentTouchedButton) {\n            return;\n        }\n        const buttonToModify = currentTouchedButton;\n        writeTask(() => buttonToModify.classList.remove('ion-activated'));\n        /**\n         * Clicking on one button, but releasing on another button\n         * does not dispatch a click event in browsers, so we\n         * need to do it manually here. Some browsers will\n         * dispatch a click if clicking on one button, dragging over\n         * another button, and releasing on the original button. In that\n         * case, we need to make sure we do not cause a double click there.\n         */\n        if (dispatchClick && initialTouchedButton !== currentTouchedButton) {\n            currentTouchedButton.click();\n        }\n        currentTouchedButton = undefined;\n    };\n    return createGesture({\n        el,\n        gestureName: 'buttonActiveDrag',\n        threshold: 0,\n        onStart: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionStart),\n        onMove: ev => activateButtonAtPoint(ev.currentX, ev.currentY, hapticSelectionChanged),\n        onEnd: () => {\n            clearActiveButton(true);\n            hapticSelectionEnd();\n            initialTouchedButton = undefined;\n        }\n    });\n};\n\nexport { createButtonActiveGesture as c };\n","const attachComponent = async (delegate, container, component, cssClasses, componentProps) => {\n    if (delegate) {\n        return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n    if (typeof component !== 'string' && !(component instanceof HTMLElement)) {\n        throw new Error('framework delegate is missing');\n    }\n    const el = (typeof component === 'string')\n        ? container.ownerDocument && container.ownerDocument.createElement(component)\n        : component;\n    if (cssClasses) {\n        cssClasses.forEach(c => el.classList.add(c));\n    }\n    if (componentProps) {\n        Object.assign(el, componentProps);\n    }\n    container.appendChild(el);\n    if (el.componentOnReady) {\n        await el.componentOnReady();\n    }\n    return el;\n};\nconst detachComponent = (delegate, element) => {\n    if (element) {\n        if (delegate) {\n            const container = element.parentElement;\n            return delegate.removeViewFromDom(container, element);\n        }\n        element.remove();\n    }\n    return Promise.resolve();\n};\n\nexport { attachComponent as a, detachComponent as d };\n","const HapticEngine = {\n    getEngine() {\n        const win = window;\n        return (win.TapticEngine) || (win.Capacitor && win.Capacitor.isPluginAvailable('Haptics') && win.Capacitor.Plugins.Haptics);\n    },\n    available() {\n        return !!this.getEngine();\n    },\n    isCordova() {\n        return !!window.TapticEngine;\n    },\n    isCapacitor() {\n        const win = window;\n        return !!win.Capacitor;\n    },\n    impact(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.impact({ style });\n    },\n    notification(options) {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        const style = this.isCapacitor() ? options.style.toUpperCase() : options.style;\n        engine.notification({ style });\n    },\n    selection() {\n        this.impact({ style: 'light' });\n    },\n    selectionStart() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionStart();\n        }\n        else {\n            engine.gestureSelectionStart();\n        }\n    },\n    selectionChanged() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionChanged();\n        }\n        else {\n            engine.gestureSelectionChanged();\n        }\n    },\n    selectionEnd() {\n        const engine = this.getEngine();\n        if (!engine) {\n            return;\n        }\n        if (this.isCapacitor()) {\n            engine.selectionEnd();\n        }\n        else {\n            engine.gestureSelectionEnd();\n        }\n    }\n};\n/**\n * Trigger a selection changed haptic event. Good for one-time events\n * (not for gestures)\n */\nconst hapticSelection = () => {\n    HapticEngine.selection();\n};\n/**\n * Tell the haptic engine that a gesture for a selection change is starting.\n */\nconst hapticSelectionStart = () => {\n    HapticEngine.selectionStart();\n};\n/**\n * Tell the haptic engine that a selection changed during a gesture.\n */\nconst hapticSelectionChanged = () => {\n    HapticEngine.selectionChanged();\n};\n/**\n * Tell the haptic engine we are done with a gesture. This needs to be\n * called lest resources are not properly recycled.\n */\nconst hapticSelectionEnd = () => {\n    HapticEngine.selectionEnd();\n};\n/**\n * Use this to indicate success/failure/warning to the user.\n * options should be of the type `{ style: 'light' }` (or `medium`/`heavy`)\n */\nconst hapticImpact = (options) => {\n    HapticEngine.impact(options);\n};\n\nexport { hapticSelectionStart as a, hapticSelectionChanged as b, hapticSelection as c, hapticImpact as d, hapticSelectionEnd as h };\n","const spinners = {\n    'bubbles': {\n        dur: 1000,\n        circles: 9,\n        fn: (dur, index, total) => {\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            const angle = 2 * Math.PI * index / total;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circles': {\n        dur: 1000,\n        circles: 8,\n        fn: (dur, index, total) => {\n            const step = index / total;\n            const animationDelay = `${(dur * step) - dur}ms`;\n            const angle = 2 * Math.PI * step;\n            return {\n                r: 5,\n                style: {\n                    'top': `${9 * Math.sin(angle)}px`,\n                    'left': `${9 * Math.cos(angle)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'circular': {\n        dur: 1400,\n        elmDuration: true,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 20,\n                cx: 48,\n                cy: 48,\n                fill: 'none',\n                viewBox: '24 24 48 48',\n                transform: 'translate(0,0)',\n                style: {}\n            };\n        }\n    },\n    'crescent': {\n        dur: 750,\n        circles: 1,\n        fn: () => {\n            return {\n                r: 26,\n                style: {}\n            };\n        }\n    },\n    'dots': {\n        dur: 750,\n        circles: 3,\n        fn: (_, index) => {\n            const animationDelay = -(110 * index) + 'ms';\n            return {\n                r: 6,\n                style: {\n                    'left': `${9 - (9 * index)}px`,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 17,\n                y2: 29,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    },\n    'lines-small': {\n        dur: 1000,\n        lines: 12,\n        fn: (dur, index, total) => {\n            const transform = `rotate(${30 * index + (index < 6 ? 180 : -180)}deg)`;\n            const animationDelay = `${(dur * index / total) - dur}ms`;\n            return {\n                y1: 12,\n                y2: 20,\n                style: {\n                    'transform': transform,\n                    'animation-delay': animationDelay,\n                }\n            };\n        }\n    }\n};\nconst SPINNERS = spinners;\n\nexport { SPINNERS as S };\n","const hostContext = (selector, el) => {\n    return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color) => {\n    return (typeof color === 'string' && color.length > 0) ? {\n        'ion-color': true,\n        [`ion-color-${color}`]: true\n    } : undefined;\n};\nconst getClassList = (classes) => {\n    if (classes !== undefined) {\n        const array = Array.isArray(classes) ? classes : classes.split(' ');\n        return array\n            .filter(c => c != null)\n            .map(c => c.trim())\n            .filter(c => c !== '');\n    }\n    return [];\n};\nconst getClassMap = (classes) => {\n    const map = {};\n    getClassList(classes).forEach(c => map[c] = true);\n    return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n        const router = document.querySelector('ion-router');\n        if (router) {\n            if (ev != null) {\n                ev.preventDefault();\n            }\n            return router.push(url, direction, animation);\n        }\n    }\n    return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n","import { Injectable } from \"@angular/core\";\nimport { AlertController } from \"@ionic/angular\";\nimport { from, Observable } from \"rxjs\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class DataTransformerService {\n  constructor() {}\n\n  allData(list): { data: any[]; dataByDate: { date: string; groups: any }[] } {\n    let dataShow: any[] = [];\n    list.forEach((element) => {\n      const dataToPush = Object.assign(element, { show: true });\n      dataShow.push(dataToPush);\n    });\n    const listByDate = this.regroupDataByDate([...dataShow]);\n    const res = {\n      data: dataShow,\n      dataByDate: listByDate,\n    };\n    return res;\n  }\n  // Regrouper les données en fonction de la date\n  regroupDataByDate(data) {\n    const groups = data.reduce((groups, eachData) => {\n      const date = eachData.date.split(\"T\")[0];\n      if (!groups[date]) {\n        groups[date] = [];\n      }\n      groups[date].push(eachData);\n      return groups;\n    }, {});\n\n    const groupArrays = Object.keys(groups).map((date) => {\n      return {\n        date,\n        groups: groups[date],\n      };\n    });\n    const sortedActivities = groupArrays.slice().sort(function (a, b) {\n      return new Date(a.date).getTime() - new Date(b.date).getTime();\n    });\n    return sortedActivities;\n  }\n\n  filterItems(\n    query: any,\n    keysOnFilter: any = [],\n    keysStatus: string = \"status\",\n    segment: String = \"all\",\n    dataToFilter: any = [],\n    subKeyParent = null,\n    subkeysOnFilter?: any,\n    OkStatus: string = \"Accepted\"\n  ) {\n    const newData = [...dataToFilter];\n    newData.forEach((item) => {\n      item.groups.forEach((res) => {\n        let goOnSecondFilter = false;\n        if (segment == \"all\") {\n          if (subKeyParent != null) {\n            for (let element of subkeysOnFilter) {\n              if (\n                res[`${subKeyParent}`][`${element}`]\n                  .toLowerCase()\n                  .includes(query)\n              ) {\n                console.log(\n                  \"regroupDataByDate -> subKeyParent true ==========> \",\n                  res\n                );\n                res.show = true;\n                goOnSecondFilter = true;\n                break;\n              } else {\n                res.show = false;\n              }\n            }\n          }\n          if (goOnSecondFilter == false) {\n            for (let element of keysOnFilter) {\n              if (res[`${element}`].toLowerCase().includes(query)) {\n                res.show = true;\n                break;\n              } else {\n                res.show = false;\n              }\n            }\n          }\n        } else {\n          if (res[`${keysStatus}`] === OkStatus) {\n            if (subKeyParent) {\n              for (let element of subkeysOnFilter) {\n                if (\n                  res[`${subKeyParent}`][`${element}`]\n                    .toLowerCase()\n                    .includes(query)\n                ) {\n                  res.show = true;\n                  goOnSecondFilter = true;\n                  break;\n                } else {\n                  res.show = false;\n                }\n              }\n            }\n          }\n          if (goOnSecondFilter == false) {\n            for (let element of keysOnFilter) {\n              if (res[`${element}`].toLowerCase().includes(query)) {\n                res.show = true;\n                break;\n              } else {\n                res.show = false;\n              }\n            }\n          }\n        }\n      });\n    });\n    console.log(\"newData\", newData);\n    return newData;\n  }\n\n  hideOnexclude(\n    exculed: any[] = [],\n    keysOnFilter: any = [],\n    segment: String = \"all\",\n    dataToFilter: any = [],\n    keysStatus: String = \"status\"\n  ) {\n    const newData = [...dataToFilter];\n    newData.forEach((item) => {\n      item.groups.forEach((element) => {\n        if (segment == \"all\") {\n          for (let key of keysOnFilter) {\n            console.log(\n              \"key\",\n              key,\n              \"exculeded\",\n              exculed,\n              \"//////////////////////////\",\n              element[`${key}`].toLowerCase()\n            );\n            if (exculed.includes(element[`${key}`].toLowerCase())) {\n              element.show = false;\n              console.log(\"element.show ---------------- \", element.show);\n              break;\n            } else {\n              element.show = true;\n            }\n          }\n        } else {\n          if (element[`${keysStatus}`] === \"Accepted\") {\n            for (let key of keysOnFilter) {\n              if (exculed.includes(element[`${key}`].toLowerCase())) {\n                element.show = false;\n                break;\n              } else {\n                element.show = true;\n              }\n            }\n          }\n        }\n      });\n    });\n    console.log(\"newData\", newData);\n    return newData;\n  }\n\n  onlyAccepted(\n    dataToFilter: any = [],\n    keysStatus,\n    acceptedString = \"Accepted\",\n    segment = \"all\"\n  ) {\n    const newData = [...dataToFilter];\n\n    if (segment === \"all\") {\n      newData.forEach((item) => {\n        item.groups.forEach((res) => {\n          res.show = true;\n        });\n      });\n      return newData;\n    }\n    newData.forEach((item) => {\n      item.groups.forEach((res) => {\n        const status = res[`${keysStatus}`];\n        if (status === acceptedString) {\n          res.show = true;\n        } else {\n          res.show = false;\n        }\n      });\n    });\n    return newData;\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { IPatient, IRegisterPatient } from \"../Interfaces/patient.interface\";\n\nimport { from } from \"rxjs\";\nimport { CONSTANT } from \"src/constant\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { map } from \"rxjs/operators\";\nimport { environment } from \"src/environments/environment\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class PatientService {\n  private url = environment.url_dev;\n  private url_api = environment.url_dev_api;\n  private rdvData;\n  constructor(public http: HttpClient) {}\n\n  // TODO Get Patients\n  getPatients(): Observable<IPatient[]> {\n    return this.http.get<IPatient[]>(this.url + \"patients\");\n    // return this.http.get(CONSTANT.MOCK_DATA_JSON).pipe(\n    //   map((data: any) => {\n    //     return data.mockPatient;\n    //   })\n    // );\n  }\n\n  getAllRdv() {\n    return this.http.get(CONSTANT.MOCK_DATA_JSON).pipe(\n      map((data: any) => {\n        return data.mockRdvListPatient;\n      })\n    );\n  }\n\n  getTracksRdv(excludeTracks?) {\n    return this.http.get(CONSTANT.MOCK_DATA_JSON).pipe(\n      map((data: any) => {\n        console.log(\"PatientService -> getTracksRdv -> data\", excludeTracks);\n        return data;\n      })\n    );\n  }\n\n  //TODO : Get Vaccin by patient\n  getVaccinByPatient() {\n    return this.http.get(CONSTANT.MOCK_DATA_JSON).pipe(\n      map((data: any) => {\n        return data.mockVaccinPatient;\n      })\n    );\n  }\n\n  registerPatient(data: IRegisterPatient) {\n    this.http.post<IRegisterPatient>(this.url_api, data);\n    Object.keys(data).forEach((element) => {\n      console.log(\"PatientService -> registerPatient -> element\", element);\n      console.log(\"register => \", data[element]);\n    });\n  }\n\n  getProfile() {\n    return this.http.get(CONSTANT.MOCK_DATA_JSON).pipe(\n      map((data: any) => {\n        return data.mockPatientProfile;\n      })\n    );\n  }\n}\n"],"sourceRoot":"webpack:///"}