{"version":3,"sources":["webpack:///src/app/pages/praticien/intervention/intervention.page.html","webpack:///src/app/pages/praticien/intervention/intervention-routing.module.ts","webpack:///src/app/pages/praticien/intervention/intervention.module.ts","webpack:///src/app/pages/praticien/intervention/intervention.page.scss","webpack:///src/app/pages/praticien/intervention/intervention.page.ts"],"names":["routes","path","component","InterventionPageRoutingModule","imports","forChild","exports","InterventionPageModule","declarations","InterventionPage","alertCtrl","praticienSrvc","loadingCtrl","modalCtrl","router","routerOutlet","toastCtrl","config","dayIndex","queryText","segment","excludeTracks","shownSessions","intervention","interventionShow","interventionFiltered","OKSTATUS","NOPSTATUS","PENDSTATUS","getIntervention","ios","get","List","console","log","closeSlidingItems","getListIntervention","subscribe","data","regroupData","groups","reduce","date","split","push","groupArrays","Object","keys","map","sortedActivities","slice","sort","a","b","Date","getTime","temp","forEach","item","res","status","includes","id","create","cssClass","header","message","buttons","text","role","handler","acceptIntervention","alert","present","removeIntervention","find","element","el","test","index","findIndex","selector","template"],"mappings":"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","file":"intervention-intervention-module-es5.js","sourcesContent":["export default \"<ion-header translucent=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons *ngIf=\\\"!ios && !showSearchbar\\\" slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-menu-button *ngIf=\\\"ios\\\"></ion-menu-button>\\n\\n    <ion-segment *ngIf=\\\"ios\\\" [(ngModel)]=\\\"segment\\\" (ionChange)=\\\"showAccepted()\\\">\\n      <ion-segment-button value=\\\"all\\\" color=\\\"sgreen\\\"> All </ion-segment-button>\\n      <ion-segment-button value=\\\"favorites\\\" color=\\\"sgreen\\\">\\n        Accepté\\n      </ion-segment-button>\\n    </ion-segment>\\n    <ion-title *ngIf=\\\"!ios && !showSearchbar\\\">Intervention</ion-title>\\n    <ion-searchbar\\n      *ngIf=\\\"showSearchbar\\\"\\n      showCancelButton=\\\"always\\\"\\n      [(ngModel)]=\\\"queryText\\\"\\n      (ionChange)=\\\"getIntervention()\\\"\\n      (ionCancel)=\\\"showSearchbar = false\\\"\\n      placeholder=\\\"Rechercher\\\"\\n    ></ion-searchbar>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button *ngIf=\\\"!ios && !showSearchbar\\\" (click)=\\\"showSearchbar = true\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"search\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n  <ion-toolbar *ngIf=\\\"!ios\\\">\\n    <ion-segment [(ngModel)]=\\\"segment\\\" (ionChange)=\\\"showAccepted()\\\">\\n      <ion-segment-button value=\\\"all\\\"> Tout </ion-segment-button>\\n      <ion-segment-button value=\\\"accepted\\\"> Accépté </ion-segment-button>\\n    </ion-segment>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen=\\\"true\\\">\\n  <ion-header collapse=\\\"condense\\\">\\n    <ion-toolbar>\\n      <ion-title size=\\\"large\\\">Intervention</ion-title>\\n    </ion-toolbar>\\n    <ion-toolbar>\\n      <ion-searchbar\\n        [(ngModel)]=\\\"queryText\\\"\\n        placeholder=\\\"Search\\\"\\n      ></ion-searchbar>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n  <ion-list #scheduleList [hidden]=\\\"shownSessions === 0\\\">\\n    <ion-item-group *ngFor=\\\"let intervt of interventionFiltered\\\">\\n      <ion-item-divider sticky>\\n        <ion-label class=\\\"ion-text-center\\\"> {{ intervt.date}} </ion-label>\\n      </ion-item-divider>\\n\\n      <ion-item-sliding\\n        *ngFor=\\\"let eachIntervention of intervt.groups\\\"\\n        #slidingItem\\n        [attr.track]=\\\"eachIntervention.type | lowercase\\\"\\n      >\\n        <ion-item>\\n          <ion-grid>\\n            <ion-row>\\n              <ion-col size=\\\"7\\\">\\n                <ion-label class=\\\"information\\\">\\n                  <h2>\\n                    {{eachIntervention.patient}} -\\n                    <label class=\\\"vaccine\\\">\\n                      {{eachIntervention.vaccine}}\\n                    </label>\\n                  </h2>\\n                  <p>{{eachIntervention.date}}</p>\\n                  <p>{{eachIntervention.type}}</p>\\n                </ion-label>\\n              </ion-col>\\n              <ion-col class=\\\"middle\\\" size=\\\"3\\\">\\n                <ion-button\\n                  *ngIf=\\\"eachIntervention.status === OKSTATUS\\\"\\n                  class=\\\"status\\\"\\n                  color=\\\"sgreen\\\"\\n                  expand=\\\"block\\\"\\n                  fill=\\\"outline\\\"\\n                >\\n                  Accepted\\n                </ion-button>\\n\\n                <ion-button\\n                  *ngIf=\\\"eachIntervention.status === NOPSTATUS\\\"\\n                  class=\\\"status\\\"\\n                  color=\\\"sred\\\"\\n                  expand=\\\"block\\\"\\n                  fill=\\\"outline\\\"\\n                >\\n                  Refused\\n                </ion-button>\\n\\n                <ion-button\\n                  *ngIf=\\\"eachIntervention.status === PENDSTATUS\\\"\\n                  class=\\\"status\\\"\\n                  color=\\\"sorange\\\"\\n                  expand=\\\"block\\\"\\n                  fill=\\\"outline\\\"\\n                >\\n                  Pending\\n                </ion-button>\\n              </ion-col>\\n            </ion-row>\\n\\n            <ion-row *ngIf=\\\"eachIntervention.status === PENDSTATUS\\\">\\n              <ion-col class=\\\"btn-cnfrm\\\">\\n                <ion-button\\n                  (click)=\\\"alertAcceptIntervention(eachIntervention.id)\\\"\\n                  expand=\\\"block\\\"\\n                  color=\\\"sgreen\\\"\\n                >\\n                  <ion-icon\\n                    slot=\\\"start\\\"\\n                    name=\\\"checkmark-circle-outline\\\"\\n                  ></ion-icon>\\n                  <ion-label>Accept</ion-label>\\n                </ion-button>\\n\\n                <ion-button\\n                  (click)=\\\"alertRemoveIntervention(eachIntervention.id)\\\"\\n                  expand=\\\"block\\\"\\n                  color=\\\"sred\\\"\\n                >\\n                  <ion-icon name=\\\"close-circle-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                  <ion-label>Decline</ion-label>\\n                </ion-button>\\n              </ion-col>\\n            </ion-row>\\n          </ion-grid>\\n        </ion-item>\\n      </ion-item-sliding>\\n    </ion-item-group>\\n  </ion-list>\\n\\n  <ion-list-header [hidden]=\\\"interventionShow.size != 0\\\">\\n    No Sessions Found\\n  </ion-list-header>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { InterventionPage } from './intervention.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InterventionPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class InterventionPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { InterventionPageRoutingModule } from './intervention-routing.module';\n\nimport { InterventionPage } from './intervention.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    InterventionPageRoutingModule\n  ],\n  declarations: [InterventionPage]\n})\nexport class InterventionPageModule {}\n","export default \"ion-fab-button {\\n  --background: var(--ion-color-step-150, #fff);\\n  --background-hover: var(--ion-color-step-200, #f2f2f2);\\n  --background-focused: var(--ion-color-step-250, #d9d9d9);\\n  --color: var(--ion-color-primary, #3880ff);\\n}\\n\\n/*\\n     * Material Design uses the ripple for activated\\n     * so only style the iOS activated background\\n     */\\n\\n.ios ion-fab-button {\\n  --background-activated: var(--ion-color-step-250, #d9d9d9);\\n}\\n\\nion-item-sliding[track=ionic] ion-label.information {\\n  border-left: 2px solid var(--ion-color-primary);\\n  padding-left: 3px;\\n}\\n\\nion-item-sliding[track=communication] ion-label.information {\\n  border-left: 2px solid #8e8d93;\\n  padding-left: 3px;\\n}\\n\\nion-item-sliding[track=proposition] ion-label.information {\\n  border-left: 2px solid #fed035;\\n  padding-left: 3px;\\n}\\n\\nion-item-sliding[track=intervention] ion-label.information {\\n  border-left: 2px solid #6600cc;\\n  padding-left: 3px;\\n}\\n\\n.status {\\n  text-align: right;\\n  width: 90px;\\n}\\n\\n.middle {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.btn-cnfrm {\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n.vaccine {\\n  color: #515864;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcHJhdGljaWVuL2ludGVydmVudGlvbi9pbnRlcnZlbnRpb24ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsNkNBQUE7RUFDQSxzREFBQTtFQUNBLHdEQUFBO0VBRUEsMENBQUE7QUFBRjs7QUFHQTs7O01BQUE7O0FBSUE7RUFDRSwwREFBQTtBQUFGOztBQVlJO0VBQ0UsK0NBQUE7RUFDQSxpQkFBQTtBQVROOztBQU9JO0VBQ0UsOEJBQUE7RUFDQSxpQkFBQTtBQUpOOztBQUVJO0VBQ0UsOEJBQUE7RUFDQSxpQkFBQTtBQUNOOztBQUhJO0VBQ0UsOEJBQUE7RUFDQSxpQkFBQTtBQU1OOztBQURBO0VBQ0UsaUJBQUE7RUFDQSxXQUFBO0FBSUY7O0FBREE7RUFDRSxhQUFBO0VBQ0EsbUJBQUE7QUFJRjs7QUFEQTtFQUNFLGFBQUE7RUFDQSx1QkFBQTtBQUlGOztBQURBO0VBQ0UsY0FBQTtBQUlGIiwiZmlsZSI6InNyYy9hcHAvcGFnZXMvcHJhdGljaWVuL2ludGVydmVudGlvbi9pbnRlcnZlbnRpb24ucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWZhYi1idXR0b24ge1xyXG4gIC0tYmFja2dyb3VuZDogdmFyKC0taW9uLWNvbG9yLXN0ZXAtMTUwLCAjZmZmKTtcclxuICAtLWJhY2tncm91bmQtaG92ZXI6IHZhcigtLWlvbi1jb2xvci1zdGVwLTIwMCwgI2YyZjJmMik7XHJcbiAgLS1iYWNrZ3JvdW5kLWZvY3VzZWQ6IHZhcigtLWlvbi1jb2xvci1zdGVwLTI1MCwgI2Q5ZDlkOSk7XHJcblxyXG4gIC0tY29sb3I6IHZhcigtLWlvbi1jb2xvci1wcmltYXJ5LCAjMzg4MGZmKTtcclxufVxyXG5cclxuLypcclxuICAgICAqIE1hdGVyaWFsIERlc2lnbiB1c2VzIHRoZSByaXBwbGUgZm9yIGFjdGl2YXRlZFxyXG4gICAgICogc28gb25seSBzdHlsZSB0aGUgaU9TIGFjdGl2YXRlZCBiYWNrZ3JvdW5kXHJcbiAgICAgKi9cclxuLmlvcyBpb24tZmFiLWJ1dHRvbiB7XHJcbiAgLS1iYWNrZ3JvdW5kLWFjdGl2YXRlZDogdmFyKC0taW9uLWNvbG9yLXN0ZXAtMjUwLCAjZDlkOWQ5KTtcclxufVxyXG5cclxuJGNhdGVnb3JpZXM6IChcclxuICBpb25pYzogdmFyKC0taW9uLWNvbG9yLXByaW1hcnkpLFxyXG4gIGNvbW11bmljYXRpb246ICM4ZThkOTMsXHJcbiAgcHJvcG9zaXRpb246ICNmZWQwMzUsXHJcbiAgaW50ZXJ2ZW50aW9uOiAjNjYwMGNjLFxyXG4pO1xyXG5cclxuQGVhY2ggJHRyYWNrLCAkdmFsdWUgaW4gbWFwLXJlbW92ZSgkY2F0ZWdvcmllcykge1xyXG4gIGlvbi1pdGVtLXNsaWRpbmdbdHJhY2s9XCIjeyR0cmFja31cIl0gaW9uLWxhYmVsIHtcclxuICAgICYuaW5mb3JtYXRpb24ge1xyXG4gICAgICBib3JkZXItbGVmdDogMnB4IHNvbGlkICR2YWx1ZTtcclxuICAgICAgcGFkZGluZy1sZWZ0OiAzcHg7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4uc3RhdHVzIHtcclxuICB0ZXh0LWFsaWduOiByaWdodDtcclxuICB3aWR0aDogOTBweDtcclxufVxyXG5cclxuLm1pZGRsZSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4uYnRuLWNuZnJtIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcblxyXG4udmFjY2luZSB7XHJcbiAgY29sb3I6ICM1MTU4NjQ7XHJcbn1cclxuIl19 */\";","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport {\n  IonList,\n  AlertController,\n  LoadingController,\n  ModalController,\n  IonRouterOutlet,\n  ToastController,\n  Config,\n} from \"@ionic/angular\";\nimport { PraticienService } from \"src/app/services/praticien.service\";\nimport { Router } from \"@angular/router\";\nimport { IIntervention } from \"src/app/Interfaces/praticien.interface\";\nimport { findIndex } from \"rxjs/operators\";\n\n@Component({\n  selector: \"app-intervention\",\n  templateUrl: \"./intervention.page.html\",\n  styleUrls: [\"./intervention.page.scss\"],\n})\nexport class InterventionPage implements OnInit {\n  @ViewChild(\"List\", { static: true }) List: IonList; // TODO : get all consultation list\n\n  ios: boolean;\n  dayIndex = 0;\n  queryText = \"\";\n  segment = \"all\";\n  excludeTracks: any = [];\n  shownSessions: any = [];\n  intervention: IIntervention[] = [];\n  interventionShow: any = [];\n  confDate: string;\n  showSearchbar: boolean;\n  interventionFiltered: any = [];\n  public OKSTATUS = \"Accepted\";\n  public NOPSTATUS = \"Refused\";\n  public PENDSTATUS = \"Pending\";\n\n  constructor(\n    public alertCtrl: AlertController,\n    public praticienSrvc: PraticienService,\n    public loadingCtrl: LoadingController,\n    public modalCtrl: ModalController,\n    public router: Router,\n    public routerOutlet: IonRouterOutlet,\n    public toastCtrl: ToastController,\n    public config: Config\n  ) {}\n\n  ngOnInit(): void {\n    this.getIntervention();\n    this.ios = this.config.get(\"mode\") === \"ios\";\n  }\n\n  getIntervention() {\n    // Close any open sliding items when the  updates\n    if (this.List) {\n      console.log(\"ConsultationPage -> update -> this.List\", this.List);\n      this.List.closeSlidingItems();\n    }\n    //TODO: get timeline\n    this.praticienSrvc.getListIntervention().subscribe((data: any) => {\n      this.intervention = data; // Data from DB\n      this.interventionShow = this.regroupData(data); // Transformed data\n      this.interventionFiltered = [...this.interventionShow]; // Filtered data to show\n    });\n  }\n\n  //TODO fileter item intervention\n\n  regroupData(data) {\n    const groups = data.reduce((groups, intervention) => {\n      const date = intervention.date.split(\"T\")[0];\n      if (!groups[date]) {\n        groups[date] = [];\n      }\n      groups[date].push(intervention);\n      return groups;\n    }, {});\n\n    const groupArrays = Object.keys(groups).map((date) => {\n      return {\n        date,\n        groups: groups[date],\n      };\n    });\n    const sortedActivities = groupArrays.slice().sort(function (a, b) {\n      return new Date(a.date).getTime() - new Date(b.date).getTime();\n    });\n    return sortedActivities;\n  }\n\n  showAccepted() {\n    if (this.segment == \"all\") {\n      this.interventionFiltered = [...this.interventionShow];\n      return;\n    }\n    let temp: any = [];\n    this.interventionFiltered = temp;\n\n    [...this.interventionShow].forEach((item) => {\n      console.log(\"ConsultationPage -> filterItems -> item\", item.groups);\n      let data: any = [];\n      item.groups.forEach((res) => {\n        console.log(\"ConsultationPage  *** -> filterItems -> res\", res);\n        if (res.status.includes(\"Accepted\")) {\n          data.push(res);\n        }\n      });\n      const a = {\n        date: item.date,\n        groups: data,\n      };\n\n      temp.push(a);\n    });\n  }\n\n  alert() {\n    console.log(\"ok ++++ \");\n  }\n\n  async alertAcceptIntervention(id) {\n    const alert = await this.alertCtrl.create({\n      cssClass: \"my-custom-class\",\n      header: \"Accept\",\n      message: \"Do you really want to accept it ? \",\n      buttons: [\n        {\n          text: \"Cancel\",\n          role: \"cancel\",\n          cssClass: \"secondary\",\n          handler: () => {\n            console.log(\"Confirm Cancel: blah\");\n          },\n        },\n        {\n          text: \"OK\",\n          handler: () => {\n            console.log(\"data accepted \" + id);\n            this.acceptIntervention(id);\n          },\n        },\n      ],\n    });\n    await alert.present();\n  }\n\n  async alertRemoveIntervention(id) {\n    const alert = await this.alertCtrl.create({\n      cssClass: \"my-custom-class\",\n      header: \"Refuse\",\n      message: \"Do you really want to refuse it ? \",\n      buttons: [\n        {\n          text: \"Cancel\",\n          role: \"cancel\",\n          cssClass: \"secondary\",\n          handler: () => {\n            console.log(\"Confirm Cancel: blah\");\n          },\n        },\n        {\n          text: \"OK\",\n          handler: () => {\n            console.log(\"data refused \" + id);\n            this.removeIntervention(id);\n          },\n        },\n      ],\n    });\n    await alert.present();\n  }\n\n  // TODO:change by id // actually it s his name\n  acceptIntervention(id) {\n    this.intervention.find((element) => element.id == id).status = \"Accepted\";\n  }\n\n  removeIntervention(id) {\n    const el = (test) => test.id == id;\n    this.intervention.find((element) => element.id == id).status = \"Refused\";\n    const index = this.intervention.findIndex(el);\n    console.log(el);\n    this.intervention.slice(index);\n  }\n}\n"]}