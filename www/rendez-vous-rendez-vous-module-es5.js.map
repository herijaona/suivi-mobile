{"version":3,"sources":["webpack:///src/app/pages/patient/rendez-vous/new-rdv/new-rdv.component.html","webpack:///src/app/pages/patient/rendez-vous/rendez-vous.page.html","webpack:///src/app/pages/patient/rendez-vous/rendrez-vous-filter/rendrez-vous-filter.component.html","webpack:///src/app/pages/praticien/rendez-vous/new-rendez-vous/new-rendez-vous.component.html","webpack:///src/app/pages/praticien/rendez-vous/rendez-vous.page.html","webpack:///src/app/pages/patient/rendez-vous/new-rdv/new-rdv.component.scss","webpack:///src/app/pages/patient/rendez-vous/new-rdv/new-rdv.component.ts","webpack:///src/app/pages/patient/rendez-vous/rendez-vous-routing.module.ts","webpack:///src/app/pages/patient/rendez-vous/rendez-vous.module.ts","webpack:///src/app/pages/patient/rendez-vous/rendez-vous.page.scss","webpack:///src/app/pages/patient/rendez-vous/rendez-vous.page.ts","webpack:///src/app/pages/patient/rendez-vous/rendrez-vous-filter/rendrez-vous-filter.component.scss","webpack:///src/app/pages/patient/rendez-vous/rendrez-vous-filter/rendrez-vous-filter.component.ts","webpack:///src/app/pages/praticien/rendez-vous/new-rendez-vous/new-rendez-vous.component.scss","webpack:///src/app/pages/praticien/rendez-vous/new-rendez-vous/new-rendez-vous.component.ts","webpack:///src/app/pages/praticien/rendez-vous/rendez-vous-routing.module.ts","webpack:///src/app/pages/praticien/rendez-vous/rendez-vous.module.ts","webpack:///src/app/pages/praticien/rendez-vous/rendez-vous.page.scss","webpack:///src/app/pages/praticien/rendez-vous/rendez-vous.page.ts","webpack:///src/app/services/global-element-injection.service.ts"],"names":["NewRdvComponent","praticienSrv","patientServc","navCtrl","navParms","modalCtrl","storage","globalDataSrvc","globalInt","showCheckBoxAssoc","after_praticien_choice","get","undefined","functions","getAllfonction","propositionForm","praticien","value","praticiens","disabled","required","fonction","country","countries","city","cities","typeRdv","description","chekcboxAssoc","dataFormStep","field","valid","touched","untouched","getPraticienFunctions","subscribe","data","_idFunction","getCountryByPratictitionerFunction","console","log","length","VIDE","warn","presentToast","_idCountry","getCityByPractitionerFunctionAndCountry","_idCity","getPractitionerByFunctionCountryAndCity","_idPraticien","OK","chekIfPractitionerIsAssociated","isOK","status","data_to_send","objet","Associer","error","proposeRdv","dataV","backToList","dismiss","navigateRoot","dismissed","selector","template","routes","path","component","RendezVousPageRoutingModule","imports","forChild","exports","RendezVousPageModule","declarations","RendezVousPage","alertCtrl","patientSrvc","loadingCtrl","router","routerOutlet","toastCtrl","praticientSrvc","config","dataTransformer","globaleEl","globalItem","dayIndex","queryText","segment","excludeTracksStates","excludeTracksTypes","shownSessions","rdvs","rdvShow","allBrute","rdvFiltered","REALIZED","CANCELED","SCHEDULED","PENDING","STRING_DATE","STRING2_DATE","presentLoading","getAllData","ios","onlyAccepted","create","cssClass","swipeToClose","componentProps","funcitons","test","newRdvModal","onDidDismiss","then","updateRdvList","present","getAllRdv","result","allData","dataByDate","getPraticiens","List","closeSlidingItems","ev","query","target","toLowerCase","requestAnimationFrame","showAccepted","filterItems","presentingElement","nativeEl","modal","onWillDismiss","states","types","hideOnexclude","fuseData","network","fab","message","duration","Math","random","loading","close","getAllPraticien","dismissLoading","id","alertAccept","_id","_typeRdv","alertDelete","cancelRdv","dataRdv","parent","cancelRdvProposition","list","string_date","string2_date","dataShow","forEach","element","dataToPush","Object","assign","show","push","listByDate","regroupDataByDate","res","groups","reduce","eachData","true_date","date","Date","type_rdv","allStatus","statusConsultation","type","_status","checkStatus","etat","groupArrays","keys","map","sortedActivities","slice","sort","a","b","getTime","RendrezVousFilterComponent","navParams","trackStatsMock","trackTypeMock","name","icon","isChecked","tracksStates","tracksTypes","excludedTrackStates","excludedTrackTypes","track","indexOf","check","excludedTrackStatesNames","filter","c","excludedTrackTypesNames","concat","NewRendezVousComponent","praticienSrvc","patient","dateRdv","heureRdv","patients","firstName","prop","GlobalElementInjectionService","array","keyStatus","OkStatus","header","buttons","text","role","handler","accept","alert","RefuseStatus","remove","find","el","index","findIndex","providedIn"],"mappings":"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","file":"rendez-vous-rendez-vous-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Nouveau rendez-vous</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-grid fixed>\\n  <ion-row>\\n    <ion-col size-md=\\\"6\\\" offset-md=\\\"3\\\">\\n      <ion-card>\\n        <ion-card-header>\\n          <ion-card-title> </ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <form\\n            [formGroup]=\\\"propositionForm\\\"\\n            (ngSubmit)=\\\"propose()\\\"\\n            method=\\\"post\\\"\\n          >\\n            <div class=\\\"mb-14\\\">\\n              <label>Choisir fonction</label>\\n              <ion-select\\n                placeholder=\\\"Select\\\"\\n                formControlName=\\\"fonction\\\"\\n                required\\n                (ionChange)=\\\"\\n                  getCountryByFunction(this.propositionForm.value['fonction'])\\n                \\\"\\n              >\\n                <ion-select-option\\n                  *ngFor=\\\"let item of functions\\\"\\n                  [value]=\\\"item.id\\\"\\n                  >{{ item.NomFonction }}</ion-select-option\\n                >\\n              </ion-select>\\n            </div>\\n\\n            <div class=\\\"mb-14\\\">\\n              <label>Choisir pays</label>\\n              <ion-select\\n                placeholder=\\\"Select\\\"\\n                formControlName=\\\"country\\\"\\n                required\\n                [disabled]=\\\"!this.countries\\\"\\n                (ionChange)=\\\"\\n                  getCityByFunctionAndCountry(\\n                    this.propositionForm.value['fonction'],\\n                    this.propositionForm.value['country']\\n                  )\\n                \\\"\\n              >\\n                <ion-select-option\\n                  *ngFor=\\\"let item of countries\\\"\\n                  [value]=\\\"item.id\\\"\\n                  >{{ item.nameState }}</ion-select-option\\n                >\\n              </ion-select>\\n            </div>\\n\\n            <div class=\\\"mb-14\\\">\\n              <label>Choisir ville</label>\\n              <ion-select\\n                placeholder=\\\"Select\\\"\\n                formControlName=\\\"city\\\"\\n                required\\n                [disabled]=\\\"!this.cities\\\"\\n                (ionChange)=\\\"\\n                  getPractitionerByFunctionCountryAndCity(\\n                    this.propositionForm.value['fonction'],\\n                    this.propositionForm.value['country'],\\n                    this.propositionForm.value['city']\\n                  )\\n                \\\"\\n              >\\n                <ion-select-option\\n                  *ngFor=\\\"let item of cities\\\"\\n                  [value]=\\\"item.id\\\"\\n                  >{{ item.nameCity }}</ion-select-option\\n                >\\n              </ion-select>\\n            </div>\\n\\n            <div class=\\\"mb-14\\\">\\n              <label>Choisir praticien</label>\\n              <ion-select\\n                placeholder=\\\"Select\\\"\\n                formControlName=\\\"praticien\\\"\\n                [disabled]=\\\"!this.praticiens\\\"\\n                required\\n                (ionChange)=\\\"\\n                  chekcPractitionerAssocOrNot(\\n                    this.propositionForm.value['praticien']\\n                  )\\n                \\\"\\n              >\\n                <ion-select-option\\n                  *ngFor=\\\"let item of praticiens\\\"\\n                  [value]=\\\"item.id\\\"\\n                  >{{\\n                    item.firstName.toString() + ' ' + item.lastName.toString()\\n                  }}</ion-select-option\\n                >\\n              </ion-select>\\n            </div>\\n            <div class=\\\"mb-14\\\">\\n              <label>Type de rendez-vous</label>\\n              <ion-select formControlName=\\\"typeRdv\\\" required>\\n                <ion-select-option value=\\\"consultation\\\"\\n                  >Consultation</ion-select-option\\n                >\\n                <ion-select-option value=\\\"intervention\\\"\\n                  >Intervention</ion-select-option\\n                >\\n              </ion-select>\\n            </div>\\n            <div class=\\\"mb-14\\\">\\n              <label>Objet </label>\\n              <ion-input\\n                type=\\\"text\\\"\\n                required\\n                formControlName=\\\"description\\\"\\n              ></ion-input>\\n            </div>\\n            <!-- <div *ngIf=\\\"after_praticien_choice\\\" class=\\\"checkBox\\\"> -->\\n            <div *ngIf=\\\"after_praticien_choice\\\" class=\\\"checkBox\\\">\\n              <div class=\\\"mb-14\\\" *ngIf=\\\"showCheckBoxAssoc == false\\\">\\n                <ion-item class=\\\"status\\\" fill=\\\"outline\\\" lines=\\\"none\\\">\\n                  <ion-checkbox\\n                    formControlName=\\\"chekcboxAssoc\\\"\\n                    value\\n                  ></ion-checkbox>\\n                  &nbsp;&nbsp;\\n                  <label>choisir comme associé ?</label>\\n                </ion-item>\\n              </div>\\n              <div *ngIf=\\\"showCheckBoxAssoc == true\\\">\\n                <ion-button\\n                  class=\\\"status\\\"\\n                  color=\\\"sgreen\\\"\\n                  fill=\\\"outline\\\"\\n                  expand=\\\"block\\\"\\n                  slot=\\\"end\\\"\\n                >\\n                  Praticien associé\\n                </ion-button>\\n              </div>\\n            </div>\\n\\n            <!-- <div class=\\\"mb-14\\\">\\n              <label>Propose une date </label>\\n              <ion-datetime\\n                display-format=\\\"MMM DD, YYYY\\\"\\n                formControlName=\\\"dateRdv\\\"\\n                required\\n              ></ion-datetime>\\n            </div>\\n\\n            <div class=\\\"mb-14\\\">\\n              <label>Propose un horaire</label>\\n              <ion-datetime\\n                display-format=\\\"h:mm A\\\"\\n                picker-format=\\\"h:mm A\\\"\\n                formControlName=\\\"heureRdv\\\"\\n                required\\n              ></ion-datetime>\\n            </div> -->\\n\\n            <ion-row>\\n              <ion-col>\\n                <ion-button color=\\\"sred\\\" expand=\\\"block\\\" (click)=\\\"dismiss()\\\">\\n                  <ion-icon slot=\\\"start\\\" name=\\\"\\\"> x </ion-icon\\n                  >Cancel</ion-button\\n                >\\n                <legend class=\\\"ion-text-center\\\"></legend>\\n                <ion-button type=\\\"submit\\\" color=\\\"sgreen\\\" expand=\\\"block\\\"\\n                  ><ion-icon slot=\\\"start\\\" name=\\\"save-outline\\\"></ion-icon>\\n                  Save\\n                </ion-button>\\n              </ion-col>\\n            </ion-row>\\n          </form>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-col>\\n  </ion-row>\\n</ion-grid>\\n\";","export default \"<ion-header translucent=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons *ngIf=\\\"!ios && !showSearchbar\\\" slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-menu-button *ngIf=\\\"ios\\\"></ion-menu-button>\\n\\n    <!-- <ion-segment *ngIf=\\\"ios\\\" [(ngModel)]=\\\"segment\\\" (ionChange)=\\\"showAccepted()\\\">\\n      <ion-segment-button value=\\\"all\\\" color=\\\"sgreen\\\"> All </ion-segment-button>\\n      <ion-segment-button value=\\\"favorites\\\" color=\\\"sgreen\\\">\\n        Accepté\\n      </ion-segment-button>\\n    </ion-segment> -->\\n    <ion-title *ngIf=\\\"!ios && !showSearchbar\\\">Rendez-vous</ion-title>\\n    <ion-searchbar\\n      *ngIf=\\\"showSearchbar\\\"\\n      showCancelButton=\\\"always\\\"\\n      [(ngModel)]=\\\"queryText\\\"\\n      (ionChange)=\\\"updateRdvList()\\\"\\n      (ionCancel)=\\\"showSearchbar = false\\\"\\n      placeholder=\\\"Rechercher\\\"\\n    ></ion-searchbar>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button *ngIf=\\\"!ios && !showSearchbar\\\" (click)=\\\"showSearchbar = true\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"search\\\"></ion-icon>\\n      </ion-button>\\n      <ion-button *ngIf=\\\"!showSearchbar\\\" (click)=\\\"presentFilter()\\\">\\n        <span *ngIf=\\\"ios\\\">Filtrer</span>\\n        <span *ngIf=\\\"!ios\\\">\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"options\\\"></ion-icon>\\n        </span>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n  <!-- <ion-toolbar *ngIf=\\\"!ios\\\">\\n    <ion-segment [(ngModel)]=\\\"segment\\\" (ionChange)=\\\"showAccepted()\\\">\\n      <ion-segment-button value=\\\"all\\\"> Tout </ion-segment-button>\\n      <ion-segment-button value=\\\"accepted\\\"> Accépté </ion-segment-button>\\n    </ion-segment>\\n  </ion-toolbar> -->\\n</ion-header>\\n\\n<ion-content fullscreen=\\\"true\\\">\\n  <ion-header collapse=\\\"condense\\\">\\n    <ion-toolbar>\\n      <ion-title size=\\\"large\\\">Rendez-vous</ion-title>\\n    </ion-toolbar>\\n    <ion-toolbar>\\n      <ion-searchbar\\n        [(ngModel)]=\\\"queryText\\\"\\n        (ionChange)=\\\"filterItems($event)\\\"\\n        placeholder=\\\"Search\\\"\\n      ></ion-searchbar>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n  <ion-list #scheduleList [hidden]=\\\"shownSessions === 0\\\">\\n    <ion-item-group *ngFor=\\\"let rdv of rdvFiltered\\\">\\n      <ion-item-divider sticky>\\n        <ion-label class=\\\"ion-text-center\\\">\\n          {{ rdv.date | date:\\\"MMM dd, yyyy\\\"}}\\n        </ion-label>\\n      </ion-item-divider>\\n\\n      <ion-item-sliding\\n        *ngFor=\\\"let eachRdv of rdv.groups\\\"\\n        #slidingItem\\n        [attr.track]=\\\"eachRdv.type | lowercase\\\"\\n      >\\n        <ion-item *ngIf=\\\"eachRdv.show === true\\\">\\n          <ion-grid>\\n            <ion-row (click)=\\\"alert()\\\">\\n              <ion-col size=\\\"12\\\">\\n                <ion-label class=\\\"information\\\">\\n                  <ion-row>\\n                    <ion-col size=\\\"7\\\">\\n                      <h2 class=\\\"makeBoldAndLarge\\\">{{eachRdv.type}}</h2>\\n                    </ion-col>\\n                    <ion-col class=\\\"middle\\\" size=\\\"2\\\" offset-md=\\\"2\\\">\\n                      <ion-button\\n                        *ngIf=\\\"this.checkStatus(eachRdv._status, eachRdv.etat) === this.REALIZED\\\"\\n                        class=\\\"status\\\"\\n                        color=\\\"sgreen\\\"\\n                        expand=\\\"block\\\"\\n                        fill=\\\"outline\\\"\\n                      >\\n                        REALISE\\n                      </ion-button>\\n\\n                      <ion-button\\n                        *ngIf=\\\"this.checkStatus(eachRdv._status, eachRdv.etat) === this.CANCELED\\\"\\n                        class=\\\"status\\\"\\n                        color=\\\"sred\\\"\\n                        expand=\\\"block\\\"\\n                        fill=\\\"outline\\\"\\n                      >\\n                        ANNULE\\n                      </ion-button>\\n\\n                      <ion-button\\n                        *ngIf=\\\"this.checkStatus(eachRdv._status, eachRdv.etat) === this.SCHEDULED\\\"\\n                        class=\\\"status\\\"\\n                        color=\\\"primary\\\"\\n                        expand=\\\"block\\\"\\n                        fill=\\\"outline\\\"\\n                      >\\n                        PLANIFIER\\n                      </ion-button>\\n\\n                      <ion-button\\n                        *ngIf=\\\"this.checkStatus(eachRdv._status, eachRdv.etat) === this.PENDING\\\"\\n                        class=\\\"status\\\"\\n                        color=\\\"sorange\\\"\\n                        expand=\\\"block\\\"\\n                        fill=\\\"outline\\\"\\n                      >\\n                        EN ATTENTE\\n                      </ion-button>\\n                    </ion-col>\\n                  </ion-row>\\n                  <ion-row>\\n                    <p>{{eachRdv.firstName + \\\" \\\" + eachRdv.lastName}}</p>\\n                    <p>{{eachRdv.centreName}}</p>\\n                  </ion-row>\\n                </ion-label>\\n              </ion-col>\\n            </ion-row>\\n            <ion-row\\n              *ngIf=\\\"this.checkStatus(eachRdv._status, eachRdv.etat) === this.SCHEDULED || this.checkStatus(eachRdv._status, eachRdv.etat) === this.PENDING\\\"\\n            >\\n              <ion-col class=\\\"btn-cnfrm\\\">\\n                <ion-button\\n                  (click)=\\\"alertRemoveRdv(eachRdv.id, eachRdv.type)\\\"\\n                  expand=\\\"block\\\"\\n                  color=\\\"sred\\\"\\n                >\\n                  <ion-icon name=\\\"close-circle-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                  <ion-label>CANCEL</ion-label>\\n                </ion-button>\\n              </ion-col>\\n            </ion-row>\\n          </ion-grid>\\n        </ion-item>\\n      </ion-item-sliding>\\n    </ion-item-group>\\n  </ion-list>\\n\\n  <ion-list-header [hidden]=\\\"rdvShow.size != 0\\\">\\n    No Sessions Found\\n  </ion-list-header>\\n\\n  <ion-fab slot=\\\"fixed\\\" vertical=\\\"bottom\\\" horizontal=\\\"end\\\" #fab>\\n    <ion-fab-button color=\\\"sgreen\\\" (click)=\\\"openNewRdvModal()\\\">\\n      <ion-icon name=\\\"add\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n</ion-content>\\n\";","export default \"<ion-header translucent=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button *ngIf=\\\"ios\\\" (click)=\\\"dismiss()\\\">Cancel</ion-button>\\n      <ion-button *ngIf=\\\"!ios\\\" (click)=\\\"selectAll(false)\\\">Reset</ion-button>\\n    </ion-buttons>\\n\\n    <ion-title class=\\\"ion-text-center\\\"> Filter Track Sessions </ion-title>\\n\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"applyFilters()\\\" strong>Done</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list [lines]=\\\"ios ? 'inset' : 'full'\\\">\\n    <ion-list-header>Tracks</ion-list-header>\\n    <ion-card>\\n      <ion-card-title>Types</ion-card-title>\\n      <ion-card-content>\\n        <ion-item\\n          *ngFor=\\\"let track of tracksTypes\\\"\\n          [attr.track]=\\\"track.name | lowercase\\\"\\n          lines=\\\"none\\\"\\n        >\\n          <ion-icon\\n            *ngIf=\\\"ios\\\"\\n            slot=\\\"start\\\"\\n            [name]=\\\"track.icon\\\"\\n            color=\\\"medium\\\"\\n          ></ion-icon>\\n          <ion-label>{{ track.name }}</ion-label>\\n          <ion-checkbox\\n            [(ngModel)]=\\\"track.isChecked\\\"\\n            color=\\\"sgreen\\\"\\n          ></ion-checkbox>\\n        </ion-item>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <ion-card *ngIf=\\\"this.trackStatsMock.length != 0\\\">\\n      <ion-card-title>States</ion-card-title>\\n      <ion-card-content>\\n        <ion-item\\n          *ngFor=\\\"let track of tracksStates\\\"\\n          [attr.track]=\\\"track.name | lowercase\\\"\\n          lines=\\\"none\\\"\\n        >\\n          <ion-icon\\n            *ngIf=\\\"ios\\\"\\n            slot=\\\"start\\\"\\n            [name]=\\\"track.icon\\\"\\n            color=\\\"medium\\\"\\n          ></ion-icon>\\n          <ion-label>{{ track.name }}</ion-label>\\n          <ion-checkbox\\n            [(ngModel)]=\\\"track.isChecked\\\"\\n            color=\\\"sred\\\"\\n          ></ion-checkbox>\\n        </ion-item>\\n      </ion-card-content>\\n    </ion-card>\\n  </ion-list>\\n</ion-content>\\n\\n<ion-footer translucent=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"selectAll(false)\\\">Deselect All</ion-button>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"selectAll(true)\\\">Select All</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-footer>\\n\";","export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Création de rendez-vous</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-grid fixed>\\n  <ion-row>\\n    <ion-col size-md=\\\"6\\\" offset-md=\\\"3\\\">\\n      <ion-card>\\n        <ion-card-header>\\n          <ion-card-title> </ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <form\\n            [formGroup]=\\\"propositionForm\\\"\\n            (ngSubmit)=\\\"propose()\\\"\\n            method=\\\"post\\\"\\n          >\\n            <div class=\\\"mb-14\\\">\\n              <label>choisi un patient</label>\\n              <ion-select\\n                placeholder=\\\"Select\\\"\\n                formControlName=\\\"patient\\\"\\n                required\\n              >\\n                <ion-select-option\\n                  *ngFor=\\\"let item of patients\\\"\\n                  [value]=\\\"item.id\\\"\\n                  >{{\\n                    item.firstName.toString() + ' ' + item.lastName.toString()\\n                  }}</ion-select-option\\n                >\\n                <!-- <ion-select-option></ion-select-option> -->\\n              </ion-select>\\n              <!-- <small\\n                class=\\\"form-text red-color\\\"\\n                *ngIf=\\\"isFieldInvalid(propositionForm, 'patient')\\\"\\n                >This field is required</small\\n              > -->\\n            </div>\\n\\n            <div class=\\\"mb-14\\\">\\n              <label>Propose une date </label>\\n              <ion-datetime\\n                display-format=\\\"MMM DD, YYYY\\\"\\n                formControlName=\\\"dateRdv\\\"\\n                required\\n              ></ion-datetime>\\n              <!-- <small\\n                class=\\\"form-text red-color\\\"\\n                *ngIf=\\\"isFieldInvalid(propositionForm, 'dateRdv')\\\"\\n                >This field is required</small\\n              > -->\\n            </div>\\n\\n            <div class=\\\"mb-14\\\">\\n              <label>Propose un horaire</label>\\n              <ion-datetime\\n                display-format=\\\"h:mm A\\\"\\n                picker-format=\\\"h:mm A\\\"\\n                formControlName=\\\"heureRdv\\\"\\n                required\\n              ></ion-datetime>\\n              <!-- <small\\n                class=\\\"form-text red-color\\\"\\n                *ngIf=\\\"isFieldInvalid(propositionForm, 'heureRdv')\\\"\\n                >This field is required</small\\n              > -->\\n            </div>\\n\\n            <div class=\\\"mb-14\\\">\\n              <label>Description du rendez-vous</label>\\n              <ion-input\\n                type=\\\"text\\\"\\n                required\\n                formControlName=\\\"description\\\"\\n              ></ion-input\\n              ><!-- <small\\n                class=\\\"form-text red-color\\\"\\n                *ngIf=\\\"isFieldInvalid(propositionForm, 'description')\\\"\\n                >This field is required</small\\n              > -->\\n            </div>\\n\\n            <ion-row>\\n              <ion-col>\\n                <ion-button color=\\\"sred\\\" expand=\\\"block\\\" (click)=\\\"dismiss()\\\">\\n                  <ion-icon slot=\\\"start\\\" name=\\\"\\\"> x </ion-icon\\n                  >Cancel</ion-button\\n                >\\n                <legend class=\\\"ion-text-center\\\"></legend>\\n                <ion-button type=\\\"submit\\\" color=\\\"sgreen\\\" expand=\\\"block\\\"\\n                  ><ion-icon slot=\\\"start\\\" name=\\\"save-outline\\\"></ion-icon>\\n                  Save\\n                </ion-button>\\n              </ion-col>\\n            </ion-row>\\n          </form>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-col>\\n  </ion-row>\\n</ion-grid>\\n\";","export default \"<ion-header translucent=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons *ngIf=\\\"!ios && !showSearchbar\\\" slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-menu-button *ngIf=\\\"ios\\\"></ion-menu-button>\\n    <ion-title *ngIf=\\\"!ios && !showSearchbar\\\">Rendez-vous</ion-title>\\n    <ion-searchbar\\n      *ngIf=\\\"showSearchbar\\\"\\n      showCancelButton=\\\"always\\\"\\n      [(ngModel)]=\\\"queryText\\\"\\n      (ionChange)=\\\"updateRdvList()\\\"\\n      (ionCancel)=\\\"showSearchbar = false\\\"\\n      placeholder=\\\"Rechercher\\\"\\n    ></ion-searchbar>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button *ngIf=\\\"!ios && !showSearchbar\\\" (click)=\\\"showSearchbar = true\\\">\\n        <ion-icon slot=\\\"end\\\" name=\\\"search\\\"></ion-icon>\\n      </ion-button>\\n      <ion-button *ngIf=\\\"!showSearchbar\\\" (click)=\\\"presentFilter()\\\">\\n        <span *ngIf=\\\"ios\\\">Filtrer</span>\\n        <span *ngIf=\\\"!ios\\\">\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"options\\\"></ion-icon>\\n        </span>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen=\\\"true\\\">\\n  <ion-header collapse=\\\"condense\\\">\\n    <ion-toolbar>\\n      <ion-title size=\\\"large\\\">Rendez-vous</ion-title>\\n    </ion-toolbar>\\n    <ion-toolbar>\\n      <ion-searchbar\\n        [(ngModel)]=\\\"queryText\\\"\\n        (ionChange)=\\\"filterItems($event)\\\"\\n        placeholder=\\\"Search\\\"\\n      ></ion-searchbar>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n  <ion-list #scheduleList [hidden]=\\\"shownSessions === 0\\\">\\n    <ion-item-group *ngFor=\\\"let rdv of rdvFiltered\\\">\\n      <ion-item-divider sticky>\\n        <ion-label class=\\\"ion-text-center\\\">\\n          {{ rdv.date | date:\\\"MMM dd, yyyy\\\"}}\\n        </ion-label>\\n      </ion-item-divider>\\n\\n      <ion-item-sliding\\n        *ngFor=\\\"let eachRdv of rdv.groups\\\"\\n        #slidingItem\\n        [attr.track]=\\\"eachRdv.type | lowercase\\\"\\n      >\\n        <ion-item *ngIf=\\\"eachRdv.show === true\\\">\\n          <ion-grid>\\n            <ion-row (click)=\\\"alert()\\\">\\n              <ion-col size=\\\"12\\\">\\n                <ion-label class=\\\"information\\\">\\n                  <ion-row>\\n                    <ion-col size=\\\"7\\\">\\n                      <h2 class=\\\"makeBoldAndLarge\\\">{{eachRdv.type}}</h2>\\n                    </ion-col>\\n                    <ion-col class=\\\"middle\\\" size=\\\"2\\\" offset-md=\\\"2\\\">\\n                      <ion-button\\n                        *ngIf=\\\"this.checkStatus(eachRdv._status, eachRdv.etat) === this.REALIZED\\\"\\n                        class=\\\"status\\\"\\n                        color=\\\"sgreen\\\"\\n                        expand=\\\"block\\\"\\n                        fill=\\\"outline\\\"\\n                      >\\n                        réalisé\\n                      </ion-button>\\n\\n                      <ion-button\\n                        *ngIf=\\\"this.checkStatus(eachRdv._status, eachRdv.etat) === this.CANCELED\\\"\\n                        class=\\\"status\\\"\\n                        color=\\\"sred\\\"\\n                        expand=\\\"block\\\"\\n                        fill=\\\"outline\\\"\\n                      >\\n                        annulé\\n                      </ion-button>\\n\\n                      <ion-button\\n                        *ngIf=\\\"this.checkStatus(eachRdv._status, eachRdv.etat) === this.SCHEDULED\\\"\\n                        class=\\\"status\\\"\\n                        color=\\\"primary\\\"\\n                        expand=\\\"block\\\"\\n                        fill=\\\"outline\\\"\\n                      >\\n                        planifié\\n                      </ion-button>\\n\\n                      <ion-button\\n                        *ngIf=\\\"this.checkStatus(eachRdv._status, eachRdv.etat) === this.PENDING\\\"\\n                        class=\\\"status\\\"\\n                        color=\\\"sorange\\\"\\n                        expand=\\\"block\\\"\\n                        fill=\\\"outline\\\"\\n                      >\\n                        en attente\\n                      </ion-button>\\n                    </ion-col>\\n                  </ion-row>\\n                  <ion-row>\\n                    <p>{{eachRdv.firstName + \\\" \\\" + eachRdv.lastName}}</p>\\n                    <p>{{eachRdv.centreName}}</p>\\n                  </ion-row>\\n                </ion-label>\\n              </ion-col>\\n            </ion-row>\\n            <ion-row\\n              *ngIf=\\\"this.checkStatus(eachRdv._status, eachRdv.etat) === this.PENDING\\\"\\n            >\\n              <ion-col class=\\\"btn-cnfrm\\\">\\n                <ion-button\\n                  (click)=\\\"alertRemoveRdv(eachRdv.id, eachRdv.type)\\\"\\n                  expand=\\\"block\\\"\\n                  color=\\\"primary\\\"\\n                >\\n                  <ion-icon name=\\\"close-circle-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                  <ion-label>organisé</ion-label>\\n                </ion-button>\\n                <ion-button\\n                  (click)=\\\"alertRemoveRdv(eachRdv.id, eachRdv.type)\\\"\\n                  expand=\\\"block\\\"\\n                  color=\\\"sred\\\"\\n                >\\n                  <ion-icon name=\\\"close-circle-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                  <ion-label>annulé</ion-label>\\n                </ion-button>\\n              </ion-col>\\n            </ion-row>\\n            <ion-row\\n              *ngIf=\\\"this.checkStatus(eachRdv._status, eachRdv.etat) === this.SCHEDULED \\\"\\n            >\\n              <ion-col class=\\\"btn-cnfrm\\\">\\n                <ion-button\\n                  (click)=\\\"alertRemoveRdv(eachRdv.id, eachRdv.type)\\\"\\n                  expand=\\\"block\\\"\\n                  color=\\\"sgreen\\\"\\n                >\\n                  <ion-icon name=\\\"close-circle-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                  <ion-label>réalisé</ion-label>\\n                </ion-button>\\n              </ion-col>\\n            </ion-row>\\n          </ion-grid>\\n        </ion-item>\\n      </ion-item-sliding>\\n    </ion-item-group>\\n  </ion-list>\\n\\n  <ion-list-header [hidden]=\\\"rdvShow.size != 0\\\">\\n    No Sessions Found\\n  </ion-list-header>\\n\\n  <ion-fab slot=\\\"fixed\\\" vertical=\\\"bottom\\\" horizontal=\\\"end\\\" #fab>\\n    <ion-fab-button color=\\\"sgreen\\\" (click)=\\\"openNewRdvModal()\\\">\\n      <ion-icon name=\\\"add\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n</ion-content>\\n\";","export default \".checkBox {\\n  display: flex;\\n  align-items: flex-end;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcGF0aWVudC9yZW5kZXotdm91cy9uZXctcmR2L25ldy1yZHYuY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0EscUJBQUE7QUFDRiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3BhdGllbnQvcmVuZGV6LXZvdXMvbmV3LXJkdi9uZXctcmR2LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNoZWNrQm94IHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGFsaWduLWl0ZW1zOiBmbGV4LWVuZDtcclxufVxyXG4iXX0= */\";","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ModalController, NavController, NavParams } from '@ionic/angular';\nimport { Storage } from '@ionic/storage';\nimport { IPatient, IRdvPatient } from 'src/app/Interfaces/patient.interface';\nimport { IUserPraticien } from 'src/app/Interfaces/praticien.interface';\nimport { GlobalInteraction } from 'src/app/pages/global.interaction';\nimport { GlobalDataService } from 'src/app/services/global-data.service';\nimport { PatientService } from 'src/app/services/patient.service';\nimport { PraticienService } from 'src/app/services/praticien.service';\n\n@Component({\n  selector: 'app-new-rdv',\n  templateUrl: './new-rdv.component.html',\n  styleUrls: ['./new-rdv.component.scss'],\n})\nexport class NewRdvComponent implements OnInit {\n  @Input() test: String;\n  @Input() functions;\n\n  public countries;\n  public cities;\n  praticiens: IUserPraticien[];\n  public propositionForm: FormGroup;\n  showCheckBoxAssoc = false;\n  after_praticien_choice = false;\n\n  selected: any;\n  constructor(\n    private praticienSrv: PraticienService,\n    private patientServc: PatientService,\n    private navCtrl: NavController,\n    private navParms: NavParams,\n    private modalCtrl: ModalController,\n    private storage: Storage,\n    private globalDataSrvc: GlobalDataService,\n    private globalInt: GlobalInteraction\n  ) { }\n\n  async ngOnInit() {\n    this.after_praticien_choice = false;\n\n    // this.praticiens = this.navParms.get('praticiens');\n    this.navParms.get('functions') != undefined\n      ? (this.functions = this.navParms.get('functions'))\n      : this.getAllfonction();\n\n    this.propositionForm = new FormGroup({\n      praticien: new FormControl({ value: this.praticiens, disabled: false }, [\n        Validators.required,\n      ]),\n      fonction: new FormControl({ value: this.functions, disabled: false }, [\n        Validators.required,\n      ]),\n      country: new FormControl({ value: this.countries, disabled: false }, [\n        Validators.required,\n      ]),\n      city: new FormControl({ value: this.cities, disabled: false }, [\n        Validators.required,\n      ]),\n      typeRdv: new FormControl('', [Validators.required]),\n      // dateRdv: new FormControl('', [Validators.required]),\n      // heureRdv: new FormControl('', [Validators.required]),\n      description: new FormControl(),\n      chekcboxAssoc: new FormControl(),\n    });\n  }\n\n  isFieldInvalid(dataFormStep, field: string) {\n    return (\n      (!dataFormStep.get(field).valid && dataFormStep.get(field).touched) ||\n      (dataFormStep.get(field).untouched && !dataFormStep.get(field).valid)\n    );\n  }\n  getAllfonction() {\n    this.after_praticien_choice = false;\n    this.praticienSrv.getPraticienFunctions().subscribe((data) => {\n      this.functions = data;\n    });\n  }\n\n  getCountryByFunction(_idFunction) {\n    this.globalDataSrvc\n      .getCountryByPratictitionerFunction(_idFunction)\n      .subscribe((data: []) => {\n        console.log(\n          'LL: NewRdvComponent -> getCountryByFunction -> data',\n          data\n        );\n        if (data.length == 0) {\n          const VIDE = \"Il n'y a pas de praticien présent dans ce pays\";\n          console.warn(\n            'LL: NewRdvComponent -> getCountryByFunction -> VIDE',\n            VIDE\n          );\n          this.globalInt.presentToast(VIDE);\n        }\n        this.countries = data;\n      });\n  }\n\n  getCityByFunctionAndCountry(_idFunction, _idCountry) {\n    this.after_praticien_choice = false;\n    this.globalDataSrvc\n      .getCityByPractitionerFunctionAndCountry(_idFunction, _idCountry)\n      .subscribe((data: []) => {\n        console.log(\n          'LL: NewRdvComponent -> getCityByFunctionAndCountry -> data',\n          data\n        );\n\n        if (data.length == 0) {\n          const VIDE = \"Il n'y a pas de praticien présent dans ce pays\";\n          console.warn(\n            'LL: NewRdvComponent -> getCityByFunctionAndCountry -> VIDE',\n            VIDE\n          );\n          this.globalInt.presentToast(VIDE);\n        }\n        this.cities = data;\n      });\n  }\n\n  getPractitionerByFunctionCountryAndCity(_idFunction, _idCountry, _idCity) {\n    this.after_praticien_choice = false;\n    this.globalDataSrvc\n      .getPractitionerByFunctionCountryAndCity(_idFunction, _idCountry, _idCity)\n      .subscribe((data: []) => {\n        console.log(\n          'LL: NewRdvComponent -> getPractitionerByFunctionCountryAndCity -> data',\n          data\n        );\n\n        if (data.length == 0) {\n          const VIDE = \"Il n'y a pas de praticien présent dans ce pays\";\n          console.warn(\n            'LL: NewRdvComponent -> getPractitionerByFunctionCountryAndCity -> VIDE',\n            VIDE\n          );\n          this.globalInt.presentToast(VIDE);\n        }\n        this.praticiens = data;\n      });\n  }\n\n  chekcPractitionerAssocOrNot(_idPraticien) {\n    const OK = 'OK';\n    this.patientServc\n      .chekIfPractitionerIsAssociated(_idPraticien)\n      .subscribe((isOK: { status }) => {\n        console.log(\"LL: NewRdvComponent -> chekcPractitionerAssocOrNot -> isOK\", isOK)\n        if (isOK.status === OK) {\n          this.showCheckBoxAssoc = true;\n        } else {\n          this.showCheckBoxAssoc = false;\n        }\n        this.after_praticien_choice = true;\n      });\n  }\n  async propose() {\n    // const prop: IRdvPatient = {\n    //   description: this.propositionForm.value.description,\n    //   praticien: this.propositionForm.value.praticien,\n    //   // typeRdv: this.propositionForm.value.typeRdv,\n    //   // dateRdv: this.propositionForm.value.dateRdv,\n    //   // heureRdv: this.propositionForm.value.heureRdv,\n    //   // id: await this.praticienSrvc.getUserIDByStorage(),\n    //   id: 0,\n    // };\n\n    if (this.propositionForm.valid) {\n      let data_to_send;\n      if (this.propositionForm.value['chekcboxAssoc'] == true) {\n\n        data_to_send = {\n          praticien: this.propositionForm.value['praticien'],\n          typeRdv: this.propositionForm.value['typeRdv'],\n          objet: this.propositionForm.value['description'],\n          Associer: 1,\n        };\n      } else {\n        data_to_send = {\n          praticien: this.propositionForm.value['praticien'],\n          typeRdv: this.propositionForm.value['typeRdv'],\n          objet: this.propositionForm.value['description'],\n        };\n      }\n      console.error(\"###################=>  LL: NewRdvComponent -> propose -> data_to_send\", data_to_send)\n      this.patientServc.proposeRdv(data_to_send).subscribe((dataV) => {\n        console.log(\"###################=> LL: NewRdvComponent -> propose -> data\", dataV)\n        this.backToList();\n      })\n    } else {\n      console.log(' not valid ');\n      this.globalInt.presentToast('completé les champs !!');\n    }\n  }\n\n  backToList() {\n    this.dismiss();\n    this.navCtrl.navigateRoot('/patient/rendez-vous');\n  }\n\n  async cancel() {\n    console.log(' cancel ');\n    this.backToList();\n  }\n\n  dismiss() {\n    // using the injected ModalController this page\n    // can \"dismiss\" itself and optionally pass back data\n    this.modalCtrl.dismiss({\n      dismissed: true,\n    });\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { RendezVousPage } from \"./rendez-vous.page\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: RendezVousPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RendezVousPageRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { RendezVousPageRoutingModule } from \"./rendez-vous-routing.module\";\n\nimport { RendezVousPage } from \"./rendez-vous.page\";\nimport { RendrezVousFilterComponent } from \"./rendrez-vous-filter/rendrez-vous-filter.component\";\nimport { NewRdvComponent } from \"./new-rdv/new-rdv.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RendezVousPageRoutingModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [RendezVousPage, RendrezVousFilterComponent, NewRdvComponent],\n})\nexport class RendezVousPageModule {}\n","export default \"ion-fab-button {\\n  --background: var(--ion-color-step-150, #fff);\\n  --background-hover: var(--ion-color-step-200, #f2f2f2);\\n  --background-focused: var(--ion-color-step-250, #d9d9d9);\\n  --color: var(--ion-color-primary, #3880ff);\\n}\\n\\n/*\\n     * Material Design uses the ripple for activated\\n     * so only style the iOS activated background\\n     */\\n\\n.ios ion-fab-button {\\n  --background-activated: var(--ion-color-step-250, #d9d9d9);\\n}\\n\\nion-item-sliding[track=ionic] ion-label.information {\\n  border-left: 2px solid var(--ion-color-primary);\\n  padding-left: 3px;\\n}\\n\\nion-item-sliding[track=vaccination] ion-label.information {\\n  border-left: 2px solid #8e8d93;\\n  padding-left: 3px;\\n}\\n\\nion-item-sliding[track=consultation] ion-label.information {\\n  border-left: 2px solid #fed035;\\n  padding-left: 3px;\\n}\\n\\nion-item-sliding[track=intervention] ion-label.information {\\n  border-left: 2px solid #6600cc;\\n  padding-left: 3px;\\n}\\n\\n.status {\\n  text-align: right;\\n  width: 90px;\\n}\\n\\n.middle {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.btn-cnfrm {\\n  display: flex;\\n  justify-content: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcGF0aWVudC9yZW5kZXotdm91cy9yZW5kZXotdm91cy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSw2Q0FBQTtFQUNBLHNEQUFBO0VBQ0Esd0RBQUE7RUFFQSwwQ0FBQTtBQUFGOztBQUdBOzs7TUFBQTs7QUFJQTtFQUNFLDBEQUFBO0FBQUY7O0FBWUk7RUFDRSwrQ0FBQTtFQUNBLGlCQUFBO0FBVE47O0FBT0k7RUFDRSw4QkFBQTtFQUNBLGlCQUFBO0FBSk47O0FBRUk7RUFDRSw4QkFBQTtFQUNBLGlCQUFBO0FBQ047O0FBSEk7RUFDRSw4QkFBQTtFQUNBLGlCQUFBO0FBTU47O0FBREE7RUFDRSxpQkFBQTtFQUNBLFdBQUE7QUFJRjs7QUFEQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtBQUlGOztBQURBO0VBQ0UsYUFBQTtFQUNBLHVCQUFBO0FBSUYiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9wYXRpZW50L3JlbmRlei12b3VzL3JlbmRlei12b3VzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1mYWItYnV0dG9uIHtcclxuICAtLWJhY2tncm91bmQ6IHZhcigtLWlvbi1jb2xvci1zdGVwLTE1MCwgI2ZmZik7XHJcbiAgLS1iYWNrZ3JvdW5kLWhvdmVyOiB2YXIoLS1pb24tY29sb3Itc3RlcC0yMDAsICNmMmYyZjIpO1xyXG4gIC0tYmFja2dyb3VuZC1mb2N1c2VkOiB2YXIoLS1pb24tY29sb3Itc3RlcC0yNTAsICNkOWQ5ZDkpO1xyXG5cclxuICAtLWNvbG9yOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSwgIzM4ODBmZik7XHJcbn1cclxuXHJcbi8qXHJcbiAgICAgKiBNYXRlcmlhbCBEZXNpZ24gdXNlcyB0aGUgcmlwcGxlIGZvciBhY3RpdmF0ZWRcclxuICAgICAqIHNvIG9ubHkgc3R5bGUgdGhlIGlPUyBhY3RpdmF0ZWQgYmFja2dyb3VuZFxyXG4gICAgICovXHJcbi5pb3MgaW9uLWZhYi1idXR0b24ge1xyXG4gIC0tYmFja2dyb3VuZC1hY3RpdmF0ZWQ6IHZhcigtLWlvbi1jb2xvci1zdGVwLTI1MCwgI2Q5ZDlkOSk7XHJcbn1cclxuXHJcbiRjYXRlZ29yaWVzOiAoXHJcbiAgaW9uaWM6IHZhcigtLWlvbi1jb2xvci1wcmltYXJ5KSxcclxuICB2YWNjaW5hdGlvbjogIzhlOGQ5MyxcclxuICBjb25zdWx0YXRpb246ICNmZWQwMzUsXHJcbiAgaW50ZXJ2ZW50aW9uOiAjNjYwMGNjLFxyXG4pO1xyXG5cclxuQGVhY2ggJHRyYWNrLCAkdmFsdWUgaW4gbWFwLXJlbW92ZSgkY2F0ZWdvcmllcykge1xyXG4gIGlvbi1pdGVtLXNsaWRpbmdbdHJhY2s9XCIjeyR0cmFja31cIl0gaW9uLWxhYmVsIHtcclxuICAgICYuaW5mb3JtYXRpb24ge1xyXG4gICAgICBib3JkZXItbGVmdDogMnB4IHNvbGlkICR2YWx1ZTtcclxuICAgICAgcGFkZGluZy1sZWZ0OiAzcHg7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4uc3RhdHVzIHtcclxuICB0ZXh0LWFsaWduOiByaWdodDtcclxuICB3aWR0aDogOTBweDtcclxufVxyXG5cclxuLm1pZGRsZSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4uYnRuLWNuZnJtIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcbiJdfQ== */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { IUserPraticien } from 'src/app/Interfaces/praticien.interface';\nimport { RendrezVousFilterComponent } from './rendrez-vous-filter/rendrez-vous-filter.component';\nimport {\n  AlertController,\n  LoadingController,\n  ModalController,\n  IonRouterOutlet,\n  ToastController,\n  Config,\n  IonList,\n} from '@ionic/angular';\nimport { PraticienService } from 'src/app/services/praticien.service';\nimport { Router } from '@angular/router';\nimport { PatientService } from 'src/app/services/patient.service';\nimport { NewRdvComponent } from './new-rdv/new-rdv.component';\nimport { DataTransformerService } from 'src/app/services/data-transformer.service';\nimport { IRdvPatient } from 'src/app/Interfaces/patient.interface';\nimport { GlobalElementInjectionService } from 'src/app/services/global-element-injection.service';\nimport { GlobalInteraction } from '../../global.interaction';\n\n@Component({\n  selector: 'app-rendez-vous',\n  templateUrl: './rendez-vous.page.html',\n  styleUrls: ['./rendez-vous.page.scss'],\n})\nexport class RendezVousPage implements OnInit {\n  @ViewChild('List', { static: true }) List: IonList; // TODO : get all consultation list\n\n  ios: boolean;\n  dayIndex = 0;\n  queryText = '';\n  segment = 'all';\n  excludeTracksStates: any = [];\n  excludeTracksTypes: any = [];\n  shownSessions: any = [];\n  rdvs: IRdvPatient[] = [];\n  rdvShow: any = [];\n  allBrute: any = [];\n  confDate: string;\n  showSearchbar: boolean;\n  rdvFiltered: any = [];\n  praticiens: IUserPraticien[];\n  functions: any;\n  public REALIZED = 'REALISE';\n  public CANCELED = 'ANNULE';\n  public SCHEDULED = 'PLANIFIER';\n  public PENDING = 'EN ATTENTE';\n  STRING_DATE = 'dateRdv';\n  STRING2_DATE = 'dateConsultation';\n  constructor(\n    public alertCtrl: AlertController,\n    public patientSrvc: PatientService, // TODO : list of data\n    public loadingCtrl: LoadingController,\n    public modalCtrl: ModalController,\n    public router: Router,\n    public routerOutlet: IonRouterOutlet,\n    public toastCtrl: ToastController,\n    public praticientSrvc: PraticienService,\n    public config: Config,\n    private dataTransformer: DataTransformerService,\n    private globaleEl: GlobalElementInjectionService,\n    private globalItem: GlobalInteraction,\n    private praticienSrv: PraticienService\n  ) { }\n\n  ngOnInit() {\n    this.globalItem.presentLoading();\n    this.getAllData();\n    this.ios = this.config.get('mode') === 'ios';\n  }\n\n  getAllfonction() {\n    this.praticienSrv.getPraticienFunctions().subscribe((data) => {\n      this.functions = data;\n    });\n  }\n\n  showAccepted() {\n    this.rdvFiltered = this.dataTransformer.onlyAccepted(\n      this.rdvFiltered,\n      'status',\n      this.REALIZED,\n      this.segment\n    );\n  }\n\n  async openNewRdvModal() {\n    const newRdvModal = await this.modalCtrl.create({\n      component: NewRdvComponent,\n      cssClass: 'test-class',\n      swipeToClose: true,\n      componentProps: {\n        // praticiens: this.praticiens,\n        funcitons: this.functions,\n        test: 'test',\n      },\n    });\n    newRdvModal.onDidDismiss().then(() => {\n      this.updateRdvList();\n    });\n    return await newRdvModal.present();\n  }\n\n  async getAllData() {\n    await this.patientSrvc.getAllRdv().subscribe((data: any) => {\n      console.log('RendezVousPage -> getAllData -> data', data);\n      this.rdvs = data;\n      const result = this.allData(data, this.STRING_DATE, this.STRING2_DATE);\n      this.allBrute = result;\n      this.rdvShow = result.data;\n      this.rdvFiltered = result.dataByDate;\n      this.getPraticiens();\n    });\n  }\n\n  updateRdvList() {\n    if (this.List) {\n      this.List.closeSlidingItems();\n    }\n  }\n\n  // TODO : exclude on filter\n  filterItems(ev: any) {\n    const query = ev.target.value.toLowerCase();\n    requestAnimationFrame(() => {\n      if (!query || query === '') {\n        this.showAccepted();\n        return;\n      }\n      this.rdvFiltered = this.dataTransformer.filterItems(\n        query,\n        ['objetConsultation', 'vaccin'],\n        'status',\n        this.segment,\n        this.rdvFiltered,\n        'praticien',\n        ['firstName', 'lastName']\n      );\n    });\n  }\n\n  alert() {\n    console.log('ok ++++ ');\n  }\n\n  async presentFilter() {\n    const modal = await this.modalCtrl.create({\n      component: RendrezVousFilterComponent,\n      swipeToClose: true,\n      presentingElement: this.routerOutlet.nativeEl,\n      componentProps: {\n        excludeTracksStates: this.excludeTracksStates,\n        excludeTracksTypes: this.excludeTracksTypes,\n      },\n    });\n    await modal.present();\n\n    const { data } = await modal.onWillDismiss();\n\n    if (data) {\n      this.excludeTracksStates = data.states;\n      this.excludeTracksTypes = data.types;\n      this.rdvFiltered = this.dataTransformer.hideOnexclude(\n        data.fuseData,\n        ['type'],\n        this.segment,\n        this.rdvFiltered\n      );\n    }\n  }\n\n  async openSocial(network: string, fab: HTMLIonFabElement) {\n    const loading = await this.loadingCtrl.create({\n      message: `Posting to ${network}`,\n      duration: Math.random() * 1000 + 500,\n    });\n    await loading.present();\n    await loading.onWillDismiss();\n    fab.close();\n  }\n\n  getPraticiens() {\n    // TODO APK: à decommenter\n    this.praticientSrvc.getAllPraticien().subscribe((data) => {\n      this.praticiens = data;\n      this.globalItem.dismissLoading();\n    });\n  }\n\n  alertAcceptRdv(id) {\n    this.globaleEl.alertAccept(id, this.rdvs, 'status', this.REALIZED);\n  }\n\n  alertRemoveRdv(_id, _typeRdv) {\n    // this.globaleEl.alertRemove(_id, this.rdvs, \"status\", this.CANCELED);\n    this.globalItem.alertDelete(\n      { id: _id, typeRdv: _typeRdv },\n      this,\n      `tu veux vraiment annulé ce rendez-vous ?`,\n      this.cancelRdv,\n      `Annulation rendez-vous`\n    );\n  }\n\n  cancelRdv(dataRdv, parent) {\n    console.log(\n      'LL: RendezVousPage -> cancelRdv -> _idRdv, typeRdv',\n      dataRdv\n    );\n    parent.patientSrvc.cancelRdvProposition(dataRdv).subscribe(() => {\n      parent.globalItem.presentToast('Rendez-vous annulé!!!');\n      parent.getAllData();\n    });\n  }\n\n  allData(\n    list,\n    string_date = 'date',\n    string2_date = 'date'\n  ): { data: any[]; dataByDate: { date: string; groups: any }[] } {\n    let dataShow: any[] = [];\n    list.forEach((element) => {\n      const dataToPush = Object.assign(element, { show: true });\n      dataShow.push(dataToPush);\n    });\n    const listByDate = this.regroupDataByDate(\n      [...dataShow],\n      string_date,\n      string2_date\n    );\n    const res = {\n      data: dataShow,\n      dataByDate: listByDate,\n    };\n    return res;\n  }\n  // Regrouper les données en fonction de la date\n  regroupDataByDate(data, string_date, string2_date) {\n    console.log('regroupDataByDate -> string_date **** ', string_date);\n    const groups = data.reduce((groups, eachData) => {\n      console.log('regroupDataByDate -> eachData', eachData);\n      let true_date =\n        eachData[string_date] !== undefined\n          ? (eachData[string_date] !== null ? eachData[string_date].date : new Date())\n          : (eachData[string2_date] !== null ? eachData[string2_date].date : new Date());\n      const type_rdv =\n        eachData[string_date] !== undefined ? 'consultation' : 'intervention';\n      const allStatus = eachData.status == null ? eachData.statusConsultation : eachData.status;\n      const result = Object.assign(eachData, { type: type_rdv, _status: allStatus });\n      console.log(\"LL: regroupDataByDate -> this.checkStatus(eachData._status, eachData.etat)\", this.checkStatus(eachData._status, eachData.etat))\n      const date = true_date;\n      if (!groups[date]) {\n        groups[date] = [];\n      }\n      groups[date].push(result);\n      return groups;\n    }, {});\n\n    const groupArrays = Object.keys(groups).map((date) => {\n      return {\n        date,\n        groups: groups[date],\n      };\n    });\n    const sortedActivities = groupArrays.slice().sort(function (a, b) {\n      return new Date(a.date).getTime() - new Date(b.date).getTime();\n    });\n    console.log('regroupDataByDate -> sortedActivities', sortedActivities);\n    return sortedActivities;\n  }\n\n  checkStatus(statusConsultation, etat) {\n    if (statusConsultation == 0) {\n      return this.PENDING;\n\n    } else if (statusConsultation == 1) {\n      if (etat == 0) {\n        return this.SCHEDULED; // Bouton cancel\n      } else {\n        return this.REALIZED;\n      }\n    } else if (statusConsultation == 2) {\n      return this.CANCELED;\n    }\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3BhdGllbnQvcmVuZGV6LXZvdXMvcmVuZHJlei12b3VzLWZpbHRlci9yZW5kcmV6LXZvdXMtZmlsdGVyLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from \"@angular/core\";\nimport { Config, ModalController, NavParams } from \"@ionic/angular\";\nimport { PatientService } from \"src/app/services/patient.service\";\n\n@Component({\n  selector: \"app-rendrez-vous-filter\",\n  templateUrl: \"./rendrez-vous-filter.component.html\",\n  styleUrls: [\"./rendrez-vous-filter.component.scss\"],\n})\nexport class RendrezVousFilterComponent {\n  ios: boolean;\n\n  trackStatsMock: { name: string; icon: string; isChecked: boolean }[] = [\n    // {\n    //   name: \"ANNULE\",\n    //   icon: \"\",\n    //   isChecked: true,\n    // },\n    // {\n    //   name: \"EN ATTENTE\",\n    //   icon: \"\",\n    //   isChecked: true,\n    // },\n    // {\n    //   name: \"REALiSE\",\n    //   icon: \"\",\n    //   isChecked: true,\n    // },\n  ];\n\n  trackTypeMock: { name: string; icon: string; isChecked: boolean }[] = [\n    {\n      name: \"Intervention\",\n      icon: \"\",\n      isChecked: true,\n    },\n    {\n      name: \"Consultation\",\n      icon: \"\",\n      isChecked: true,\n    },\n    // {\n    //   name: \"Vaccination\",\n    //   icon: \"\",\n    //   isChecked: true,\n    // },\n  ];\n\n  public tracksStates: {\n    name: string;\n    icon: string;\n    isChecked: boolean;\n  }[] = [];\n  public tracksTypes: { name: string; icon: string; isChecked: boolean }[] = [];\n\n  constructor(\n    private patientSrvc: PatientService,\n    private config: Config,\n    public modalCtrl: ModalController,\n    public navParams: NavParams\n  ) { }\n\n  ionViewWillEnter() {\n    this.ios = this.config.get(\"mode\") === `ios`;\n\n    // passed in array of track names that should be excluded (unchecked)\n    const excludedTrackStates = this.navParams.get(\"excludeTracksStates\");\n    console.log(\n      \"RendrezVousFilterComponent -> ionViewWillEnter -> excludedTracksStates\",\n      excludedTrackStates\n    );\n    const excludedTrackTypes = this.navParams.get(\"excludeTracksTypes\");\n    console.log(\n      \"RendrezVousFilterComponent -> ionViewWillEnter -> excludedTracksTypes\",\n      excludedTrackTypes\n    );\n\n    this.trackStatsMock.forEach((track) => {\n      this.tracksStates.push({\n        name: track.name,\n        icon: track.icon,\n        isChecked:\n          excludedTrackStates === undefined\n            ? true\n            : excludedTrackStates.indexOf(track.name.toLowerCase()) === -1,\n      });\n    });\n\n    this.trackTypeMock.forEach((track) => {\n      this.tracksTypes.push({\n        name: track.name,\n        icon: track.icon,\n        isChecked:\n          excludedTrackTypes === undefined\n            ? true\n            : excludedTrackTypes.indexOf(track.name.toLowerCase()) === -1,\n      });\n    });\n  }\n\n  selectAll(check: boolean) {\n    // set all to checked or unchecked\n    this.tracksStates.forEach((track) => {\n      track.isChecked = check;\n    });\n    this.tracksTypes.forEach((track) => {\n      track.isChecked = check;\n    });\n  }\n\n  applyFilters() {\n    // Pass back a new array of track names to exclude\n    const excludedTrackStatesNames = this.tracksStates\n      .filter((c) => !c.isChecked)\n      .map((c) => c.name.toLowerCase());\n\n    const excludedTrackTypesNames = this.tracksTypes\n      .filter((c) => !c.isChecked)\n      .map((c) => c.name.toLowerCase());\n    const res = excludedTrackStatesNames.concat(excludedTrackTypesNames);\n    this.dismiss({\n      states: excludedTrackStatesNames,\n      types: excludedTrackTypesNames,\n      fuseData: res,\n    });\n  }\n\n  dismiss(data?: any) {\n    console.log(\"RendrezVousFilterComponent -> dismiss -> data\", data);\n    // using the injected ModalController this page\n    // can \"dismiss\" itself and pass back data\n    this.modalCtrl.dismiss(data);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3ByYXRpY2llbi9yZW5kZXotdm91cy9uZXctcmVuZGV6LXZvdXMvbmV3LXJlbmRlei12b3VzLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, Input, OnInit } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ModalController, NavController, NavParams } from '@ionic/angular';\nimport { IPatient } from 'src/app/Interfaces/patient.interface';\nimport { IProposeRdv } from 'src/app/Interfaces/propose-rdv.interface';\nimport { PraticienService } from 'src/app/services/praticien.service';\n\n@Component({\n  selector: 'app-new-rendez-vous',\n  templateUrl: './new-rendez-vous.component.html',\n  styleUrls: ['./new-rendez-vous.component.scss'],\n})\nexport class NewRendezVousComponent implements OnInit {\n\n  @Input() test: String;\n  @Input() patients: IPatient[];\n\n  public propositionForm: FormGroup;\n  selected: any;\n  constructor(\n    private praticienSrvc: PraticienService,\n    private navCtrl: NavController,\n    private navParms: NavParams,\n    private modalCtrl: ModalController,\n  ) { }\n\n  async ngOnInit() {\n    this.propositionForm = new FormGroup({\n      patient: new FormControl(\"\", [Validators.required]),\n      dateRdv: new FormControl(\"\", [Validators.required]),\n      heureRdv: new FormControl(\"\", [Validators.required]),\n      description: new FormControl(\"\", [Validators.required]),\n    });\n    console.log(\n      \"NewRdvComponent -> patients -> test\",\n      this.navParms.get(\"patients\")\n    );\n    this.patients = this.navParms.get(\"patients\");\n    this.patients.forEach((element) => {\n      console.log(\"NewRdvComponent -> patients\", element.firstName);\n    });\n  }\n\n  isFieldInvalid(dataFormStep, field: string) {\n    return (\n      (!dataFormStep.get(field).valid && dataFormStep.get(field).touched) ||\n      (dataFormStep.get(field).untouched && !dataFormStep.get(field).valid)\n    );\n  }\n\n  async propose() {\n    const prop: IProposeRdv = {\n      description: this.propositionForm.value.description,\n      patient: this.propositionForm.value.patient,\n      dateRdv: this.propositionForm.value.dateRdv,\n      heureRdv: this.propositionForm.value.heureRdv,\n      // id: await this.praticienSrvc.getUserIDByStorage(),\n      id: 0,\n    };\n\n    console.log(\n      this.propositionForm.value.patient,\n      this.propositionForm.value.dateRdv,\n      this.propositionForm.value.description,\n      this.propositionForm.value.heureRdv,\n      prop.id\n    );\n    if (this.propositionForm.valid) {\n      console.log(\" proposition envoyé \");\n\n      this.praticienSrvc.proposeRdv(prop);\n      this.backToList();\n    } else {\n      console.log(\" not valid \");\n    }\n  }\n\n  backToList() {\n    this.navCtrl.navigateRoot(\"/praticien/proposition-rdv\");\n    this.dismiss();\n  }\n\n  async cancel() {\n    console.log(\" cancel \");\n    this.backToList();\n  }\n\n  dismiss() {\n    // using the injected ModalController this page\n    // can \"dismiss\" itself and optionally pass back data\n    this.modalCtrl.dismiss({\n      dismissed: true,\n    });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { RendezVousPage } from './rendez-vous.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: RendezVousPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RendezVousPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { RendezVousPageRoutingModule } from './rendez-vous-routing.module';\n\nimport { RendezVousPage } from './rendez-vous.page';\nimport { NewRendezVousComponent } from './new-rendez-vous/new-rendez-vous.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RendezVousPageRoutingModule,\n    ReactiveFormsModule\n  ],\n  declarations: [RendezVousPage, NewRendezVousComponent]\n})\nexport class RendezVousPageModule { }\n","export default \"ion-fab-button {\\n  --background: var(--ion-color-step-150, #fff);\\n  --background-hover: var(--ion-color-step-200, #f2f2f2);\\n  --background-focused: var(--ion-color-step-250, #d9d9d9);\\n  --color: var(--ion-color-primary, #3880ff);\\n}\\n\\n/*\\n* Material Design uses the ripple for activated\\n* so only style the iOS activated background\\n*/\\n\\n.ios ion-fab-button {\\n  --background-activated: var(--ion-color-step-250, #d9d9d9);\\n}\\n\\nion-item-sliding[track=ionic] ion-label.information {\\n  border-left: 2px solid var(--ion-color-primary);\\n  padding-left: 3px;\\n}\\n\\nion-item-sliding[track=vaccination] ion-label.information {\\n  border-left: 2px solid #8e8d93;\\n  padding-left: 3px;\\n}\\n\\nion-item-sliding[track=consultation] ion-label.information {\\n  border-left: 2px solid #fed035;\\n  padding-left: 3px;\\n}\\n\\nion-item-sliding[track=intervention] ion-label.information {\\n  border-left: 2px solid #6600cc;\\n  padding-left: 3px;\\n}\\n\\n.status {\\n  text-align: right;\\n  width: 90px;\\n}\\n\\n.middle {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.btn-cnfrm {\\n  display: flex;\\n  justify-content: center;\\n}\\n\\nion-col > ion-button {\\n  min-width: 120px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcHJhdGljaWVuL3JlbmRlei12b3VzL3JlbmRlei12b3VzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLDZDQUFBO0VBQ0Esc0RBQUE7RUFDQSx3REFBQTtFQUVBLDBDQUFBO0FBQUY7O0FBR0E7OztDQUFBOztBQUlBO0VBQ0UsMERBQUE7QUFBRjs7QUFZSTtFQUNFLCtDQUFBO0VBQ0EsaUJBQUE7QUFUTjs7QUFPSTtFQUNFLDhCQUFBO0VBQ0EsaUJBQUE7QUFKTjs7QUFFSTtFQUNFLDhCQUFBO0VBQ0EsaUJBQUE7QUFDTjs7QUFISTtFQUNFLDhCQUFBO0VBQ0EsaUJBQUE7QUFNTjs7QUFEQTtFQUNFLGlCQUFBO0VBQ0EsV0FBQTtBQUlGOztBQURBO0VBQ0UsYUFBQTtFQUNBLG1CQUFBO0FBSUY7O0FBREE7RUFDRSxhQUFBO0VBQ0EsdUJBQUE7QUFJRjs7QUFEQTtFQUNFLGdCQUFBO0FBSUYiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9wcmF0aWNpZW4vcmVuZGV6LXZvdXMvcmVuZGV6LXZvdXMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWZhYi1idXR0b24ge1xyXG4gIC0tYmFja2dyb3VuZDogdmFyKC0taW9uLWNvbG9yLXN0ZXAtMTUwLCAjZmZmKTtcclxuICAtLWJhY2tncm91bmQtaG92ZXI6IHZhcigtLWlvbi1jb2xvci1zdGVwLTIwMCwgI2YyZjJmMik7XHJcbiAgLS1iYWNrZ3JvdW5kLWZvY3VzZWQ6IHZhcigtLWlvbi1jb2xvci1zdGVwLTI1MCwgI2Q5ZDlkOSk7XHJcblxyXG4gIC0tY29sb3I6IHZhcigtLWlvbi1jb2xvci1wcmltYXJ5LCAjMzg4MGZmKTtcclxufVxyXG5cclxuLypcclxuKiBNYXRlcmlhbCBEZXNpZ24gdXNlcyB0aGUgcmlwcGxlIGZvciBhY3RpdmF0ZWRcclxuKiBzbyBvbmx5IHN0eWxlIHRoZSBpT1MgYWN0aXZhdGVkIGJhY2tncm91bmRcclxuKi9cclxuLmlvcyBpb24tZmFiLWJ1dHRvbiB7XHJcbiAgLS1iYWNrZ3JvdW5kLWFjdGl2YXRlZDogdmFyKC0taW9uLWNvbG9yLXN0ZXAtMjUwLCAjZDlkOWQ5KTtcclxufVxyXG5cclxuJGNhdGVnb3JpZXM6IChcclxuICBpb25pYzogdmFyKC0taW9uLWNvbG9yLXByaW1hcnkpLFxyXG4gIHZhY2NpbmF0aW9uOiAjOGU4ZDkzLFxyXG4gIGNvbnN1bHRhdGlvbjogI2ZlZDAzNSxcclxuICBpbnRlcnZlbnRpb246ICM2NjAwY2MsXHJcbik7XHJcblxyXG5AZWFjaCAkdHJhY2ssICR2YWx1ZSBpbiBtYXAtcmVtb3ZlKCRjYXRlZ29yaWVzKSB7XHJcbiAgaW9uLWl0ZW0tc2xpZGluZ1t0cmFjaz0nI3skdHJhY2t9J10gaW9uLWxhYmVsIHtcclxuICAgICYuaW5mb3JtYXRpb24ge1xyXG4gICAgICBib3JkZXItbGVmdDogMnB4IHNvbGlkICR2YWx1ZTtcclxuICAgICAgcGFkZGluZy1sZWZ0OiAzcHg7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4uc3RhdHVzIHtcclxuICB0ZXh0LWFsaWduOiByaWdodDtcclxuICB3aWR0aDogOTBweDtcclxufVxyXG5cclxuLm1pZGRsZSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4uYnRuLWNuZnJtIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcblxyXG5pb24tY29sID4gaW9uLWJ1dHRvbiB7XHJcbiAgbWluLXdpZHRoOiAxMjBweDtcclxufVxyXG4iXX0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { IUserPraticien } from 'src/app/Interfaces/praticien.interface';\nimport {\n  AlertController,\n  LoadingController,\n  ModalController,\n  IonRouterOutlet,\n  ToastController,\n  Config,\n  IonList,\n} from '@ionic/angular';\nimport { PraticienService } from 'src/app/services/praticien.service';\nimport { Router } from '@angular/router';\nimport { PatientService } from 'src/app/services/patient.service';\nimport { DataTransformerService } from 'src/app/services/data-transformer.service';\nimport { IRdvPatient } from 'src/app/Interfaces/patient.interface';\nimport { GlobalElementInjectionService } from 'src/app/services/global-element-injection.service';\nimport { GlobalInteraction } from '../../global.interaction';\nimport { NewRendezVousComponent } from './new-rendez-vous/new-rendez-vous.component';\n\n@Component({\n  selector: 'app-rendez-vous',\n  templateUrl: './rendez-vous.page.html',\n  styleUrls: ['./rendez-vous.page.scss'],\n})\nexport class RendezVousPage implements OnInit {\n  @ViewChild('List', { static: true }) List: IonList; // TODO : get all consultation list\n\n  ios: boolean;\n  dayIndex = 0;\n  queryText = '';\n  segment = 'all';\n  excludeTracksStates: any = [];\n  excludeTracksTypes: any = [];\n  shownSessions: any = [];\n  rdvs: any = [];\n  rdvShow: any = [];\n  allBrute: any = [];\n  confDate: string;\n  showSearchbar: boolean;\n  rdvFiltered: any = [];\n  praticiens: IUserPraticien[];\n  functions: any;\n  public REALIZED = 'REALISE';\n  public CANCELED = 'ANNULE';\n  public SCHEDULED = 'PLANIFIER';\n  public PENDING = 'EN ATTENTE';\n  STRING_DATE = 'dateRdv';\n  STRING2_DATE = 'dateConsultation';\n  constructor(\n    public alertCtrl: AlertController,\n    public patientSrvc: PatientService, // TODO : list of data\n    public loadingCtrl: LoadingController,\n    public modalCtrl: ModalController,\n    public router: Router,\n    public routerOutlet: IonRouterOutlet,\n    public toastCtrl: ToastController,\n    public praticientSrvc: PraticienService,\n    public config: Config,\n    private dataTransformer: DataTransformerService,\n    private globaleEl: GlobalElementInjectionService,\n    private globalItem: GlobalInteraction,\n    private praticienSrvc: PraticienService\n  ) { }\n\n  ngOnInit() {\n\n    this.ios = this.config.get('mode') === 'ios';\n    this.getAllData();\n  }\n\n  async openNewRdvModal() {\n    const newRdvModal = await this.modalCtrl.create({\n      component: NewRendezVousComponent,\n      cssClass: 'test-class',\n      swipeToClose: true,\n      componentProps: {\n        // praticiens: this.praticiens,\n        funcitons: this.functions,\n        test: 'test',\n      },\n    });\n    newRdvModal.onDidDismiss().then(() => {\n      this.updateRdvList();\n    });\n    return await newRdvModal.present();\n  }\n\n  async getAllData() {\n    await this.praticienSrvc.getAllRdv().subscribe((data: any) => {\n      console.log('RendezVousPage -> getAllData -> data', data);\n      this.rdvs = data;\n      const result = this.allData(data, this.STRING_DATE, this.STRING2_DATE);\n      this.allBrute = result;\n      this.rdvShow = result.data;\n      this.rdvFiltered = result.dataByDate;\n      this.getPraticiens();\n    });\n  }\n\n  updateRdvList() {\n    if (this.List) {\n      this.List.closeSlidingItems();\n    }\n  }\n\n  // TODO : exclude on filter\n  filterItems(ev: any) {\n    const query = ev.target.value.toLowerCase();\n    requestAnimationFrame(() => {\n      if (!query || query === '') {\n        return;\n      }\n      this.rdvFiltered = this.dataTransformer.filterItems(\n        query,\n        ['objetConsultation', 'vaccin'],\n        'status',\n        this.segment,\n        this.rdvFiltered,\n        'praticien',\n        ['firstName', 'lastName']\n      );\n    });\n  }\n\n  alert() {\n    console.log('ok ++++ ');\n  }\n\n  async presentFilter() {\n    const modal = await this.modalCtrl.create({\n      component: \"RendrezVousFilterComponent\",\n      swipeToClose: true,\n      presentingElement: this.routerOutlet.nativeEl,\n      componentProps: {\n        excludeTracksStates: this.excludeTracksStates,\n        excludeTracksTypes: this.excludeTracksTypes,\n      },\n    });\n    await modal.present();\n\n    const { data } = await modal.onWillDismiss();\n\n    if (data) {\n      this.excludeTracksStates = data.states;\n      this.excludeTracksTypes = data.types;\n      this.rdvFiltered = this.dataTransformer.hideOnexclude(\n        data.fuseData,\n        ['type'],\n        this.segment,\n        this.rdvFiltered\n      );\n    }\n  }\n\n  async openSocial(network: string, fab: HTMLIonFabElement) {\n    const loading = await this.loadingCtrl.create({\n      message: `Posting to ${network}`,\n      duration: Math.random() * 1000 + 500,\n    });\n    await loading.present();\n    await loading.onWillDismiss();\n    fab.close();\n  }\n\n  getPraticiens() {\n    // TODO APK: à decommenter\n    this.praticientSrvc.getAllPraticien().subscribe((data) => {\n      this.praticiens = data;\n      this.globalItem.dismissLoading();\n    });\n  }\n\n  alertAcceptRdv(id) {\n    this.globaleEl.alertAccept(id, this.rdvs, 'status', this.REALIZED);\n  }\n\n  alertRemoveRdv(_id, _typeRdv) {\n    // this.globaleEl.alertRemove(_id, this.rdvs, \"status\", this.CANCELED);\n    this.globalItem.alertDelete(\n      { id: _id, typeRdv: _typeRdv },\n      this,\n      `tu veux vraiment annulé ce rendez-vous ?`,\n      this.cancelRdv,\n      `Annulation rendez-vous`\n    );\n  }\n\n  cancelRdv(dataRdv, parent) {\n    console.log(\n      'LL: RendezVousPage -> cancelRdv -> _idRdv, typeRdv',\n      dataRdv\n    );\n    parent.patientSrvc.cancelRdvProposition(dataRdv).subscribe(() => {\n      parent.globalItem.presentToast('Rendez-vous annulé!!!');\n      parent.getAllData();\n    });\n  }\n\n  allData(\n    list,\n    string_date = 'date',\n    string2_date = 'date'\n  ): { data: any[]; dataByDate: { date: string; groups: any }[] } {\n    let dataShow: any[] = [];\n    list.forEach((element) => {\n      const dataToPush = Object.assign(element, { show: true });\n      dataShow.push(dataToPush);\n    });\n    const listByDate = this.regroupDataByDate(\n      [...dataShow],\n      string_date,\n      string2_date\n    );\n    const res = {\n      data: dataShow,\n      dataByDate: listByDate,\n    };\n    return res;\n  }\n  // Regrouper les données en fonction de la date\n  regroupDataByDate(data, string_date, string2_date) {\n    console.log('regroupDataByDate -> string_date **** ', string_date);\n    const groups = data.reduce((groups, eachData) => {\n      console.log('regroupDataByDate -> eachData', eachData);\n      let true_date =\n        eachData[string_date] !== undefined\n          ? (eachData[string_date] !== null ? eachData[string_date].date : new Date())\n          : (eachData[string2_date] !== null ? eachData[string2_date].date : new Date());\n      const type_rdv =\n        eachData[string_date] !== undefined ? 'consultation' : 'intervention';\n      const allStatus = eachData.status == null ? eachData.statusConsultation : eachData.status;\n      const result = Object.assign(eachData, { type: type_rdv, _status: allStatus, date: true_date });\n      console.log(\"LL: regroupDataByDate -> this.checkStatus(eachData._status, eachData.etat)\", this.checkStatus(eachData._status, eachData.etat))\n      const date = true_date;\n      if (!groups[date]) {\n        groups[date] = [];\n      }\n      groups[date].push(result);\n      return groups;\n    }, {});\n\n    const groupArrays = Object.keys(groups).map((date) => {\n      return {\n        date,\n        groups: groups[date],\n      };\n    });\n    const sortedActivities = groupArrays.slice().sort(function (a, b) {\n      return new Date(a.date).getTime() - new Date(b.date).getTime();\n    });\n    console.log('regroupDataByDate -> sortedActivities', sortedActivities);\n    return sortedActivities;\n  }\n\n  checkStatus(statusConsultation, etat) {\n    if (statusConsultation == 0) {\n      return this.PENDING;\n\n    } else if (statusConsultation == 1) {\n      if (etat == 0) {\n        return this.SCHEDULED; // Bouton cancel\n      } else {\n        return this.REALIZED;\n      }\n    } else if (statusConsultation == 2) {\n      return this.CANCELED;\n    }\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { AlertController } from \"@ionic/angular\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class GlobalElementInjectionService {\n  constructor(private alertCtrl: AlertController) {}\n\n  async alertAccept(\n    id,\n    array = [],\n    keyStatus: String = \"status\",\n    OkStatus: String = \"Accepted\"\n  ) {\n    const alert = await this.alertCtrl.create({\n      cssClass: \"my-custom-class\",\n      header: \"Accept\",\n      message: \"Do you really want to accept it ? \",\n      buttons: [\n        {\n          text: \"Cancel\",\n          role: \"cancel\",\n          cssClass: \"secondary\",\n          handler: () => {\n            console.log(\"Confirm Cancel: blah\");\n          },\n        },\n        {\n          text: \"OK\",\n          handler: () => {\n            console.log(\"data accepted \" + id);\n            this.accept(id, array, keyStatus, OkStatus);\n          },\n        },\n      ],\n    });\n    await alert.present();\n  }\n\n  async alertRemove(\n    id,\n    array = [],\n    keyStatus: String = \"status\",\n    RefuseStatus: String = \"Refused\"\n  ) {\n    const alert = await this.alertCtrl.create({\n      cssClass: \"my-custom-class\",\n      header: \"Refuse\",\n      message: \"Do you really want to refuse it ? \",\n      buttons: [\n        {\n          text: \"Cancel\",\n          role: \"cancel\",\n          cssClass: \"secondary\",\n          handler: () => {\n            console.log(\"Confirm Cancel: blah\");\n          },\n        },\n        {\n          text: \"OK\",\n          handler: () => {\n            console.log(\"data refused \" + id);\n            this.remove(id, array, keyStatus, RefuseStatus);\n          },\n        },\n      ],\n    });\n    await alert.present();\n  }\n\n  // TODO:change by id // actually it s his name\n  accept(\n    id,\n    array = [],\n    keyStatus: String = \"status\",\n    OkStatus: String = \"Accepted\"\n  ) {\n    array.find((element) => element.id == id)[`${keyStatus}`] = OkStatus;\n  }\n\n  remove(\n    id,\n    array = [],\n    keyStatus: String = \"status\",\n    RefuseStatus: String = \"Refused\"\n  ) {\n    const el = (test) => test.id == id;\n    array.find((element) => element.id == id)[`${keyStatus}`] = RefuseStatus;\n    const index = array.findIndex(el);\n    console.log(el);\n    array.slice(index);\n  }\n}\n"]}