{"version":3,"sources":["webpack:///src/app/pages/patient/rendez-vous/new-rdv/new-rdv.component.html","webpack:///src/app/pages/patient/rendez-vous/rendez-vous.page.html","webpack:///src/app/pages/patient/rendez-vous/rendrez-vous-filter/rendrez-vous-filter.component.html","webpack:///src/app/pages/patient/rendez-vous/new-rdv/new-rdv.component.scss","webpack:///src/app/pages/patient/rendez-vous/new-rdv/new-rdv.component.ts","webpack:///src/app/pages/patient/rendez-vous/rendez-vous-routing.module.ts","webpack:///src/app/pages/patient/rendez-vous/rendez-vous.module.ts","webpack:///src/app/pages/patient/rendez-vous/rendez-vous.page.scss","webpack:///src/app/pages/patient/rendez-vous/rendez-vous.page.ts","webpack:///src/app/pages/patient/rendez-vous/rendrez-vous-filter/rendrez-vous-filter.component.scss","webpack:///src/app/pages/patient/rendez-vous/rendrez-vous-filter/rendrez-vous-filter.component.ts","webpack:///src/app/services/global-element-injection.service.ts"],"names":["NewRdvComponent","praticienSrvc","navCtrl","navParms","modalCtrl","storage","propositionForm","praticien","required","typeRdv","dateRdv","heureRdv","description","praticiens","get","forEach","element","console","log","firstName","dataFormStep","field","valid","touched","untouched","prop","value","id","patient","backToList","navigateRoot","dismiss","dismissed","selector","template","routes","path","component","RendezVousPageRoutingModule","imports","forChild","exports","RendezVousPageModule","declarations","RendezVousPage","alertCtrl","patientSrvc","loadingCtrl","router","routerOutlet","toastCtrl","praticientSrvc","config","dataTransformer","globaleEl","dayIndex","queryText","segment","excludeTracksStates","excludeTracksTypes","shownSessions","rdvs","rdvShow","allBrute","rdvFiltered","OKSTATUS","NOPSTATUS","PENDSTATUS","getAllData","ios","getPraticiens","onlyAccepted","create","cssClass","swipeToClose","componentProps","test","newRdvModal","onDidDismiss","then","updateRdvList","present","getAllRdv","subscribe","data","result","allData","dataByDate","List","closeSlidingItems","ev","query","target","toLowerCase","requestAnimationFrame","showAccepted","filterItems","presentingElement","nativeEl","modal","onWillDismiss","states","types","hideOnexclude","fuseData","network","fab","message","duration","Math","random","loading","close","alertAccept","alertRemove","RendrezVousFilterComponent","navParams","trackStatsMock","name","icon","isChecked","trackTypeMock","tracksStates","tracksTypes","excludedTrackStates","excludedTrackTypes","track","push","undefined","indexOf","check","excludedTrackStatesNames","filter","c","map","excludedTrackTypesNames","res","concat","GlobalElementInjectionService","array","keyStatus","OkStatus","header","buttons","text","role","handler","accept","alert","RefuseStatus","remove","find","el","index","findIndex","slice","providedIn"],"mappings":"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","file":"rendez-vous-rendez-vous-module-es5.js","sourcesContent":["export default \"<ion-header>\\n  <ion-toolbar>\\n    <ion-title>Nouveau rendez-vous</ion-title>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-grid fixed>\\n  <ion-row>\\n    <ion-col size-md=\\\"6\\\" offset-md=\\\"3\\\">\\n      <ion-card>\\n        <ion-card-header>\\n          <ion-card-title> </ion-card-title>\\n        </ion-card-header>\\n        <ion-card-content>\\n          <form\\n            [formGroup]=\\\"propositionForm\\\"\\n            (ngSubmit)=\\\"propose()\\\"\\n            method=\\\"post\\\"\\n          >\\n            <div class=\\\"mb-14\\\">\\n              <label>Choisir praticien</label>\\n              <ion-select\\n                placeholder=\\\"Select\\\"\\n                formControlName=\\\"praticien\\\"\\n                required\\n              >\\n                <ion-select-option\\n                  *ngFor=\\\"let item of praticiens\\\"\\n                  [value]=\\\"item.id\\\"\\n                  >{{\\n                    item.firstName.toString() + \\\" \\\" + item.lastName.toString()\\n                  }}</ion-select-option\\n                >\\n              </ion-select>\\n            </div>\\n            <div class=\\\"mb-14\\\">\\n              <label>Type de rendez-vous</label>\\n              <ion-select formControlName=\\\"typeRdv\\\" required>\\n                <ion-select-option value=\\\"vaccination\\\"\\n                  >Vaccination</ion-select-option\\n                >\\n                <ion-select-option value=\\\"consultation\\\"\\n                  >Consultation</ion-select-option\\n                >\\n                <ion-select-option value=\\\"intervention\\\"\\n                  >Intervention</ion-select-option\\n                >\\n              </ion-select>\\n            </div>\\n            <div class=\\\"mb-14\\\">\\n              <label>Description </label>\\n              <ion-input\\n                type=\\\"text\\\"\\n                required\\n                formControlName=\\\"description\\\"\\n              ></ion-input>\\n            </div>\\n            <div class=\\\"mb-14\\\">\\n              <label>Propose une date </label>\\n              <ion-datetime\\n                display-format=\\\"MMM DD, YYYY\\\"\\n                formControlName=\\\"dateRdv\\\"\\n                required\\n              ></ion-datetime>\\n            </div>\\n\\n            <div class=\\\"mb-14\\\">\\n              <label>Propose un horaire</label>\\n              <ion-datetime\\n                display-format=\\\"h:mm A\\\"\\n                picker-format=\\\"h:mm A\\\"\\n                formControlName=\\\"heureRdv\\\"\\n                required\\n              ></ion-datetime>\\n            </div>\\n\\n            <ion-row>\\n              <ion-col>\\n                <ion-button color=\\\"sred\\\" expand=\\\"block\\\" (click)=\\\"dismiss()\\\">\\n                  <ion-icon slot=\\\"start\\\" name=\\\"\\\"> x </ion-icon\\n                  >Cancel</ion-button\\n                >\\n                <legend class=\\\"ion-text-center\\\"></legend>\\n                <ion-button type=\\\"submit\\\" color=\\\"sgreen\\\" expand=\\\"block\\\"\\n                  ><ion-icon slot=\\\"start\\\" name=\\\"save-outline\\\"></ion-icon>\\n                  Save\\n                </ion-button>\\n              </ion-col>\\n            </ion-row>\\n          </form>\\n        </ion-card-content>\\n      </ion-card>\\n    </ion-col>\\n  </ion-row>\\n</ion-grid>\\n\";","export default \"<ion-header translucent=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons *ngIf=\\\"!ios && !showSearchbar\\\" slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-menu-button *ngIf=\\\"ios\\\"></ion-menu-button>\\n\\n    <ion-segment *ngIf=\\\"ios\\\" [(ngModel)]=\\\"segment\\\" (ionChange)=\\\"showAccepted()\\\">\\n      <ion-segment-button value=\\\"all\\\" color=\\\"sgreen\\\"> All </ion-segment-button>\\n      <ion-segment-button value=\\\"favorites\\\" color=\\\"sgreen\\\">\\n        Accepté\\n      </ion-segment-button>\\n    </ion-segment>\\n    <ion-title *ngIf=\\\"!ios && !showSearchbar\\\">Rendez-vous</ion-title>\\n    <ion-searchbar\\n      *ngIf=\\\"showSearchbar\\\"\\n      showCancelButton=\\\"always\\\"\\n      [(ngModel)]=\\\"queryText\\\"\\n      (ionChange)=\\\"updateRdvList()\\\"\\n      (ionCancel)=\\\"showSearchbar = false\\\"\\n      placeholder=\\\"Rechercher\\\"\\n    ></ion-searchbar>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button *ngIf=\\\"!ios && !showSearchbar\\\" (click)=\\\"showSearchbar = true\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"search\\\"></ion-icon>\\n      </ion-button>\\n      <ion-button *ngIf=\\\"!showSearchbar\\\" (click)=\\\"presentFilter()\\\">\\n        <span *ngIf=\\\"ios\\\">Filtrer</span>\\n        <span *ngIf=\\\"!ios\\\">\\n          <ion-icon slot=\\\"icon-only\\\" name=\\\"options\\\"></ion-icon>\\n        </span>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n  <ion-toolbar *ngIf=\\\"!ios\\\">\\n    <ion-segment [(ngModel)]=\\\"segment\\\" (ionChange)=\\\"showAccepted()\\\">\\n      <ion-segment-button value=\\\"all\\\"> Tout </ion-segment-button>\\n      <ion-segment-button value=\\\"accepted\\\"> Accépté </ion-segment-button>\\n    </ion-segment>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content fullscreen=\\\"true\\\">\\n  <ion-header collapse=\\\"condense\\\">\\n    <ion-toolbar>\\n      <ion-title size=\\\"large\\\">Rendez-vous</ion-title>\\n    </ion-toolbar>\\n    <ion-toolbar>\\n      <ion-searchbar\\n        [(ngModel)]=\\\"queryText\\\"\\n        (ionChange)=\\\"filterItems($event)\\\"\\n        placeholder=\\\"Search\\\"\\n      ></ion-searchbar>\\n    </ion-toolbar>\\n  </ion-header>\\n\\n  <ion-list #scheduleList [hidden]=\\\"shownSessions === 0\\\">\\n    <ion-item-group *ngFor=\\\"let rdv of rdvFiltered\\\">\\n      <ion-item-divider sticky>\\n        <ion-label class=\\\"ion-text-center\\\"> {{ rdv.date}} </ion-label>\\n      </ion-item-divider>\\n\\n      <ion-item-sliding\\n        *ngFor=\\\"let eachRdv of rdv.groups\\\"\\n        #slidingItem\\n        [attr.track]=\\\"eachRdv.type | lowercase\\\"\\n      >\\n        <ion-item *ngIf=\\\"eachRdv.show === true\\\">\\n          <ion-grid>\\n            <ion-row (click)=\\\"alert()\\\">\\n              <ion-col size=\\\"7\\\">\\n                <ion-label class=\\\"information\\\">\\n                  <h2 class=\\\"makeBoldAndLarge\\\">\\n                    {{eachRdv.praticien.firstName + \\\" \\\" +\\n                    eachRdv.praticien.lastName}}\\n                  </h2>\\n                  <p>{{eachRdv.date}}</p>\\n                  <p>{{eachRdv.type}}</p>\\n                </ion-label>\\n              </ion-col>\\n              <ion-col class=\\\"middle\\\" size=\\\"3\\\">\\n                <ion-button\\n                  *ngIf=\\\"eachRdv.status === OKSTATUS\\\"\\n                  class=\\\"status\\\"\\n                  color=\\\"sgreen\\\"\\n                  expand=\\\"block\\\"\\n                  fill=\\\"outline\\\"\\n                >\\n                  Accepted\\n                </ion-button>\\n\\n                <ion-button\\n                  *ngIf=\\\"eachRdv.status === NOPSTATUS\\\"\\n                  class=\\\"status\\\"\\n                  color=\\\"sred\\\"\\n                  expand=\\\"block\\\"\\n                  fill=\\\"outline\\\"\\n                >\\n                  Refused\\n                </ion-button>\\n\\n                <ion-button\\n                  *ngIf=\\\"eachRdv.status === PENDSTATUS\\\"\\n                  class=\\\"status\\\"\\n                  color=\\\"sorange\\\"\\n                  expand=\\\"block\\\"\\n                  fill=\\\"outline\\\"\\n                >\\n                  Pending\\n                </ion-button>\\n              </ion-col>\\n            </ion-row>\\n\\n            <ion-row *ngIf=\\\"eachRdv.status === PENDSTATUS\\\">\\n              <ion-col class=\\\"btn-cnfrm\\\">\\n                <ion-button\\n                  (click)=\\\"alertAcceptRdv(eachRdv.id)\\\"\\n                  expand=\\\"block\\\"\\n                  color=\\\"sgreen\\\"\\n                >\\n                  <ion-icon\\n                    slot=\\\"start\\\"\\n                    name=\\\"checkmark-circle-outline\\\"\\n                  ></ion-icon>\\n                  <ion-label>Accept</ion-label>\\n                </ion-button>\\n\\n                <ion-button\\n                  (click)=\\\"alertRemoveRdv(eachRdv.id)\\\"\\n                  expand=\\\"block\\\"\\n                  color=\\\"sred\\\"\\n                >\\n                  <ion-icon name=\\\"close-circle-outline\\\" slot=\\\"start\\\"></ion-icon>\\n                  <ion-label>Decline</ion-label>\\n                </ion-button>\\n              </ion-col>\\n            </ion-row>\\n          </ion-grid>\\n        </ion-item>\\n      </ion-item-sliding>\\n    </ion-item-group>\\n  </ion-list>\\n\\n  <ion-list-header [hidden]=\\\"rdvShow.size != 0\\\">\\n    No Sessions Found\\n  </ion-list-header>\\n\\n  <ion-fab slot=\\\"fixed\\\" vertical=\\\"bottom\\\" horizontal=\\\"end\\\" #fab>\\n    <ion-fab-button color=\\\"sgreen\\\" (click)=\\\"openNewRdvModal()\\\">\\n      <ion-icon name=\\\"add\\\"></ion-icon>\\n    </ion-fab-button>\\n  </ion-fab>\\n</ion-content>\\n\";","export default \"<ion-header translucent=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button *ngIf=\\\"ios\\\" (click)=\\\"dismiss()\\\">Cancel</ion-button>\\n      <ion-button *ngIf=\\\"!ios\\\" (click)=\\\"selectAll(false)\\\">Reset</ion-button>\\n    </ion-buttons>\\n\\n    <ion-title class=\\\"ion-text-center\\\"> Filter Track Sessions </ion-title>\\n\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"applyFilters()\\\" strong>Done</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list [lines]=\\\"ios ? 'inset' : 'full'\\\">\\n    <ion-list-header>Tracks</ion-list-header>\\n    <ion-card>\\n      <ion-card-title>Types</ion-card-title>\\n      <ion-card-content>\\n        <ion-item\\n          *ngFor=\\\"let track of tracksTypes\\\"\\n          [attr.track]=\\\"track.name | lowercase\\\"\\n          lines=\\\"none\\\"\\n        >\\n          <ion-icon\\n            *ngIf=\\\"ios\\\"\\n            slot=\\\"start\\\"\\n            [name]=\\\"track.icon\\\"\\n            color=\\\"medium\\\"\\n          ></ion-icon>\\n          <ion-label>{{ track.name }}</ion-label>\\n          <ion-checkbox\\n            [(ngModel)]=\\\"track.isChecked\\\"\\n            color=\\\"sgreen\\\"\\n          ></ion-checkbox>\\n        </ion-item>\\n      </ion-card-content>\\n    </ion-card>\\n\\n    <ion-card>\\n      <ion-card-title>States</ion-card-title>\\n      <ion-card-content>\\n        <ion-item\\n          *ngFor=\\\"let track of tracksStates\\\"\\n          [attr.track]=\\\"track.name | lowercase\\\"\\n          lines=\\\"none\\\"\\n        >\\n          <ion-icon\\n            *ngIf=\\\"ios\\\"\\n            slot=\\\"start\\\"\\n            [name]=\\\"track.icon\\\"\\n            color=\\\"medium\\\"\\n          ></ion-icon>\\n          <ion-label>{{ track.name }}</ion-label>\\n          <ion-checkbox\\n            [(ngModel)]=\\\"track.isChecked\\\"\\n            color=\\\"sred\\\"\\n          ></ion-checkbox>\\n        </ion-item>\\n      </ion-card-content>\\n    </ion-card>\\n  </ion-list>\\n</ion-content>\\n\\n<ion-footer translucent=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons slot=\\\"start\\\">\\n      <ion-button (click)=\\\"selectAll(false)\\\">Deselect All</ion-button>\\n    </ion-buttons>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button (click)=\\\"selectAll(true)\\\">Select All</ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-footer>\\n\";","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3BhdGllbnQvcmVuZGV6LXZvdXMvbmV3LXJkdi9uZXctcmR2LmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, Input, OnInit } from \"@angular/core\";\nimport { FormControl, FormGroup, Validators } from \"@angular/forms\";\nimport { ModalController, NavController, NavParams } from \"@ionic/angular\";\nimport { Storage } from \"@ionic/storage\";\nimport { IPatient, IRdvPatient } from \"src/app/Interfaces/patient.interface\";\nimport { IUserPraticien } from \"src/app/Interfaces/praticien.interface\";\nimport { PraticienService } from \"src/app/services/praticien.service\";\n\n@Component({\n  selector: \"app-new-rdv\",\n  templateUrl: \"./new-rdv.component.html\",\n  styleUrls: [\"./new-rdv.component.scss\"],\n})\nexport class NewRdvComponent implements OnInit {\n  @Input() test: String;\n  @Input() praticiens: IUserPraticien[];\n\n  public propositionForm: FormGroup;\n  selected: any;\n  constructor(\n    private praticienSrvc: PraticienService,\n    private navCtrl: NavController,\n    private navParms: NavParams,\n    private modalCtrl: ModalController,\n    private storage: Storage\n  ) {}\n\n  async ngOnInit() {\n    this.propositionForm = new FormGroup({\n      praticien: new FormControl(\"\", [Validators.required]),\n      typeRdv: new FormControl(\"\", [Validators.required]),\n      dateRdv: new FormControl(\"\", [Validators.required]),\n      heureRdv: new FormControl(\"\", [Validators.required]),\n      description: new FormControl(\"\", [Validators.required]),\n    });\n\n    this.praticiens = this.navParms.get(\"praticiens\");\n    this.praticiens.forEach((element) => {\n      console.log(\"NewRdvComponent -> patients\", element.firstName);\n    });\n  }\n\n  isFieldInvalid(dataFormStep, field: string) {\n    return (\n      (!dataFormStep.get(field).valid && dataFormStep.get(field).touched) ||\n      (dataFormStep.get(field).untouched && !dataFormStep.get(field).valid)\n    );\n  }\n\n  async propose() {\n    const prop: IRdvPatient = {\n      description: this.propositionForm.value.description,\n      praticien: this.propositionForm.value.praticien,\n      typeRdv: this.propositionForm.value.typeRdv,\n      dateRdv: this.propositionForm.value.dateRdv,\n      heureRdv: this.propositionForm.value.heureRdv,\n      // id: await this.praticienSrvc.getUserIDByStorage(),\n      id: 0,\n    };\n\n    console.log(\n      this.propositionForm.value.patient,\n      this.propositionForm.value.dateRdv,\n      this.propositionForm.value.description,\n      this.propositionForm.value.heureRdv,\n      prop.id\n    );\n    if (this.propositionForm.valid) {\n      console.log(\" proposition envoyé \");\n\n      // this.praticienSrvc.proposeRdv(prop); //TODO: post proposition\n      this.backToList();\n    } else {\n      console.log(\" not valid \");\n    }\n  }\n\n  backToList() {\n    this.navCtrl.navigateRoot(\"/praticien/proposition-rdv\");\n    this.dismiss();\n  }\n\n  async cancel() {\n    console.log(\" cancel \");\n    this.backToList();\n  }\n\n  dismiss() {\n    // using the injected ModalController this page\n    // can \"dismiss\" itself and optionally pass back data\n    this.modalCtrl.dismiss({\n      dismissed: true,\n    });\n  }\n}\n","import { NgModule } from \"@angular/core\";\nimport { Routes, RouterModule } from \"@angular/router\";\n\nimport { RendezVousPage } from \"./rendez-vous.page\";\n\nconst routes: Routes = [\n  {\n    path: \"\",\n    component: RendezVousPage,\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class RendezVousPageRoutingModule {}\n","import { NgModule } from \"@angular/core\";\nimport { CommonModule } from \"@angular/common\";\nimport { FormsModule, ReactiveFormsModule } from \"@angular/forms\";\n\nimport { IonicModule } from \"@ionic/angular\";\n\nimport { RendezVousPageRoutingModule } from \"./rendez-vous-routing.module\";\n\nimport { RendezVousPage } from \"./rendez-vous.page\";\nimport { RendrezVousFilterComponent } from \"./rendrez-vous-filter/rendrez-vous-filter.component\";\nimport { NewRdvComponent } from \"./new-rdv/new-rdv.component\";\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    RendezVousPageRoutingModule,\n    ReactiveFormsModule,\n  ],\n  declarations: [RendezVousPage, RendrezVousFilterComponent, NewRdvComponent],\n})\nexport class RendezVousPageModule {}\n","export default \"ion-fab-button {\\n  --background: var(--ion-color-step-150, #fff);\\n  --background-hover: var(--ion-color-step-200, #f2f2f2);\\n  --background-focused: var(--ion-color-step-250, #d9d9d9);\\n  --color: var(--ion-color-primary, #3880ff);\\n}\\n\\n/*\\n     * Material Design uses the ripple for activated\\n     * so only style the iOS activated background\\n     */\\n\\n.ios ion-fab-button {\\n  --background-activated: var(--ion-color-step-250, #d9d9d9);\\n}\\n\\nion-item-sliding[track=ionic] ion-label.information {\\n  border-left: 2px solid var(--ion-color-primary);\\n  padding-left: 3px;\\n}\\n\\nion-item-sliding[track=vaccination] ion-label.information {\\n  border-left: 2px solid #8e8d93;\\n  padding-left: 3px;\\n}\\n\\nion-item-sliding[track=consultation] ion-label.information {\\n  border-left: 2px solid #fed035;\\n  padding-left: 3px;\\n}\\n\\nion-item-sliding[track=intervention] ion-label.information {\\n  border-left: 2px solid #6600cc;\\n  padding-left: 3px;\\n}\\n\\n.status {\\n  text-align: right;\\n  width: 90px;\\n}\\n\\n.middle {\\n  display: flex;\\n  align-items: center;\\n}\\n\\n.btn-cnfrm {\\n  display: flex;\\n  justify-content: center;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcGF0aWVudC9yZW5kZXotdm91cy9yZW5kZXotdm91cy5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSw2Q0FBQTtFQUNBLHNEQUFBO0VBQ0Esd0RBQUE7RUFFQSwwQ0FBQTtBQUFGOztBQUdBOzs7TUFBQTs7QUFJQTtFQUNFLDBEQUFBO0FBQUY7O0FBWUk7RUFDRSwrQ0FBQTtFQUNBLGlCQUFBO0FBVE47O0FBT0k7RUFDRSw4QkFBQTtFQUNBLGlCQUFBO0FBSk47O0FBRUk7RUFDRSw4QkFBQTtFQUNBLGlCQUFBO0FBQ047O0FBSEk7RUFDRSw4QkFBQTtFQUNBLGlCQUFBO0FBTU47O0FBREE7RUFDRSxpQkFBQTtFQUNBLFdBQUE7QUFJRjs7QUFEQTtFQUNFLGFBQUE7RUFDQSxtQkFBQTtBQUlGOztBQURBO0VBQ0UsYUFBQTtFQUNBLHVCQUFBO0FBSUYiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9wYXRpZW50L3JlbmRlei12b3VzL3JlbmRlei12b3VzLnBhZ2Uuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbImlvbi1mYWItYnV0dG9uIHtcclxuICAtLWJhY2tncm91bmQ6IHZhcigtLWlvbi1jb2xvci1zdGVwLTE1MCwgI2ZmZik7XHJcbiAgLS1iYWNrZ3JvdW5kLWhvdmVyOiB2YXIoLS1pb24tY29sb3Itc3RlcC0yMDAsICNmMmYyZjIpO1xyXG4gIC0tYmFja2dyb3VuZC1mb2N1c2VkOiB2YXIoLS1pb24tY29sb3Itc3RlcC0yNTAsICNkOWQ5ZDkpO1xyXG5cclxuICAtLWNvbG9yOiB2YXIoLS1pb24tY29sb3ItcHJpbWFyeSwgIzM4ODBmZik7XHJcbn1cclxuXHJcbi8qXHJcbiAgICAgKiBNYXRlcmlhbCBEZXNpZ24gdXNlcyB0aGUgcmlwcGxlIGZvciBhY3RpdmF0ZWRcclxuICAgICAqIHNvIG9ubHkgc3R5bGUgdGhlIGlPUyBhY3RpdmF0ZWQgYmFja2dyb3VuZFxyXG4gICAgICovXHJcbi5pb3MgaW9uLWZhYi1idXR0b24ge1xyXG4gIC0tYmFja2dyb3VuZC1hY3RpdmF0ZWQ6IHZhcigtLWlvbi1jb2xvci1zdGVwLTI1MCwgI2Q5ZDlkOSk7XHJcbn1cclxuXHJcbiRjYXRlZ29yaWVzOiAoXHJcbiAgaW9uaWM6IHZhcigtLWlvbi1jb2xvci1wcmltYXJ5KSxcclxuICB2YWNjaW5hdGlvbjogIzhlOGQ5MyxcclxuICBjb25zdWx0YXRpb246ICNmZWQwMzUsXHJcbiAgaW50ZXJ2ZW50aW9uOiAjNjYwMGNjLFxyXG4pO1xyXG5cclxuQGVhY2ggJHRyYWNrLCAkdmFsdWUgaW4gbWFwLXJlbW92ZSgkY2F0ZWdvcmllcykge1xyXG4gIGlvbi1pdGVtLXNsaWRpbmdbdHJhY2s9XCIjeyR0cmFja31cIl0gaW9uLWxhYmVsIHtcclxuICAgICYuaW5mb3JtYXRpb24ge1xyXG4gICAgICBib3JkZXItbGVmdDogMnB4IHNvbGlkICR2YWx1ZTtcclxuICAgICAgcGFkZGluZy1sZWZ0OiAzcHg7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcblxyXG4uc3RhdHVzIHtcclxuICB0ZXh0LWFsaWduOiByaWdodDtcclxuICB3aWR0aDogOTBweDtcclxufVxyXG5cclxuLm1pZGRsZSB7XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG59XHJcblxyXG4uYnRuLWNuZnJtIHtcclxuICBkaXNwbGF5OiBmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG59XHJcbiJdfQ== */\";","import { Component, OnInit, ViewChild } from \"@angular/core\";\nimport { IUserPraticien } from \"src/app/Interfaces/praticien.interface\";\nimport { RendrezVousFilterComponent } from \"./rendrez-vous-filter/rendrez-vous-filter.component\";\nimport {\n  AlertController,\n  LoadingController,\n  ModalController,\n  IonRouterOutlet,\n  ToastController,\n  Config,\n  IonList,\n} from \"@ionic/angular\";\nimport { PraticienService } from \"src/app/services/praticien.service\";\nimport { Router } from \"@angular/router\";\nimport { PatientService } from \"src/app/services/patient.service\";\nimport { NewRdvComponent } from \"./new-rdv/new-rdv.component\";\nimport { DataTransformerService } from \"src/app/services/data-transformer.service\";\nimport { IRdvPatient } from \"src/app/Interfaces/patient.interface\";\nimport { GlobalElementInjectionService } from \"src/app/services/global-element-injection.service\";\n\n@Component({\n  selector: \"app-rendez-vous\",\n  templateUrl: \"./rendez-vous.page.html\",\n  styleUrls: [\"./rendez-vous.page.scss\"],\n})\nexport class RendezVousPage implements OnInit {\n  @ViewChild(\"List\", { static: true }) List: IonList; // TODO : get all consultation list\n\n  ios: boolean;\n  dayIndex = 0;\n  queryText = \"\";\n  segment = \"all\";\n  excludeTracksStates: any = [];\n  excludeTracksTypes: any = [];\n  shownSessions: any = [];\n  rdvs: IRdvPatient[] = [];\n  rdvShow: any = [];\n  allBrute: any = [];\n  confDate: string;\n  showSearchbar: boolean;\n  rdvFiltered: any = [];\n  praticiens: IUserPraticien[];\n  public OKSTATUS = \"Accepted\";\n  public NOPSTATUS = \"Refused\";\n  public PENDSTATUS = \"Pending\";\n  constructor(\n    public alertCtrl: AlertController,\n    public patientSrvc: PatientService, // TODO : list of data\n    public loadingCtrl: LoadingController,\n    public modalCtrl: ModalController,\n    public router: Router,\n    public routerOutlet: IonRouterOutlet,\n    public toastCtrl: ToastController,\n    public praticientSrvc: PraticienService,\n    public config: Config,\n    private dataTransformer: DataTransformerService,\n    private globaleEl: GlobalElementInjectionService\n  ) {}\n\n  ngOnInit() {\n    this.getAllData();\n    this.ios = this.config.get(\"mode\") === \"ios\";\n    this.getPraticiens();\n  }\n\n  showAccepted() {\n    this.rdvFiltered = this.dataTransformer.onlyAccepted(\n      this.rdvFiltered,\n      \"status\",\n      this.OKSTATUS,\n      this.segment\n    );\n  }\n\n  async openNewRdvModal() {\n    const newRdvModal = await this.modalCtrl.create({\n      component: NewRdvComponent,\n      cssClass: \"test-class\",\n      swipeToClose: true,\n      componentProps: {\n        praticiens: this.praticiens,\n        test: \"test\",\n      },\n    });\n    newRdvModal.onDidDismiss().then(() => {\n      this.updateRdvList();\n    });\n    return await newRdvModal.present();\n  }\n\n  getAllData() {\n    this.patientSrvc.getAllRdv().subscribe((data: any) => {\n      this.rdvs = data; // TODO: Data from DB\n      const result = this.dataTransformer.allData(data);\n      this.allBrute = result;\n      this.rdvShow = result.data;\n      this.rdvFiltered = result.dataByDate;\n    });\n  }\n\n  updateRdvList() {\n    if (this.List) {\n      this.List.closeSlidingItems();\n    }\n  }\n\n  // TODO : exclude on filter\n  filterItems(ev: any) {\n    const query = ev.target.value.toLowerCase();\n    requestAnimationFrame(() => {\n      if (!query || query === \"\") {\n        this.showAccepted();\n        return;\n      }\n      this.rdvFiltered = this.dataTransformer.filterItems(\n        query,\n        [\"objetConsultation\", \"vaccin\"],\n        \"status\",\n        this.segment,\n        this.rdvFiltered,\n        \"praticien\",\n        [\"firstName\", \"lastName\"]\n      );\n    });\n  }\n\n  alert() {\n    console.log(\"ok ++++ \");\n  }\n\n  async presentFilter() {\n    const modal = await this.modalCtrl.create({\n      component: RendrezVousFilterComponent,\n      swipeToClose: true,\n      presentingElement: this.routerOutlet.nativeEl,\n      componentProps: {\n        excludeTracksStates: this.excludeTracksStates,\n        excludeTracksTypes: this.excludeTracksTypes,\n      },\n    });\n    await modal.present();\n\n    const { data } = await modal.onWillDismiss();\n\n    if (data) {\n      this.excludeTracksStates = data.states;\n      this.excludeTracksTypes = data.types;\n      this.rdvFiltered = this.dataTransformer.hideOnexclude(\n        data.fuseData,\n        [\"type\", \"status\"],\n        this.segment,\n        this.rdvFiltered\n      );\n    }\n  }\n\n  async openSocial(network: string, fab: HTMLIonFabElement) {\n    const loading = await this.loadingCtrl.create({\n      message: `Posting to ${network}`,\n      duration: Math.random() * 1000 + 500,\n    });\n    await loading.present();\n    await loading.onWillDismiss();\n    fab.close();\n  }\n\n  getPraticiens() {\n    // TODO APK: à decommenter\n    // this.praticientSrvc.getAllPraticien().subscribe((data) => {\n    //   this.praticiens = data;\n    // });\n  }\n\n  alertAcceptRdv(id) {\n    this.globaleEl.alertAccept(id, this.rdvs, \"status\", this.OKSTATUS);\n  }\n\n  alertRemoveRdv(id) {\n    this.globaleEl.alertRemove(id, this.rdvs, \"status\", this.NOPSTATUS);\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3BhZ2VzL3BhdGllbnQvcmVuZGV6LXZvdXMvcmVuZHJlei12b3VzLWZpbHRlci9yZW5kcmV6LXZvdXMtZmlsdGVyLmNvbXBvbmVudC5zY3NzIn0= */\";","import { Component, OnInit } from \"@angular/core\";\nimport { Config, ModalController, NavParams } from \"@ionic/angular\";\nimport { PatientService } from \"src/app/services/patient.service\";\n\n@Component({\n  selector: \"app-rendrez-vous-filter\",\n  templateUrl: \"./rendrez-vous-filter.component.html\",\n  styleUrls: [\"./rendrez-vous-filter.component.scss\"],\n})\nexport class RendrezVousFilterComponent {\n  ios: boolean;\n\n  trackStatsMock: { name: string; icon: string; isChecked: boolean }[] = [\n    {\n      name: \"Accepted\",\n      icon: \"\",\n      isChecked: true,\n    },\n    {\n      name: \"Refused\",\n      icon: \"\",\n      isChecked: true,\n    },\n    {\n      name: \"Pending\",\n      icon: \"\",\n      isChecked: true,\n    },\n  ];\n\n  trackTypeMock: { name: string; icon: string; isChecked: boolean }[] = [\n    {\n      name: \"Intervention\",\n      icon: \"\",\n      isChecked: true,\n    },\n    {\n      name: \"Consultation\",\n      icon: \"\",\n      isChecked: true,\n    },\n    {\n      name: \"Vaccination\",\n      icon: \"\",\n      isChecked: true,\n    },\n  ];\n\n  public tracksStates: {\n    name: string;\n    icon: string;\n    isChecked: boolean;\n  }[] = [];\n  public tracksTypes: { name: string; icon: string; isChecked: boolean }[] = [];\n\n  constructor(\n    private patientSrvc: PatientService,\n    private config: Config,\n    public modalCtrl: ModalController,\n    public navParams: NavParams\n  ) {}\n\n  ionViewWillEnter() {\n    this.ios = this.config.get(\"mode\") === `ios`;\n\n    // passed in array of track names that should be excluded (unchecked)\n    const excludedTrackStates = this.navParams.get(\"excludeTracksStates\");\n    console.log(\n      \"RendrezVousFilterComponent -> ionViewWillEnter -> excludedTracksStates\",\n      excludedTrackStates\n    );\n    const excludedTrackTypes = this.navParams.get(\"excludeTracksTypes\");\n    console.log(\n      \"RendrezVousFilterComponent -> ionViewWillEnter -> excludedTracksTypes\",\n      excludedTrackTypes\n    );\n\n    this.trackStatsMock.forEach((track) => {\n      this.tracksStates.push({\n        name: track.name,\n        icon: track.icon,\n        isChecked:\n          excludedTrackStates === undefined\n            ? true\n            : excludedTrackStates.indexOf(track.name.toLowerCase()) === -1,\n      });\n    });\n\n    this.trackTypeMock.forEach((track) => {\n      this.tracksTypes.push({\n        name: track.name,\n        icon: track.icon,\n        isChecked:\n          excludedTrackTypes === undefined\n            ? true\n            : excludedTrackTypes.indexOf(track.name.toLowerCase()) === -1,\n      });\n    });\n  }\n\n  selectAll(check: boolean) {\n    // set all to checked or unchecked\n    this.tracksStates.forEach((track) => {\n      track.isChecked = check;\n    });\n    this.tracksTypes.forEach((track) => {\n      track.isChecked = check;\n    });\n  }\n\n  applyFilters() {\n    // Pass back a new array of track names to exclude\n    const excludedTrackStatesNames = this.tracksStates\n      .filter((c) => !c.isChecked)\n      .map((c) => c.name.toLowerCase());\n\n    const excludedTrackTypesNames = this.tracksTypes\n      .filter((c) => !c.isChecked)\n      .map((c) => c.name.toLowerCase());\n    const res = excludedTrackStatesNames.concat(excludedTrackTypesNames);\n    this.dismiss({\n      states: excludedTrackStatesNames,\n      types: excludedTrackTypesNames,\n      fuseData: res,\n    });\n  }\n\n  dismiss(data?: any) {\n    console.log(\"RendrezVousFilterComponent -> dismiss -> data\", data);\n    // using the injected ModalController this page\n    // can \"dismiss\" itself and pass back data\n    this.modalCtrl.dismiss(data);\n  }\n}\n","import { Injectable } from \"@angular/core\";\nimport { AlertController } from \"@ionic/angular\";\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class GlobalElementInjectionService {\n  constructor(private alertCtrl: AlertController) {}\n\n  async alertAccept(\n    id,\n    array = [],\n    keyStatus: String = \"status\",\n    OkStatus: String = \"Accepted\"\n  ) {\n    const alert = await this.alertCtrl.create({\n      cssClass: \"my-custom-class\",\n      header: \"Accept\",\n      message: \"Do you really want to accept it ? \",\n      buttons: [\n        {\n          text: \"Cancel\",\n          role: \"cancel\",\n          cssClass: \"secondary\",\n          handler: () => {\n            console.log(\"Confirm Cancel: blah\");\n          },\n        },\n        {\n          text: \"OK\",\n          handler: () => {\n            console.log(\"data accepted \" + id);\n            this.accept(id, array, keyStatus, OkStatus);\n          },\n        },\n      ],\n    });\n    await alert.present();\n  }\n\n  async alertRemove(\n    id,\n    array = [],\n    keyStatus: String = \"status\",\n    RefuseStatus: String = \"Refused\"\n  ) {\n    const alert = await this.alertCtrl.create({\n      cssClass: \"my-custom-class\",\n      header: \"Refuse\",\n      message: \"Do you really want to refuse it ? \",\n      buttons: [\n        {\n          text: \"Cancel\",\n          role: \"cancel\",\n          cssClass: \"secondary\",\n          handler: () => {\n            console.log(\"Confirm Cancel: blah\");\n          },\n        },\n        {\n          text: \"OK\",\n          handler: () => {\n            console.log(\"data refused \" + id);\n            this.remove(id, array, keyStatus, RefuseStatus);\n          },\n        },\n      ],\n    });\n    await alert.present();\n  }\n\n  // TODO:change by id // actually it s his name\n  accept(\n    id,\n    array = [],\n    keyStatus: String = \"status\",\n    OkStatus: String = \"Accepted\"\n  ) {\n    array.find((element) => element.id == id)[`${keyStatus}`] = OkStatus;\n  }\n\n  remove(\n    id,\n    array = [],\n    keyStatus: String = \"status\",\n    RefuseStatus: String = \"Refused\"\n  ) {\n    const el = (test) => test.id == id;\n    array.find((element) => element.id == id)[`${keyStatus}`] = RefuseStatus;\n    const index = array.findIndex(el);\n    console.log(el);\n    array.slice(index);\n  }\n}\n"]}