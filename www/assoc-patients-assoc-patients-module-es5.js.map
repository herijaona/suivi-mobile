{"version":3,"sources":["webpack:///src/app/pages/praticien/assoc-patients/assoc-patients.page.html","webpack:///src/app/pages/praticien/assoc-patients/assoc-patients-routing.module.ts","webpack:///src/app/pages/praticien/assoc-patients/assoc-patients.module.ts","webpack:///src/app/pages/praticien/assoc-patients/assoc-patients.page.scss","webpack:///src/app/pages/praticien/assoc-patients/assoc-patients.page.ts","webpack:///src/app/services/patient.service.ts"],"names":["routes","path","component","AssocPatientsPageRoutingModule","imports","forChild","exports","AssocPatientsPageModule","declarations","AssocPatientsPage","patientSrvc","globalItem","praticientSrvc","queryText","assoc_patients","presentLoading","getAllMyPatients","List","closeSlidingItems","getAssociatedPatient","subscribe","data","dismissLoading","selector","template","PatientService","http","url","url_dev","url_api","url_dev_api","url_apip","get","excludeTracks","MOCK_DATA_JSON","pipe","post","Object","keys","forEach","element","console","log","res","nomGroupe","designation","_idFamily","_idPraticien","praticien","providedIn"],"mappings":"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","file":"assoc-patients-assoc-patients-module-es5.js","sourcesContent":["export default \"<ion-header translucent=\\\"true\\\">\\n  <ion-toolbar>\\n    <ion-buttons *ngIf=\\\"!ios && !showSearchbar\\\" slot=\\\"start\\\">\\n      <ion-menu-button></ion-menu-button>\\n    </ion-buttons>\\n    <ion-menu-button *ngIf=\\\"ios\\\"></ion-menu-button>\\n    <ion-title *ngIf=\\\"!ios && !showSearchbar\\\">Mes Patients </ion-title>\\n    <ion-buttons slot=\\\"end\\\">\\n      <ion-button *ngIf=\\\"!ios && !showSearchbar\\\" (click)=\\\"showSearchbar= true\\\">\\n        <ion-icon slot=\\\"icon-only\\\" name=\\\"search\\\"></ion-icon>\\n      </ion-button>\\n    </ion-buttons>\\n  </ion-toolbar>\\n</ion-header>\\n\\n<ion-content>\\n  <ion-list #scheduleList>\\n    <ion-item-group>\\n      <ion-item-sliding #slidingItem>\\n        <ion-item lines=\\\"none\\\" *ngFor=\\\"let patient of this.assoc_patients\\\">\\n          <ion-card>\\n            <ion-card-content\\n              ><ion-grid>\\n                <ion-row>\\n                  <ion-col size=\\\"4\\\">\\n                    <ion-label>\\n                      <img src=\\\"../../../assets/images/praticien.jpg\\\" />\\n                    </ion-label>\\n                  </ion-col>\\n                  <ion-col size=\\\"8\\\" class=\\\"information\\\">\\n                    <h2 class=\\\"name\\\">\\n                      Dr. {{patient.firstName}} {{patient.lastName}}\\n                    </h2>\\n\\n                    <ion-label> </ion-label>\\n                    <ion-label> Pays : {{patient.state}} </ion-label>\\n                    <ion-label> Ville : {{patient.city}} </ion-label>\\n                    <ion-label> Adresse : {{patient.address}} </ion-label>\\n                  </ion-col>\\n                </ion-row>\\n                <ion-row> </ion-row>\\n              </ion-grid>\\n            </ion-card-content>\\n          </ion-card>\\n        </ion-item>\\n      </ion-item-sliding>\\n    </ion-item-group>\\n  </ion-list>\\n</ion-content>\\n\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { AssocPatientsPage } from './assoc-patients.page';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: AssocPatientsPage\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule],\n})\nexport class AssocPatientsPageRoutingModule {}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\n\nimport { IonicModule } from '@ionic/angular';\n\nimport { AssocPatientsPageRoutingModule } from './assoc-patients-routing.module';\n\nimport { AssocPatientsPage } from './assoc-patients.page';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    IonicModule,\n    AssocPatientsPageRoutingModule\n  ],\n  declarations: [AssocPatientsPage]\n})\nexport class AssocPatientsPageModule {}\n","export default \"ion-card {\\n  flex-basis: 100%;\\n}\\n\\n.profile_praticien {\\n  width: 50%;\\n  height: 50%;\\n}\\n\\n.fonction {\\n  color: var(--ion-color-primary);\\n}\\n\\n.name {\\n  font-weight: bold;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcGFnZXMvcHJhdGljaWVuL2Fzc29jLXBhdGllbnRzL2Fzc29jLXBhdGllbnRzLnBhZ2Uuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGdCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxVQUFBO0VBQ0EsV0FBQTtBQUNGOztBQUVBO0VBQ0UsK0JBQUE7QUFDRjs7QUFDQTtFQUNFLGlCQUFBO0FBRUYiLCJmaWxlIjoic3JjL2FwcC9wYWdlcy9wcmF0aWNpZW4vYXNzb2MtcGF0aWVudHMvYXNzb2MtcGF0aWVudHMucGFnZS5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW9uLWNhcmQge1xyXG4gIGZsZXgtYmFzaXM6IDEwMCU7XHJcbn1cclxuXHJcbi5wcm9maWxlX3ByYXRpY2llbiB7XHJcbiAgd2lkdGg6IDUwJTtcclxuICBoZWlnaHQ6IDUwJTtcclxufVxyXG5cclxuLmZvbmN0aW9uIHtcclxuICBjb2xvcjogdmFyKC0taW9uLWNvbG9yLXByaW1hcnkpO1xyXG59XHJcbi5uYW1lIHtcclxuICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG4iXX0= */\";","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { IonList } from '@ionic/angular';\nimport { IProfilePatient } from 'src/app/Interfaces/patient.interface';\nimport { IUserPatient, IUserPraticien } from 'src/app/Interfaces/praticien.interface';\nimport { PatientService } from 'src/app/services/patient.service';\nimport { PraticienService } from 'src/app/services/praticien.service';\nimport { GlobalInteraction } from '../../global.interaction';\n\n@Component({\n  selector: 'app-assoc-patients',\n  templateUrl: './assoc-patients.page.html',\n  styleUrls: ['./assoc-patients.page.scss'],\n})\nexport class AssocPatientsPage implements OnInit {\n\n  @ViewChild(\"List\", { static: true }) List: IonList; // TODO : get all consultation list\n  queryText = \"\";\n  ios: boolean;\n  showSearchbar: boolean;\n  assoc_patients: IUserPatient[] = [];\n  constructor(public patientSrvc: PatientService, private globalItem: GlobalInteraction, private praticientSrvc: PraticienService) { }\n\n  ngOnInit() {\n    this.globalItem.presentLoading();\n    this.getAllMyPatients();\n  }\n  updateRdvList() {\n    if (this.List) {\n      this.List.closeSlidingItems();\n    }\n  }\n\n  getAllMyPatients() {\n    this.praticientSrvc.getAssociatedPatient().subscribe((data: IUserPatient[]) => {\n      // console.log(\"LL: AssocPatientsPage -> getAllMyPatients -> data\", data)\n      this.assoc_patients = data;\n      this.globalItem.dismissLoading();\n    })\n  }\n\n}\n","import { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { IPatient, IRegisterPatient, IVaccinPatient, IProfilePatient, IPatientFamilyGroup } from \"../Interfaces/patient.interface\";\n\nimport { from } from \"rxjs\";\nimport { CONSTANT } from \"src/constant\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { map } from \"rxjs/operators\";\nimport { environment } from \"src/environments/environment\";\nimport { IUserPraticien } from '../Interfaces/praticien.interface';\n\n@Injectable({\n  providedIn: \"root\",\n})\nexport class PatientService {\n  private url = environment.url_dev;\n  private url_api = environment.url_dev_api;\n  private url_apip = environment.url_dev;\n  private rdvData;\n  constructor(public http: HttpClient) { }\n\n  // TODO Get Patients\n  getPatients(): Observable<IPatient[]> {\n    return this.http.get<IPatient[]>(this.url + \"patients\");\n    // return this.http.get(CONSTANT.MOCK_DATA_JSON).pipe(\n    //   map((data: any) => {\n    //     return data.mockPatient;\n    //   })\n    // );\n  }\n\n  getAllRdv() {\n    return this.http.get(`${this.url_apip}patients/rdv`);\n    // return this.http.get(CONSTANT.MOCK_DATA_JSON).pipe(\n    //   map((data: any) => {\n    //     return data.mockRdvListPatient;\n    //   })\n    // );\n  }\n\n  getTracksRdv(excludeTracks?) {\n    return this.http.get(CONSTANT.MOCK_DATA_JSON).pipe(\n      map((data: any) => {\n        // console.log(\"PatientService -> getTracksRdv -> data\", excludeTracks);\n        return data;\n      })\n    );\n  }\n\n  //TODO : Get Vaccin by patient\n  getVaccinByPatient() {\n    return this.http.get<IVaccinPatient[]>(`${this.url_apip}patients/vaccination`);\n\n    // return this.http.get(CONSTANT.MOCK_DATA_JSON).pipe(\n    //   map((data: any) => {\n    //     return data.mockVaccinPatient;\n    //   })\n    // );\n  }\n\n  registerPatient(data: IRegisterPatient) {\n    return this.http.post<IRegisterPatient>(`${this.url_api}users`, data);\n    Object.keys(data).forEach((element) => {\n      console.log(\"PatientService -> registerPatient -> element\", element);\n      console.log(\"register => \", data[element]);\n    });\n  }\n\n  getProfile() {\n    return this.http.get<IProfilePatient[]>(`${this.url_apip}patient/profile`);\n\n    // return this.http.get(CONSTANT.MOCK_DATA_JSON).pipe(\n    //   map((data: any) => {\n    //     return data.mockPatientProfile;\n    //   })\n    // );\n  }\n\n  updateProfile(data) {\n    return this.http.post(`${this.url_apip}patient/profile/edit`, data);\n  }\n\n  getAssociatedPraticians(): Observable<IUserPraticien[]> {\n    const res = this.http.get<IUserPraticien[]>(`${this.url_apip}patients/praticien`);\n    res.subscribe(data => {\n      console.log(\"PatientService -> constructor -> res\", data);\n    })\n    return res;\n  }\n\n  getFamily() {\n    const res = this.http.get(`${this.url_apip}patients/family`);\n    res.subscribe(data => console.log(\"PatientService -> getFamily -> res\", data))\n    return res;\n  }\n\n  addGroupFamily(nomGroupe) {\n    const data = {\n      designation: nomGroupe,\n    }\n    console.log(\"LL: PatientService -> addGroupFamily -> data\", data)\n    const res = this.http.post(`${this.url_apip}register/group`, data);\n    return res;\n  }\n\n  addGroupFamilyMember(data) {\n    console.log(\"PatientService -> addGroupFamilyMember -> data\", data)\n    const res = this.http.post(`${this.url_api}add/membres`, data);\n    return res;\n  }\n\n  deleteFamilyMember(_idFamily) {\n    const res = this.http.delete(`${this.url_api}family/${_idFamily}`);\n    return res;\n  }\n\n  interventionPraticien(data) {\n    console.log(\"####################LL: PatientService -> interventionPraticien -> data\", data)\n    const res = this.http.post(`${this.url_apip}intervention`, data);\n    return res;\n  }\n\n  chekIfPractitionerIsAssociated(_idPraticien) {\n    const res = this.http.get(`${this.url_apip}patients/check-association/${_idPraticien}`);\n    return res;\n  }\n\n  proposeRdv(data) {\n    const res = this.http.post(`${this.url_apip}add/rdv`, data);\n    return res;\n  }\n\n  cancelRdvProposition(data) {\n    const res = this.http.post(`${this.url_api}cancel/rdv`, data);\n    return res;\n  }\n\n  postVaccinGeneration(_idPraticien) {\n    const res = this.http.post(`${this.url_apip}patient/generation`, { praticien: _idPraticien });\n    return res;\n  }\n\n}\n"]}